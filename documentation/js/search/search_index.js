var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.561,1,1.468]],["body/components/AppComponent.html",[0,1.038,1,2.628,2,2.265,3,0.259,4,0.259,5,1.974,6,1.87,7,1.974,8,0.259,9,3.877,10,0.718,11,3.714,12,3.428,13,1.87,14,2.968,15,2.956,16,2.387,17,2.151,18,2.52,19,4.421,20,2.52,21,5.762,22,2.665,23,5.762,24,1.075,25,0.019,26,1.194,27,2.507,28,0.287,29,0.604,30,1.974,31,2.387,32,2.387,33,1.602,34,2.924,35,1.974,36,1.065,37,1.974,38,1.685,39,1.974,40,1.685,41,1.974,42,1.685,43,1.194,44,1.974,45,1.685,46,1.974,47,1.774,48,1.974,49,1.774,50,1.974,51,1.685,52,1.974,53,1.602,54,1.031,55,1.974,56,1.685,57,1.974,58,1.774,59,1.316,60,1.524,61,1.974,62,1.774,63,1.602,64,1.87,65,1.974,66,0.014,67,0.014]],["title/interfaces/Auth0Error.html",[68,0.107,69,2.222]],["body/interfaces/Auth0Error.html",[3,0.221,4,0.221,8,0.221,10,0.935,25,0.019,28,0.373,36,1.056,66,0.013,67,0.013,68,0.18,69,3.094,70,0.839,71,2.69,72,2.087,73,4.38,74,4.467,75,3.77,76,0.198,77,0.396,78,1.585,79,5.405,80,5.811,81,1.359,82,0.387,83,4.467,84,4.467,85,1.892,86,5.456,87,3.317,88,2.958,89,3.317,90,2.958,91,3.984,92,3.317,93,2.011,94,3.984,95,3.317,96,3.317,97,3.317,98,3.317,99,3.317,100,2.958,101,4.505,102,4.467,103,2.958,104,2.011,105,3.317,106,2.274,107,2.958,108,3.317,109,2.958,110,2.958,111,4.467,112,2.958,113,2.69,114,2.958,115,2.958,116,2.958,117,2.958]],["title/injectables/Auth0_Guard.html",[118,1.2,119,2.861]],["body/injectables/Auth0_Guard.html",[3,0.227,4,0.227,8,0.227,10,0.628,11,2.194,24,1.271,25,0.019,26,1.045,27,2.194,28,0.251,29,0.529,36,0.663,59,1.851,66,0.013,67,0.013,75,3.814,76,0.203,77,0.402,78,0.995,82,0.34,104,3.308,118,1.697,119,4.045,120,1.936,121,5.455,122,3.393,123,2.008,124,5.949,125,2.751,126,5.584,127,2.442,128,5.949,129,3.95,130,6.619,131,3.338,132,6.619,133,1.912,134,3.95,135,4.536,136,6.351,137,5.216,138,1.728,139,2.076,140,3.149,141,4.045,142,4.423,143,1.874,144,1.092,145,3.678,146,3.95,147,3.142,148,2.309,149,4.536,150,3.95,151,2.75,152,4.045,153,2.057,154,3.95,155,3.026,156,2.057,157,2.751,158,2.35,159,2.057,160,3.95,161,3.393,162,2.35,163,3.95,164,3.95,165,3.393,166,3.393,167,2.309,168,2.221,169,2.751,170,3.95,171,2.588,172,5.281,173,3.95]],["title/components/CardComponent.html",[0,0.561,38,1.394]],["body/components/CardComponent.html",[0,1.071,1,1.52,2,2.046,3,0.222,4,0.222,5,1.691,6,1.602,7,1.691,8,0.222,10,0.615,13,1.602,14,2.91,15,2.894,16,2.157,17,2.197,18,2.277,20,2.277,22,2.408,24,1.098,25,0.019,26,1.023,28,0.246,29,0.518,30,1.691,31,2.157,32,2.157,33,1.372,34,2.754,35,1.691,36,0.988,37,1.691,38,2.35,39,1.691,40,1.444,41,1.691,42,1.444,43,1.023,44,1.691,45,1.444,46,1.691,47,1.52,48,1.691,49,1.52,50,1.691,51,1.444,52,1.691,53,1.372,54,0.883,55,1.691,56,1.444,57,1.691,58,1.52,59,1.127,60,1.306,61,1.691,62,1.52,63,2.089,64,1.602,65,1.691,66,0.013,67,0.013,76,0.199,77,0.397,82,0.267,123,1.987,133,1.673,174,2.962,175,3.338,176,3.075,177,4.508,178,5.207,179,5.207,180,3.199,181,3.098,182,2.694,183,5.207,184,1.987,185,2.148,186,3.868,187,3.322,188,2.408,189,2.301,190,2.148,191,1.372,192,2.694,193,5.207,194,5.207,195,5.207,196,5.207,197,5.207,198,5.207,199,5.207,200,3.626,201,5.207]],["title/interfaces/CardConfig.html",[68,0.107,180,1.727]],["body/interfaces/CardConfig.html",[0,0.99,3,0.378,4,0.223,8,0.223,10,0.619,25,0.019,28,0.418,29,0.7,66,0.013,67,0.013,68,0.169,70,0.846,72,1.856,76,0.2,77,0.398,78,1.317,81,1.247,82,0.376,144,1.081,176,3.269,180,2.418,184,2.339,202,2.496,203,3.363,204,2.558,205,4.222,206,4.222,207,1.932,208,2.162,209,3.658,210,3.786,211,1.993,212,4.222,213,4.113,214,2.982,215,2.982,216,2.166,217,4.397,218,3.642,219,1.8,220,4.047,221,2.711,222,2.711,223,2.496]],["title/interfaces/CardFooter.html",[68,0.107,205,2.395]],["body/interfaces/CardFooter.html",[0,0.976,3,0.372,4,0.214,8,0.214,10,0.593,25,0.019,28,0.412,29,0.68,66,0.013,67,0.013,68,0.165,70,0.811,72,1.803,76,0.192,77,0.387,78,1.635,81,1.266,82,0.38,144,1.05,176,3.276,180,1.725,184,2.191,202,2.391,203,3.364,204,2.376,205,3.977,206,3.704,207,2.134,208,2.071,209,3.928,210,4.161,211,2.354,212,4.393,213,4.664,214,3.891,215,3.891,216,2.105,217,4.321,218,3.538,219,1.725,220,3.977,221,2.598,222,2.598,223,2.391,224,3.022]],["title/interfaces/CardHeader.html",[68,0.107,206,2.395]],["body/interfaces/CardHeader.html",[0,0.982,3,0.375,4,0.218,8,0.218,10,0.604,25,0.019,28,0.415,29,0.901,66,0.013,67,0.013,68,0.167,70,0.826,72,1.826,76,0.195,77,0.392,78,1.646,81,1.308,82,0.377,144,1.392,176,3.272,180,1.757,184,2.205,202,2.436,203,3.184,204,2.547,205,3.74,206,4.008,207,2.143,208,2.858,209,3.628,210,3.74,211,1.969,212,4.188,213,4.063,214,2.911,215,2.911,216,2.132,217,4.354,218,3.584,219,1.757,220,4.008,221,2.647,222,2.647,223,2.436]],["title/components/ChipComponent.html",[0,0.561,40,1.394]],["body/components/ChipComponent.html",[0,1.061,1,1.647,2,2.159,3,0.24,4,0.24,5,1.833,6,1.736,7,1.833,8,0.24,13,1.736,14,2.941,15,2.927,16,2.275,17,2.287,18,1.833,20,2.402,22,2.54,24,1.025,25,0.019,26,1.108,28,0.266,29,0.561,30,1.833,31,2.275,32,2.275,33,1.487,34,2.843,35,1.833,36,1.028,37,1.833,38,1.565,39,1.833,40,2.427,41,1.833,42,1.565,43,1.866,44,1.833,45,1.565,46,1.833,47,1.647,48,1.833,49,1.647,50,1.833,51,1.565,52,1.833,53,1.487,54,0.957,55,1.833,56,1.565,57,1.833,58,1.647,59,1.222,60,1.415,61,1.833,62,1.647,63,1.487,64,1.736,65,1.833,66,0.014,67,0.014,72,1.487,76,0.215,77,0.419,82,0.215,123,2.068,133,1.765,181,3.268,182,2.919,184,2.068,185,2.328,192,2.919,225,3.6,226,5.492,227,5.492,228,3.675,229,5.492,230,4.192,231,5.492,232,5.492,233,5.492]],["title/interfaces/ChipConfig.html",[68,0.107,228,1.945]],["body/interfaces/ChipConfig.html",[3,0.257,4,0.257,8,0.257,25,0.019,28,0.284,29,0.971,43,1.954,66,0.014,67,0.014,68,0.128,70,0.972,76,0.23,77,0.436,78,1.913,81,1.345,82,0.379,104,2.983,106,2.914,141,4.387,207,2.156,208,3.701,209,4.03,228,2.983,234,3.841,235,6.663,236,5.104,237,5.728,238,4.92,239,5.728]],["title/components/ChipsetComponent.html",[0,0.561,42,1.394]],["body/components/ChipsetComponent.html",[0,1.042,1,1.428,2,2.24,3,0.208,4,0.208,5,1.589,6,1.505,7,1.589,8,0.208,10,0.578,13,1.505,14,2.884,15,2.867,16,2.067,17,2.128,18,2.182,20,2.182,22,2.308,24,1.145,25,0.019,26,0.961,28,0.231,29,0.486,30,1.589,31,2.067,32,2.067,33,1.289,34,2.683,35,1.589,36,0.957,37,1.589,38,1.356,39,1.589,40,2.401,41,1.589,42,2.29,43,1.86,44,1.589,45,1.356,46,1.589,47,1.428,48,1.589,49,1.428,50,1.589,51,1.356,52,1.589,53,1.289,54,0.83,55,1.589,56,1.356,57,1.589,58,1.428,59,1.059,60,1.227,61,1.589,62,1.428,63,1.289,64,1.505,65,1.589,66,0.012,67,0.012,72,1.771,76,0.187,77,0.38,82,0.256,123,1.924,133,1.604,181,2.969,182,2.531,184,1.924,185,2.018,188,1.68,191,1.289,192,2.531,200,4.628,204,1.771,240,4.366,241,3.97,242,2.783,243,3.934,244,3.199,245,4.366,246,2.969,247,4.99,248,4.99,249,4.049,250,4.99,251,5.27,252,3.634,253,3.634,254,1.781,255,1.892,256,2.162,257,3.822,258,4.99,259,4.99,260,4.99,261,4.99,262,4.99,263,4.99,264,4.99,265,4.99,266,4.99,267,4.99,268,4.99]],["title/interfaces/ChipsetConfig.html",[68,0.107,249,2.222]],["body/interfaces/ChipsetConfig.html",[3,0.243,4,0.243,8,0.243,24,0.789,25,0.019,28,0.391,29,0.873,43,1.962,66,0.014,67,0.014,68,0.176,70,0.919,76,0.217,77,0.421,78,1.391,81,1.296,82,0.376,184,2.285,204,2.597,207,1.69,208,3.068,228,3.204,243,4.755,244,3.541,249,3.286,269,2.945,270,2.731,271,4.339,272,3.541,273,4.339,274,3.239,275,4.182,276,4.182]],["title/interfaces/ChipsetContent.html",[68,0.107,271,2.395]],["body/interfaces/ChipsetContent.html",[3,0.232,4,0.232,8,0.232,10,0.644,24,0.756,25,0.019,28,0.383,29,0.951,43,1.97,66,0.013,67,0.013,68,0.172,70,0.88,76,0.208,77,0.409,78,1.681,81,1.319,82,0.376,184,2.315,204,2.434,207,1.643,208,3.345,228,3.476,243,4.776,244,4.397,249,2.41,269,2.821,270,2.711,271,4.112,272,2.597,273,3.862,274,3.102,275,4.555,276,4.555]],["title/interfaces/ChipsetHeader.html",[68,0.107,273,2.395]],["body/interfaces/ChipsetHeader.html",[3,0.234,4,0.234,8,0.234,10,0.649,24,0.762,25,0.019,28,0.384,29,0.953,43,1.972,66,0.013,67,0.013,68,0.173,70,0.888,76,0.21,77,0.411,78,1.686,81,1.331,82,0.376,184,2.259,204,2.581,207,2.104,208,3.36,228,3.15,243,4.781,244,3.462,249,2.43,269,2.845,270,2.566,271,3.878,272,2.619,273,4.126,274,3.129,275,4.564,276,4.126]],["title/components/ClusterComponent.html",[0,0.561,45,1.394]],["body/components/ClusterComponent.html",[0,1.062,1,1.553,2,2.076,3,0.227,4,0.227,5,1.728,6,1.637,7,1.728,8,0.227,10,0.628,13,1.637,14,2.918,15,2.903,16,2.188,17,2.221,18,2.309,20,2.309,22,2.442,24,1.185,25,0.019,26,1.045,28,0.251,29,0.529,30,1.728,31,2.188,32,2.188,33,1.402,34,2.777,35,1.728,36,0.999,37,1.728,38,1.475,39,1.728,40,1.475,41,1.728,42,1.475,43,1.045,44,1.728,45,2.371,46,1.728,47,1.553,48,1.728,49,1.553,50,1.728,51,1.475,52,1.728,53,1.402,54,0.902,55,1.728,56,1.475,57,1.728,58,1.553,59,1.151,60,1.334,61,1.728,62,2.076,63,2.349,64,1.637,65,1.728,66,0.013,67,0.013,72,1.874,76,0.203,77,0.402,82,0.271,123,2.008,133,1.697,181,3.142,182,2.751,184,2.008,185,2.194,187,3.393,188,1.827,191,1.402,192,2.751,246,3.098,254,1.936,255,2.057,257,4.045,277,3.026,278,4.53,279,4.557,280,5.281,281,5.281,282,3.862,283,5.281,284,3.95,285,5.281,286,5.281]],["title/interfaces/ClusterConfig.html",[68,0.107,282,2.075]],["body/interfaces/ClusterConfig.html",[3,0.219,4,0.219,8,0.219,24,0.711,25,0.019,28,0.242,36,1.131,54,0.871,66,0.013,67,0.013,68,0.109,70,0.829,76,0.196,77,0.393,78,1.766,81,1.293,82,0.384,103,4.795,104,3.26,106,3.065,139,1.498,167,1.667,169,4.36,188,2.895,216,2.136,224,3.724,275,4.321,278,4.829,282,3.477,287,3.274,288,4.695,289,5.376,290,3.893,291,5.163,292,4.795,293,4.695,294,3.511,295,3.068,296,3.591,297,5.156,298,5.376,299,3.946,300,3.812,301,4.429,302,1.579,303,1.579,304,3.812]],["title/components/DeasComponent.html",[0,0.561,47,1.468]],["body/components/DeasComponent.html",[0,1.043,1,1.659,2,2.168,3,0.242,4,0.242,5,1.846,6,1.749,7,1.846,8,0.242,10,0.671,13,1.749,14,2.943,15,2.93,16,2.286,17,2.06,18,2.413,19,3.843,20,2.413,22,2.552,24,1.147,25,0.019,26,1.116,27,2.344,28,0.268,29,0.823,30,1.846,31,2.286,32,2.286,33,1.498,34,2.851,35,1.846,36,1.032,37,1.846,38,1.576,39,1.846,40,1.576,41,1.846,42,1.576,43,1.116,44,1.846,45,1.576,46,1.846,47,2.727,48,1.846,49,1.659,50,1.846,51,1.576,52,1.846,53,1.498,54,0.964,55,1.846,56,1.576,57,1.846,58,1.659,59,1.23,60,1.425,61,1.846,62,1.659,63,1.498,64,1.749,65,1.846,66,0.014,67,0.014,82,0.217,153,2.198,175,3.537,188,2.552,189,2.511,190,2.344,191,1.498,246,2.874,254,2.069,305,3.233,306,5.518,307,5.518,308,5.181,309,5.518,310,4.708,311,5.518,312,5.518]],["title/interfaces/Definition.html",[68,0.107,313,2.075]],["body/interfaces/Definition.html",[3,0.211,4,0.211,8,0.211,10,0.911,25,0.019,28,0.433,36,0.616,54,1.61,66,0.012,67,0.012,68,0.204,70,0.798,76,0.189,77,0.383,81,1.376,82,0.362,93,1.913,106,2.823,168,2.488,211,1.24,290,2.792,294,1.913,295,2.185,302,2.879,303,1.521,313,3.859,314,2.185,315,2.553,316,4.293,317,1.606,318,2.558,319,1.697,320,2.558,321,2.558,322,2.558,323,3.223,324,2.354,325,2.558,326,2.558,327,2.991,328,2.354,329,2.558,330,2.558,331,2.558,332,2.558,333,2.558,334,2.558,335,2.558,336,2.558,337,2.558,338,2.558,339,2.558,340,2.558,341,2.991,342,2.558,343,2.558,344,2.558,345,2.558,346,2.558,347,2.558,348,2.558,349,2.558,350,2.558,351,2.558,352,2.558,353,3.223,354,2.558,355,2.558,356,2.558,357,2.185,358,2.558,359,2.558,360,2.558,361,2.558,362,2.558,363,2.558,364,2.558,365,2.354,366,2.558,367,2.354,368,2.558,369,2.558,370,2.354,371,2.558,372,2.558,373,2.354,374,2.354,375,2.792,376,2.354,377,2.185,378,2.354,379,2.354,380,2.185,381,3.223,382,2.354,383,2.354,384,2.354,385,2.185]],["title/interfaces/ExternalReference.html",[68,0.107,327,2.222]],["body/interfaces/ExternalReference.html",[3,0.204,4,0.204,8,0.204,10,1.049,25,0.019,28,0.43,36,0.596,54,1.598,66,0.012,67,0.012,68,0.202,70,0.772,76,0.182,77,0.374,81,1.378,82,0.371,93,3.165,106,2.79,168,2.463,211,1.199,290,2.729,294,1.851,295,2.923,302,2.856,303,1.472,313,3.665,314,2.114,315,2.518,316,2.475,317,1.554,318,2.475,319,1.659,320,2.475,321,2.475,322,2.475,323,3.15,324,2.278,325,2.475,326,2.475,327,3.351,328,2.278,329,2.475,330,2.475,331,2.475,332,2.475,333,2.475,334,2.475,335,2.475,336,2.475,337,2.475,338,2.475,339,2.475,340,2.475,341,2.923,342,2.475,343,2.475,344,2.475,345,2.475,346,2.475,347,2.475,348,2.475,349,2.475,350,2.475,351,2.475,352,2.475,353,3.15,354,2.475,355,2.475,356,2.475,357,2.114,358,2.475,359,2.475,360,2.475,361,2.475,362,2.475,363,2.475,364,2.475,365,3.15,366,4.233,367,3.896,368,2.475,369,2.475,370,2.278,371,2.475,372,2.475,373,2.278,374,2.278,375,2.729,376,2.278,377,2.114,378,2.278,379,2.278,380,2.114,381,3.15,382,2.278,383,2.278,384,2.278,385,2.114]],["title/components/HubComponent.html",[0,0.561,49,1.468]],["body/components/HubComponent.html",[0,0.889,1,0.83,2,1.627,3,0.121,4,0.121,5,0.924,6,0.875,7,0.924,8,0.121,13,0.875,14,2.613,15,2.58,16,1.383,17,1.247,18,1.46,19,2.326,20,1.46,22,1.544,24,1.288,25,0.019,26,0.559,27,1.173,28,0.134,29,0.283,30,0.924,31,1.383,32,1.383,33,0.75,34,2.058,35,0.924,36,0.695,37,0.924,38,1.546,39,0.924,40,0.789,41,0.924,42,0.789,43,0.559,44,0.924,45,1.546,46,0.924,47,0.83,48,0.924,49,1.849,50,0.924,51,1.546,52,0.924,53,1.469,54,1.424,55,0.924,56,0.789,57,0.924,58,0.83,59,1.663,60,0.713,61,0.924,62,1.312,63,1.469,64,0.875,65,0.924,66,0.008,67,0.008,76,0.109,77,0.254,82,0.304,85,1.035,86,2.558,113,2.326,123,2.514,125,3.139,127,1.544,133,2.16,139,1.312,140,2.816,143,2.296,144,1.337,148,2.058,153,1.1,155,1.618,156,1.1,159,2.451,168,2.208,175,1.354,188,2.37,189,1.257,190,1.855,191,1.469,216,1.949,246,1.739,254,1.035,255,1.1,256,1.257,282,2.3,299,2.846,302,2.257,303,1.949,315,1.716,317,1.811,386,1.618,387,2.558,388,3.493,389,3.849,390,3.172,391,3.172,392,3.172,393,3.34,394,3.34,395,4.402,396,3.172,397,3.242,398,2.8,399,3.557,400,2.884,401,4.141,402,4.141,403,3.557,404,2.8,405,4.042,406,4.706,407,2.3,408,3.34,409,2.113,410,3.34,411,3.34,412,3.34,413,2.113,414,2.558,415,3.34,416,3.34,417,2.113,418,2.326,419,1.855,420,3.57,421,2.113,422,2.614,423,2.868,424,2.868,425,3.34,426,2.326,427,2.868,428,2.113,429,3.017,430,3.278,431,2.141,432,2.451,433,2.868,434,2.113,435,2.558,436,3.278,437,3.925,438,3.34,439,3.34,440,2.558,441,2.868,442,3.34,443,2.113,444,3.026,445,2.113,446,2.8,447,2.868,448,2.113,449,3.278,450,3.604,451,2.113,452,3.34,453,2.558,454,2.113,455,3.34,456,2.113,457,2.868,458,2.113,459,2.113,460,2.113,461,1.173,462,1.815,463,2.113,464,2.113,465,2.113,466,1.618,467,1.815,468,1.618,469,1.815,470,1.815,471,1.618,472,1.472,473,1.815,474,1.354,475,1.618,476,2.113,477,2.113,478,1.815,479,3.34,480,2.326]],["title/injectables/HubEffects.html",[118,1.2,481,2.602]],["body/injectables/HubEffects.html",[3,0.213,4,0.213,8,0.213,10,0.806,12,3.016,24,1.248,25,0.019,26,0.983,28,0.236,29,0.772,36,0.624,54,1.415,66,0.013,67,0.013,76,0.191,77,0.386,78,0.937,82,0.26,118,1.629,120,1.822,123,1.947,125,1.719,133,1.629,138,1.626,140,2.667,143,1.319,144,0.769,148,2.709,151,2.64,167,2.217,168,2.497,171,2.484,211,2.091,219,3.305,315,2.1,317,2.217,389,3.98,397,2.212,398,4.204,407,2.065,414,3.883,430,3.531,431,3.25,461,3.871,467,3.193,474,2.384,481,4.315,482,3.193,483,4.745,484,5.069,485,3.972,486,5.069,487,5.069,488,4.146,489,3.718,490,3.718,491,3.25,492,3.531,493,4.315,494,4.954,495,5.069,496,5.069,497,5.069,498,5.069,499,5.069,500,5.069,501,4.018,502,3.883,503,5.069,504,5.069,505,3.718,506,4.354,507,4.354,508,5.069,509,3.883,510,3.883,511,5.069,512,3.193,513,2.848,514,2.848,515,3.193,516,2.848,517,2.848,518,2.59]],["title/injectables/HubFacade.html",[118,1.2,388,2.395]],["body/injectables/HubFacade.html",[3,0.24,4,0.24,8,0.24,10,0.873,11,2.328,24,1.259,25,0.019,26,1.108,28,0.266,29,0.561,36,0.922,54,1.485,66,0.014,67,0.014,68,0.157,76,0.215,77,0.419,78,1.384,82,0.315,118,1.765,120,2.054,123,2.338,127,2.54,133,1.968,138,2.402,139,1.647,140,2.833,143,1.487,144,0.866,148,2.402,151,3.386,162,2.494,167,1.833,168,2.427,211,1.854,216,2.275,388,4.168,389,3.868,397,3.645,400,4.528,407,2.328,429,3.521,430,3.825,431,3.521,432,3.897,449,3.825,461,2.328,474,2.687,485,3.521,488,3.645,491,3.521,492,3.825,509,4.207,517,3.21,518,2.919,519,3.6,520,5.492,521,3.6,522,5.492,523,3.825,524,4.192,525,4.192,526,5.492,527,5.492,528,2.687,529,4.192,530,4.192,531,4.192]],["title/injectables/HubService.html",[118,1.2,398,2.222]],["body/injectables/HubService.html",[3,0.155,4,0.155,8,0.155,11,1.502,24,1.163,25,0.02,26,0.715,28,0.172,29,0.362,36,0.678,54,0.618,66,0.01,67,0.01,76,0.139,77,0.308,78,1.017,81,1.065,82,0.207,118,1.298,120,1.326,123,2.211,125,2.235,127,1.868,133,1.722,138,1.766,139,1.899,140,2.235,143,0.96,144,0.559,153,1.409,156,1.409,162,1.609,168,1.507,171,3.14,191,2.536,293,3.733,294,3.569,299,3.703,302,1.673,317,2.344,319,2.03,375,1.502,377,2.403,380,2.403,385,3.411,398,2.403,462,2.323,466,2.072,488,3.188,532,2.323,533,3.366,534,4.038,535,4.038,536,4.038,537,6.233,538,2.705,539,2.705,540,4.038,541,2.705,542,3.468,543,2.705,544,2.323,545,2.323,546,2.323,547,2.072,548,2.705,549,2.072,550,2.705,551,2.705,552,2.323,553,4.832,554,4.832,555,4.038,556,5.166,557,5.359,558,4.603,559,4.832,560,5.359,561,2.705,562,2.705,563,3.366,564,4.038,565,4.038,566,4.038,567,2.705,568,2.705,569,4.038,570,2.705,571,4.832,572,2.705,573,4.038,574,4.038,575,2.705,576,2.705,577,2.705,578,3.733,579,4.038,580,4.603,581,2.705,582,2.705,583,4.038,584,2.705,585,2.705,586,2.705,587,2.705,588,4.038,589,3.468,590,2.705,591,2.705,592,2.705,593,3.468,594,4.038,595,2.705,596,4.038,597,2.705,598,2.705,599,2.705,600,2.705,601,2.705,602,2.705,603,2.705,604,4.832,605,4.038,606,4.038,607,2.705,608,4.038,609,2.705,610,4.038,611,4.038,612,2.705,613,4.038,614,2.705,615,2.705,616,4.038,617,2.705,618,2.705,619,2.705,620,2.705,621,3.994,622,2.705,623,2.705,624,2.705,625,2.705,626,2.705,627,2.705,628,2.705,629,2.705,630,2.705,631,2.705,632,2.705,633,2.705,634,2.705,635,2.705]],["title/interfaces/HubState.html",[68,0.107,636,2.602]],["body/interfaces/HubState.html",[3,0.233,4,0.233,8,0.233,10,0.646,24,1.198,25,0.019,28,0.383,54,0.928,66,0.013,67,0.013,68,0.183,70,0.883,72,1.91,76,0.209,77,0.41,81,0.72,82,0.353,131,3.59,139,1.597,143,1.442,167,2.353,168,2.654,191,2.141,211,2.037,224,3.202,299,3.567,302,1.684,317,2.353,389,4.23,397,3.821,419,2.257,426,3.748,432,2.117,444,3.567,446,2.418,461,4.119,466,3.113,474,2.605,485,4.49,488,2.418,493,2.831,501,2.831,517,3.113,523,2.831,528,2.605,563,2.831,636,4.782,637,3.113,638,4.122,639,3.113,640,3.113,641,3.113,642,3.748,643,3.113,644,4.122,645,4.064,646,3.113,647,3.49,648,3.49,649,3.49]],["title/interfaces/KillChainPhase.html",[68,0.107,341,2.222]],["body/interfaces/KillChainPhase.html",[3,0.208,4,0.208,8,0.208,10,0.905,25,0.019,28,0.432,36,0.608,54,1.605,66,0.012,67,0.012,68,0.203,70,0.787,76,0.186,77,0.379,81,1.376,82,0.365,93,1.887,106,2.809,168,2.478,211,1.223,290,2.766,294,1.887,295,2.155,302,2.869,303,1.501,313,3.687,314,2.155,315,2.539,316,2.523,317,1.584,318,2.523,319,1.681,320,2.523,321,2.523,322,2.523,323,3.193,324,2.322,325,2.523,326,2.523,327,2.963,328,2.322,329,2.523,330,2.523,331,2.523,332,2.523,333,2.523,334,2.523,335,2.523,336,2.523,337,2.523,338,2.523,339,2.523,340,2.523,341,3.386,342,2.523,343,2.523,344,2.523,345,2.523,346,2.523,347,2.523,348,2.523,349,2.523,350,2.523,351,2.523,352,2.523,353,3.193,354,2.523,355,2.523,356,2.523,357,2.155,358,2.523,359,2.523,360,2.523,361,2.523,362,2.523,363,2.523,364,2.523,365,2.322,366,2.523,367,2.322,368,3.469,369,3.469,370,3.193,371,4.268,372,4.268,373,2.322,374,2.322,375,2.766,376,2.322,377,2.155,378,2.322,379,2.322,380,2.155,381,3.193,382,2.322,383,2.322,384,2.322,385,2.155]],["title/components/LoaderComponent.html",[0,0.561,51,1.394]],["body/components/LoaderComponent.html",[0,1.011,1,1.801,2,2.287,3,0.263,4,0.263,5,2.004,6,1.899,7,2.004,8,0.263,13,1.899,14,2.973,15,2.962,16,2.41,17,2.172,18,2.004,20,2.544,22,2.691,24,0.855,25,0.019,26,1.212,28,0.291,29,0.613,30,2.004,31,2.41,32,2.41,33,1.626,34,2.94,35,2.004,36,1.073,37,2.004,38,1.711,39,2.004,40,1.711,41,2.004,42,1.711,43,1.212,44,2.004,45,1.711,46,2.004,47,1.801,48,2.004,49,1.801,50,2.004,51,2.51,52,2.004,53,1.626,54,1.047,55,2.004,56,1.711,57,2.004,58,1.801,59,1.336,60,1.547,61,2.004,62,1.801,63,1.626,64,1.899,65,2.004,66,0.014,67,0.014,185,2.546,650,3.937,651,6.392,652,5.818,653,5.818,654,4.583,655,4.583]],["title/components/MitreAttackComponent.html",[0,0.561,53,1.326]],["body/components/MitreAttackComponent.html",[0,0.807,1,0.644,2,1.368,3,0.094,4,0.094,5,0.716,6,0.678,7,0.716,8,0.094,10,0.553,13,0.678,14,2.453,15,2.413,16,1.125,17,1.916,18,1.188,20,1.188,22,1.256,24,1.182,25,0.019,26,0.433,28,0.104,29,0.219,30,0.716,31,1.125,32,1.125,33,0.581,34,1.772,35,0.716,36,0.754,37,0.716,38,1.299,39,0.716,40,1.299,41,0.716,42,1.299,43,0.921,44,0.716,45,1.299,46,0.716,47,0.644,48,0.716,49,0.644,50,0.716,51,1.299,52,0.716,53,1.977,54,1.583,55,0.716,56,0.611,57,0.716,58,0.644,59,0.477,60,0.553,61,0.716,62,0.644,63,0.581,64,0.678,65,0.716,66,0.007,67,0.007,76,0.084,77,0.207,78,1.02,82,0.321,106,1.188,123,2.509,125,2.483,127,1.256,131,1.331,133,2.061,138,1.188,139,1.368,140,2.078,143,2.179,144,1.269,148,1.772,151,1.415,153,0.853,155,1.254,156,0.853,167,1.522,168,2.33,171,1.331,175,1.741,176,1.772,180,1.61,184,1.635,188,1.256,190,1.509,191,1.235,200,2.822,207,0.831,209,2.25,216,2.007,223,1.741,228,1.813,236,2.081,241,1.141,246,1.813,254,0.803,255,0.853,256,0.974,278,3.778,282,2.691,288,2.822,291,2.081,292,3.103,299,2.983,302,2.543,303,1.678,315,0.678,319,1.517,388,2.597,389,2.882,395,5.062,396,2.666,397,3.418,398,2.41,399,2.99,405,3.479,418,2.822,419,1.509,420,3.129,422,1.509,423,2.333,424,2.333,426,2.822,427,2.333,429,1.741,430,1.892,431,1.741,432,1.415,433,2.333,435,2.081,436,2.822,437,3.441,440,2.081,441,2.333,444,1.509,446,1.616,447,3.479,449,1.892,450,2.081,461,2.85,468,1.254,469,1.406,470,1.406,471,1.254,472,4.52,474,1.05,475,1.254,478,1.406,502,2.081,558,2.333,578,2.822,589,1.406,593,2.333,643,2.081,656,4.52,657,1.254,658,2.333,659,2.666,660,2.717,661,2.717,662,3.481,663,3.881,664,2.822,665,3.481,666,4.493,667,3.481,668,2.717,669,3.931,670,1.638,671,3.481,672,3.103,673,1.638,674,1.638,675,3.859,676,1.638,677,2.717,678,3.479,679,2.717,680,1.638,681,2.717,682,2.717,683,1.638,684,1.05,685,2.717,686,2.333,687,2.333,688,1.638,689,2.333,690,1.638,691,1.638,692,1.638,693,1.638,694,1.638,695,2.717,696,2.717,697,3.481,698,3.481,699,2.717,700,2.717,701,1.638,702,4.051,703,2.717,704,1.638,705,2.717,706,1.638,707,1.638,708,1.638,709,1.254,710,1.638,711,1.638,712,1.638,713,1.406,714,1.638,715,1.638,716,1.406,717,1.638,718,1.638,719,1.406,720,1.638,721,1.638,722,1.638,723,1.638,724,1.638,725,1.638,726,1.638,727,1.638,728,2.717,729,3.481,730,2.232,731,2.717,732,1.638,733,1.638,734,1.638,735,1.638,736,2.717,737,2.333,738,2.717,739,2.717,740,2.717,741,2.717,742,2.717,743,2.717,744,2.717,745,2.717,746,2.717,747,2.333,748,2.717,749,4.845,750,2.717,751,2.717,752,4.051,753,2.717,754,2.717,755,2.717,756,4.051,757,2.717,758,2.717,759,2.717]],["title/interfaces/MitreAttackConfig.html",[68,0.107,760,1.945]],["body/interfaces/MitreAttackConfig.html",[3,0.408,4,0.285,8,0.285,25,0.019,28,0.459,29,0.664,43,1.312,66,0.015,67,0.015,68,0.207,70,1.078,76,0.255,77,0.466,81,1.258,82,0.34,144,1.026,203,3.199,204,2.455,207,1.518,270,1.852,319,2.335,760,3.184,761,2.756,762,2.756,763,3.603,764,3.603,765,2.295,766,2.952,767,2.952,768,2.584,769,2.952,770,3.184,771,2.952,772,2.952,773,2.952,774,2.952]],["title/interfaces/MitreAttackData.html",[68,0.107,317,1.634]],["body/interfaces/MitreAttackData.html",[3,0.205,4,0.205,8,0.205,10,0.897,25,0.019,28,0.43,36,0.599,54,1.6,66,0.012,67,0.012,68,0.202,70,0.776,76,0.183,77,0.376,81,1.377,82,0.378,93,1.859,106,2.794,168,2.466,211,1.205,290,3.549,294,1.859,295,2.123,302,2.859,303,1.479,313,3.67,314,2.123,315,2.339,316,2.486,317,2.155,318,4.241,319,2.056,320,4.241,321,2.486,322,2.486,323,3.16,324,2.288,325,2.486,326,2.486,327,2.932,328,2.288,329,2.486,330,2.486,331,2.486,332,2.486,333,2.486,334,2.486,335,2.486,336,2.486,337,2.486,338,2.486,339,2.486,340,2.486,341,2.932,342,2.486,343,2.486,344,2.486,345,2.486,346,2.486,347,2.486,348,2.486,349,2.486,350,2.486,351,2.486,352,2.486,353,3.16,354,2.486,355,2.486,356,2.486,357,2.123,358,2.486,359,2.486,360,2.486,361,2.486,362,2.486,363,2.486,364,2.486,365,2.288,366,2.486,367,2.288,368,2.486,369,2.486,370,2.288,371,2.486,372,2.486,373,2.288,374,2.288,375,2.738,376,2.288,377,2.123,378,2.288,379,2.288,380,2.123,381,3.16,382,2.288,383,2.288,384,2.288,385,2.123]],["title/interfaces/MitreAttackFooter.html",[68,0.107,763,1.945]],["body/interfaces/MitreAttackFooter.html",[3,0.356,4,0.291,8,0.291,25,0.019,28,0.462,29,0.679,43,1.343,66,0.015,67,0.015,68,0.208,70,1.103,76,0.261,77,0.473,81,1.266,82,0.318,144,1.049,203,2.348,204,1.802,207,1.554,270,1.895,319,2.093,370,4.292,760,2.644,761,2.82,762,2.82,763,3.487,764,3.23,765,2.348,766,3.021,767,3.021,768,2.644,769,3.021,770,3.23,771,3.021,772,3.021,773,3.021,774,3.021,775,6.695]],["title/interfaces/MitreAttackHeader.html",[68,0.107,764,1.945]],["body/interfaces/MitreAttackHeader.html",[3,0.352,4,0.286,8,0.286,25,0.019,28,0.46,29,0.667,43,1.832,66,0.015,67,0.015,68,0.207,70,1.083,76,0.256,77,0.467,81,1.322,82,0.341,144,1.03,203,2.304,204,1.768,207,1.525,270,1.86,319,2.069,760,2.595,761,2.767,762,2.767,763,3.193,764,3.458,765,3.204,766,4.121,767,2.964,768,2.595,769,2.964,770,3.193,771,2.964,772,2.964,773,2.964,774,2.964]],["title/interfaces/MitreAttackInfo-1.html",[68,0.089,319,1.055,776,2.394]],["body/interfaces/MitreAttackInfo-1.html",[3,0.348,4,0.281,8,0.281,25,0.019,28,0.458,29,0.921,43,1.294,66,0.015,67,0.015,68,0.206,70,1.063,76,0.251,77,0.462,78,1.527,81,1.334,82,0.353,144,1.423,203,2.262,204,1.736,207,2.106,270,1.826,319,2.223,760,2.547,761,2.717,762,2.717,763,3.156,764,3.156,765,2.262,766,2.91,767,4.095,768,2.547,769,2.91,770,3.156,771,2.91,772,2.91,773,2.91,774,2.91]],["title/injectables/MitreAttackService.html",[118,1.2,664,2.602]],["body/injectables/MitreAttackService.html",[0,0.903,3,0.277,4,0.155,8,0.155,10,0.85,11,2.237,17,1.006,24,1.194,25,0.019,26,0.713,28,0.171,29,0.361,36,0.961,53,2.457,54,1.664,56,1.006,66,0.01,67,0.01,76,0.138,77,0.307,78,1.215,82,0.294,118,1.55,120,1.321,123,2.209,125,2.474,127,1.863,133,1.719,138,2.109,139,2.25,143,1.429,144,1.287,148,2.34,153,1.404,162,2.396,167,2.723,171,1.974,176,2.34,180,2.474,184,2.161,191,0.957,203,1.247,204,0.957,207,1.838,209,2.237,210,1.728,211,1.806,212,3.991,213,4.336,216,1.669,220,2.582,270,1.006,275,2.582,278,3.43,282,3.18,288,1.878,289,2.315,290,2.678,291,2.065,292,2.065,293,3.359,294,2.098,295,1.604,299,3.845,301,2.315,302,3.006,303,2.652,315,1.669,319,2.249,422,2.237,436,2.806,444,1.497,471,2.065,473,2.315,578,1.878,656,3.988,663,1.878,664,2.806,675,6.096,713,2.315,716,2.315,730,2.582,747,2.315,765,1.247,777,4.918,778,2.315,779,3.085,780,4.823,781,4.028,782,4.028,783,4.028,784,4.028,785,2.696,786,4.595,787,4.028,788,2.696,789,4.028,790,2.696,791,4.028,792,2.582,793,4.028,794,2.696,795,4.028,796,4.028,797,2.696,798,3.407,799,2.696,800,2.696,801,2.065,802,2.315,803,2.315,804,4.823,805,4.028,806,2.696,807,2.696,808,2.696,809,4.823,810,2.696,811,2.696,812,4.028,813,4.028,814,2.696,815,2.696,816,2.696,817,2.315,818,2.696,819,2.696,820,2.696,821,2.696,822,2.696,823,2.696,824,2.696,825,2.696,826,2.696,827,2.696,828,2.696,829,2.315,830,2.696,831,2.696,832,2.696]],["title/interfaces/MitreCells.html",[68,0.107,768,1.945]],["body/interfaces/MitreCells.html",[3,0.354,4,0.289,8,0.289,25,0.019,28,0.461,29,0.674,43,1.331,66,0.015,67,0.015,68,0.207,70,1.094,76,0.259,77,0.47,81,1.302,82,0.317,144,1.041,203,2.328,204,2.467,207,1.541,270,2.595,319,2.083,760,2.622,761,2.796,762,2.796,763,3.213,764,3.213,765,2.328,766,2.995,767,2.995,768,3.213,769,2.995,770,3.621,771,2.995,772,2.995,773,2.995,774,2.995]],["title/interfaces/MitreCellsContent.html",[68,0.107,770,1.945]],["body/interfaces/MitreCellsContent.html",[3,0.354,4,0.289,8,0.289,25,0.019,28,0.461,29,0.674,43,1.839,66,0.015,67,0.015,68,0.207,70,1.094,76,0.259,77,0.47,78,1.554,81,1.302,82,0.317,144,1.437,203,2.328,204,1.787,207,1.541,270,1.879,319,2.083,760,2.622,761,2.796,762,2.796,763,3.213,764,3.213,765,2.328,766,2.995,767,2.995,768,2.622,769,2.995,770,3.474,771,2.995,772,2.995,773,2.995,774,2.995]],["title/components/ModalComponent.html",[0,0.561,56,1.394]],["body/components/ModalComponent.html",[0,1.024,1,1.432,2,2.244,3,0.209,4,0.209,5,1.594,6,1.51,7,1.594,8,0.209,10,0.579,13,1.51,14,2.886,15,2.868,16,2.072,17,1.867,18,2.187,20,2.187,22,2.313,24,1.146,25,0.019,26,0.964,28,0.231,29,0.488,30,1.594,31,2.072,32,2.072,33,1.293,34,2.687,35,1.594,36,0.958,37,1.594,38,2.403,39,1.594,40,1.36,41,1.594,42,1.36,43,0.964,44,1.594,45,1.36,46,1.594,47,1.432,48,1.594,49,1.432,50,1.594,51,1.36,52,1.594,53,1.293,54,0.832,55,1.594,56,2.293,57,1.594,58,1.432,59,1.062,60,1.23,61,1.594,62,1.432,63,1.293,64,1.51,65,1.594,66,0.012,67,0.012,72,1.775,76,0.187,82,0.293,133,1.171,143,1.293,144,0.753,176,2.187,181,2.975,184,1.688,185,3.171,188,1.685,191,1.293,200,4.279,246,2.973,254,1.786,255,1.898,256,2.168,257,3.83,270,1.867,578,3.483,580,4.295,792,4.366,798,4.052,833,2.792,834,4.373,835,5.001,836,5.001,837,3.645,838,3.645,839,3.645,840,3.645,841,5.001,842,5.001,843,5.001,844,5.001,845,5.001,846,6.144,847,5.001,848,5.001,849,5.001,850,5.001,851,5.001,852,5.001,853,5.001,854,5.001,855,5.001]],["title/interfaces/ModalConfig.html",[68,0.107,798,2.222]],["body/interfaces/ModalConfig.html",[0,0.705,3,0.269,4,0.269,8,0.269,24,0.875,25,0.019,28,0.375,66,0.015,67,0.015,68,0.169,70,1.019,76,0.241,77,0.45,81,1.297,82,0.376,144,1.22,176,2.582,180,3.232,184,1.583,207,1.806,270,2.759,272,3.785,276,3.785,418,4.112,663,4.723,765,3.299,792,4.643,798,3.512,856,3.593,857,4.868,858,4.029]],["title/interfaces/ModalContent.html",[68,0.107,857,2.602]],["body/interfaces/ModalContent.html",[0,0.892,3,0.271,4,0.271,8,0.271,10,0.751,24,0.882,25,0.019,28,0.377,66,0.015,67,0.015,68,0.169,70,1.027,76,0.243,77,0.452,81,1.32,82,0.373,144,1.477,176,2.067,180,2.999,184,2.003,207,2.187,270,2.738,272,3.031,276,4.359,418,3.293,663,3.293,765,2.744,792,4.491,798,2.813,856,3.621,857,4.736,858,4.061]],["title/directives/TooltipDirective.html",[33,1.326,63,1.326]],["body/directives/TooltipDirective.html",[3,0.122,4,0.122,8,0.122,10,0.909,13,0.881,14,1.32,16,1.391,17,1.92,24,0.397,25,0.019,26,0.563,28,0.135,29,0.285,31,1.391,32,2.589,33,1.676,36,0.96,62,0.836,63,1.192,64,3.053,66,0.008,67,0.008,76,0.109,77,0.256,78,1.441,81,0.595,82,0.321,104,2.46,106,2.39,125,3.257,127,1.553,133,2.203,135,2.884,138,2.502,139,2.399,141,2.572,143,1.676,144,0.976,167,2.249,171,1.646,181,1.998,185,2.624,191,1.939,216,2.37,298,5.094,375,3.035,407,1.182,444,2.856,518,1.482,546,2.884,621,2.339,658,2.884,669,5.668,672,4.542,678,5.094,730,2.667,786,2.884,859,1.827,860,4.16,861,4.16,862,4.724,863,4.724,864,3.358,865,4.724,866,3.358,867,4.724,868,3.358,869,3.358,870,4.16,871,4.16,872,4.16,873,3.358,874,5.143,875,5.143,876,5.143,877,2.128,878,4.724,879,3.358,880,3.358,881,2.128,882,3.358,883,3.358,884,5.143,885,2.128,886,4.724,887,3.358,888,2.128,889,5.93,890,3.358,891,3.358,892,3.358,893,6.104,894,5.143,895,4.16,896,5.93,897,6.911,898,5.93,899,3.358,900,4.16,901,4.16,902,5.143,903,3.358,904,2.128,905,3.358,906,3.358,907,2.128,908,3.358,909,5.465,910,4.16,911,3.358,912,3.358,913,3.358,914,3.358,915,2.128,916,3.358,917,3.358,918,3.358,919,3.358,920,6.104,921,2.128,922,3.358,923,4.724,924,2.884,925,3.358,926,5.722,927,2.128,928,4.724,929,2.128,930,2.128,931,2.128,932,2.128,933,2.128,934,2.128,935,2.128,936,3.358,937,3.358,938,2.128,939,2.128,940,2.128,941,5.93,942,2.128,943,2.128,944,2.128,945,2.128,946,2.128,947,2.128,948,2.128,949,2.128,950,3.358,951,2.128,952,3.358,953,2.128,954,3.358,955,2.128,956,2.128,957,2.128,958,4.16,959,2.128,960,2.128,961,3.358,962,2.128,963,2.128,964,4.16,965,3.573,966,4.16,967,3.358,968,2.128,969,2.128,970,2.128,971,2.128]],["title/injectables/UserEffects.html",[118,1.2,972,2.861]],["body/injectables/UserEffects.html",[3,0.219,4,0.219,8,0.219,10,0.82,12,3.068,24,1.286,25,0.019,26,1.008,27,2.117,28,0.242,29,0.51,36,0.64,59,2.128,60,2.275,66,0.013,67,0.013,76,0.196,77,0.393,78,0.96,82,0.265,85,2.864,118,1.657,120,1.868,123,1.972,125,2.702,126,5.55,131,2.527,133,1.657,138,1.667,140,2.702,143,1.353,144,0.788,148,2.255,151,3.26,152,3.949,167,2.555,171,2.527,211,2.326,219,3.285,315,2.136,404,4.226,407,2.864,422,3.477,483,3.949,491,3.306,492,3.591,493,4.36,494,5.018,506,4.429,507,4.429,512,3.274,513,2.92,514,2.92,515,5.018,516,2.92,972,4.795,973,3.274,974,3.812,975,3.812,976,5.156,977,5.156,978,5.156,979,5.156,980,5.156,981,4.555,982,4.429,983,3.812,984,2.444,985,3.274,986,2.92]],["title/injectables/UserFacade.html",[118,1.2,159,1.945]],["body/injectables/UserFacade.html",[3,0.228,4,0.228,8,0.228,10,0.948,11,2.205,12,3.152,24,1.299,25,0.019,26,1.05,28,0.252,29,0.531,36,0.889,59,2.175,60,2.238,66,0.013,67,0.013,76,0.204,77,0.404,78,1.335,82,0.327,85,3.249,118,1.703,120,1.946,123,2.302,127,2.45,131,3.119,133,1.916,138,2.317,139,2.082,140,3.154,143,1.409,144,0.821,147,3.152,148,2.317,151,2.76,156,2.068,159,3.314,162,2.362,167,2.317,211,1.789,216,2.471,219,2.45,255,2.76,303,2.636,315,2.195,407,2.205,422,3.534,429,3.397,432,3.769,446,3.152,461,2.205,491,3.397,492,3.69,509,4.058,516,3.041,518,2.765,521,3.41,523,3.69,528,2.545,684,3.397,984,2.545,986,3.041,987,3.41,988,5.299,989,4.551,990,3.97,991,5.299,992,4.058,993,5.299,994,3.97,995,3.97]],["title/components/UserLoginSystemComponent.html",[0,0.561,58,1.468]],["body/components/UserLoginSystemComponent.html",[0,0.743,1,0.908,2,1.724,3,0.132,4,0.132,5,1.01,6,1.817,7,1.01,8,0.132,13,0.957,14,2.664,15,2.664,16,1.483,17,1.337,18,1.566,20,1.566,24,1.215,25,0.019,26,0.611,27,1.283,28,0.147,29,0.309,30,1.01,31,1.483,32,1.483,33,0.82,34,2.16,35,1.01,36,0.736,37,1.01,38,0.862,39,1.01,40,0.862,41,1.01,42,0.862,43,0.611,44,1.01,45,0.862,46,1.01,47,0.908,48,1.01,49,0.908,50,1.01,51,1.637,52,1.01,53,0.82,54,0.527,55,1.01,56,0.862,57,1.01,58,1.942,59,2.106,60,2.465,61,1.918,62,0.908,63,0.82,64,0.957,65,1.01,66,0.009,67,0.009,69,2.609,72,1.271,73,2.939,76,0.119,77,0.273,82,0.344,123,2.114,125,3.059,126,4.795,127,1.656,131,1.755,133,1.959,139,1.407,142,4.11,143,2.007,144,1.169,145,2.494,147,3.806,148,2.16,149,3.076,151,2.946,152,2.743,153,1.203,156,1.203,157,1.609,158,1.374,159,2.284,161,1.984,188,1.656,190,2.436,191,0.82,216,1.817,219,1.656,243,2.296,246,2.284,254,1.755,296,2.494,303,1.483,308,3.359,324,2.296,387,2.743,396,3.359,404,3.51,407,2.436,419,1.989,420,4.11,422,1.989,431,2.296,432,1.865,437,3.359,440,3.784,457,3.076,468,1.769,491,3.167,684,2.296,779,2.743,984,1.481,985,1.984,996,2.31,997,4.795,998,4.795,999,1.769,1000,3.359,1001,3.581,1002,4.385,1003,3.581,1004,5.595,1005,4.94,1006,3.581,1007,4.94,1008,3.076,1009,3.581,1010,2.31,1011,3.076,1012,2.31,1013,2.31,1014,3.581,1015,3.581,1016,3.076,1017,2.31,1018,2.31,1019,3.581,1020,3.581,1021,3.581,1022,3.581,1023,3.581,1024,4.671,1025,2.743,1026,4.94,1027,4.94,1028,3.581,1029,3.581,1030,3.767,1031,3.581,1032,3.581,1033,3.581,1034,3.076,1035,3.581,1036,2.31,1037,3.581,1038,3.581,1039,3.581,1040,3.076,1041,2.31,1042,1.984,1043,2.31,1044,2.31,1045,1.769,1046,2.31,1047,2.31,1048,1.984,1049,2.31,1050,2.31,1051,1.984,1052,3.581,1053,2.31,1054,2.31]],["title/interfaces/UserModel.html",[68,0.107,85,1.831]],["body/interfaces/UserModel.html",[3,0.202,4,0.202,8,0.202,10,0.775,25,0.019,28,0.356,36,1.187,59,1.025,66,0.012,67,0.012,68,0.173,69,2.092,70,0.764,71,2.449,72,1.988,73,3.913,74,3.02,75,3.128,76,0.181,77,0.372,79,3.02,80,4.19,81,1.365,82,0.389,83,3.02,84,3.02,85,2.391,86,5.699,87,4.19,88,4.635,89,4.19,90,4.635,91,5.038,92,4.19,93,2.541,94,5.038,95,4.19,96,4.19,97,4.19,98,4.19,99,4.19,100,4.635,101,5.267,102,5.197,103,3.737,104,2.541,105,4.19,106,2.646,107,4.635,108,4.19,109,3.737,110,4.635,111,4.19,112,2.694,113,2.449,114,2.694,115,2.694,116,2.694,117,2.694,1055,3.517]],["title/injectables/UserService.html",[118,1.2,404,2.222]],["body/injectables/UserService.html",[3,0.157,4,0.157,6,1.686,8,0.157,10,0.773,11,1.518,24,1.167,25,0.019,26,0.723,28,0.258,29,0.366,36,0.904,59,2.182,60,1.944,66,0.01,67,0.01,69,3.426,72,1.444,73,4.086,76,0.14,77,0.31,78,1.225,81,0.484,82,0.356,85,2.959,88,2.093,90,2.093,91,2.093,94,2.093,100,2.093,101,2.093,107,2.093,110,2.093,118,1.308,120,1.339,123,2.384,125,3.037,127,1.882,131,1.994,133,2.065,138,2.126,139,2.526,140,2.792,142,4.356,143,1.911,144,1.19,145,2.834,147,4.036,148,2.64,151,2.119,153,1.423,156,1.423,157,1.903,158,1.626,159,3.257,162,1.626,167,2.126,171,1.339,191,0.97,216,2.721,254,1.339,255,2.119,256,1.626,303,2.231,403,2.347,404,2.421,414,3.117,422,2.26,429,2.609,446,2.421,453,3.117,480,2.834,510,2.093,514,2.093,533,4.011,542,3.495,544,5.186,545,2.347,684,3.871,730,1.752,779,3.117,817,2.347,982,4.626,984,1.752,989,3.495,992,3.117,1004,5.826,1016,3.495,1034,2.347,1042,2.347,1045,3.117,1048,2.347,1056,2.093,1057,4.069,1058,4.069,1059,5.386,1060,2.733,1061,5.759,1062,4.069,1063,2.733,1064,4.069,1065,4.069,1066,2.733,1067,4.069,1068,3.495,1069,2.733,1070,2.733,1071,2.733,1072,2.733,1073,3.117,1074,3.495,1075,2.733,1076,2.733,1077,2.733,1078,2.347,1079,2.733,1080,2.733,1081,2.733,1082,2.733,1083,2.733,1084,2.733,1085,2.733,1086,2.733,1087,2.733,1088,2.733,1089,2.733,1090,2.733,1091,2.733,1092,2.733,1093,2.733,1094,2.733,1095,2.733,1096,2.733,1097,2.733,1098,2.733,1099,2.733,1100,2.733,1101,2.093,1102,2.347,1103,2.733]],["title/interfaces/UserState.html",[68,0.107,1104,2.602]],["body/interfaces/UserState.html",[3,0.262,4,0.262,8,0.262,10,0.727,24,1.192,25,0.019,28,0.406,59,2.196,66,0.014,67,0.014,68,0.182,70,0.994,72,2.062,76,0.235,77,0.443,81,0.81,82,0.345,85,3.293,131,3.529,147,2.722,190,2.541,191,2.266,219,2.116,224,2.722,296,3.186,315,1.895,432,2.383,444,3.732,485,3.725,528,2.933,563,3.186,638,4.451,639,3.504,641,3.504,642,4.048,644,4.451,981,3.186,984,2.933,986,3.504,1025,3.504,1104,4.68,1105,3.504,1106,3.504,1107,3.929,1108,3.929,1109,3.929,1110,3.504,1111,3.929]],["title/coverage.html",[1112,4.368]],["body/coverage.html",[0,1.005,1,1.009,8,0.147,9,2.204,15,1.009,25,0.019,33,0.911,38,0.958,40,0.958,42,0.958,45,0.958,47,1.009,49,1.009,51,0.958,53,0.911,56,0.958,58,1.009,59,0.748,60,1.892,63,0.911,66,0.01,67,0.01,68,0.21,69,1.527,71,2.704,82,0.132,85,1.258,109,1.966,118,2.026,119,1.966,121,2.204,122,2.204,137,1.966,159,1.337,174,2.973,177,1.966,180,1.187,202,3.001,205,1.645,206,1.645,224,2.309,225,2.204,228,1.337,234,2.204,240,2.973,241,2.704,242,2.973,245,1.966,249,1.527,269,3.261,271,1.645,273,1.645,277,2.973,279,1.966,282,1.425,287,2.204,305,2.973,310,1.966,313,1.425,314,3.335,317,1.122,319,1.31,327,1.527,341,1.527,386,3.998,388,1.645,390,1.966,391,1.966,392,1.966,398,1.527,400,1.787,404,1.527,419,1.425,472,2.704,481,1.787,482,2.204,488,1.527,501,1.787,519,2.204,532,2.204,547,3.586,549,1.966,621,4.583,636,1.787,637,3.998,640,1.966,642,2.704,646,1.966,650,2.204,656,3.261,657,2.973,659,1.966,664,1.787,709,1.966,760,1.337,761,3.275,762,3.275,763,1.337,764,1.337,768,1.337,770,1.337,777,2.204,778,2.204,798,1.527,833,2.973,834,1.966,856,2.973,857,1.787,859,2.204,972,1.966,973,2.204,981,1.787,987,2.204,997,2.973,998,2.973,999,2.973,1000,1.966,1051,6.592,1056,1.966,1104,1.787,1105,3.998,1106,1.966,1110,1.966,1112,2.204,1113,2.204,1114,2.204,1115,7.556,1116,2.204,1117,7.535,1118,2.204,1119,3.882,1120,3.882,1121,3.586,1122,2.204,1123,2.204,1124,2.204,1125,5.897,1126,2.566,1127,3.882,1128,3.882,1129,3.334,1130,6.124,1131,3.882,1132,3.882,1133,3.334,1134,2.204,1135,2.204,1136,2.204,1137,3.882,1138,3.882,1139,4.682,1140,2.566,1141,3.882,1142,2.566,1143,3.882,1144,2.566,1145,2.566,1146,2.566,1147,3.882,1148,4.682,1149,3.882,1150,2.566,1151,2.566,1152,3.334,1153,3.882,1154,3.882,1155,3.334,1156,2.204,1157,2.566,1158,2.566,1159,3.334,1160,2.204,1161,1.966,1162,2.204,1163,2.204,1164,3.882,1165,3.882,1166,2.204,1167,2.566,1168,4.021,1169,2.204,1170,2.204,1171,2.204,1172,2.204,1173,2.566,1174,2.566]],["title/dependencies.html",[1175,2.394,1176,3.856]],["body/dependencies.html",[25,0.019,26,1.369,27,2.875,66,0.016,67,0.016,156,2.696,157,3.605,158,3.733,254,2.537,513,3.964,528,4.022,801,3.964,802,4.445,803,5.389,1176,4.445,1177,5.176,1178,7.461,1179,5.176,1180,5.176,1181,6.274,1182,6.274,1183,5.176,1184,5.176,1185,6.274,1186,6.752,1187,4.445,1188,5.176,1189,5.176,1190,5.176,1191,5.176,1192,5.176,1193,5.176,1194,5.176,1195,5.176,1196,5.176]],["title/miscellaneous/enumerations.html",[1197,1.628,1198,3.856]],["body/miscellaneous/enumerations.html",[0,0.949,3,0.404,25,0.019,66,0.016,67,0.016,72,2.241,76,0.269,144,1.545,176,2.762,202,3.354,209,3.767,210,4.049,212,4.049,217,4.399,218,4.399,219,2.42,220,4.516,221,3.644,222,3.644,223,3.354,397,3.757,1161,4.007,1197,2.725,1198,4.494,1199,6.315,1200,4.494,1201,4.837,1202,5.424,1203,5.424]],["title/miscellaneous/functions.html",[1197,1.628,1204,3.856]],["body/miscellaneous/functions.html",[10,1.001,25,0.018,36,1.057,66,0.016,67,0.016,76,0.268,78,1.587,81,1.275,82,0.323,93,3.663,138,2.754,139,2.475,328,4.34,533,4.387,1024,5.388,1040,4.474,1121,3.99,1122,5.41,1123,5.41,1197,2.713,1204,4.474,1205,5.41,1206,5.209,1207,5.815,1208,6.299,1209,6.286,1210,5.209,1211,5.41,1212,5.209,1213,5.209,1214,5.209]],["title/index.html",[76,0.161,1215,2.685,1216,2.685]],["body/index.html",[0,0.903,4,0.231,12,3.575,25,0.013,36,0.676,54,0.92,66,0.013,67,0.013,158,3.575,168,1.998,293,2.807,365,2.583,419,2.238,435,3.087,480,2.807,552,3.461,556,3.461,672,3.087,686,3.461,687,3.461,689,4.596,719,3.461,801,5.353,924,3.461,1008,3.461,1045,3.087,1073,3.087,1101,3.087,1102,3.461,1175,4.099,1201,3.087,1217,5.352,1218,4.03,1219,4.03,1220,4.03,1221,4.03,1222,3.087,1223,4.03,1224,4.03,1225,4.03,1226,3.461,1227,4.03,1228,4.03,1229,4.03,1230,4.03,1231,4.596,1232,4.03,1233,4.03,1234,4.03,1235,4.03,1236,4.03,1237,4.03,1238,4.03,1239,4.03,1240,4.03,1241,4.03,1242,4.03,1243,4.03,1244,4.03,1245,4.03,1246,4.03,1247,4.03,1248,4.03,1249,4.03,1250,4.03,1251,4.03,1252,4.03,1253,4.03,1254,4.03,1255,4.03,1256,4.03,1257,4.03,1258,4.03,1259,4.03,1260,4.03,1261,4.03,1262,6.009,1263,4.03,1264,6.009,1265,3.087,1266,4.03,1267,6.402,1268,5.498,1269,6.009,1270,4.03,1271,4.03,1272,7.098,1273,3.087,1274,6.009,1275,5.352,1276,4.03,1277,6.402,1278,6.849,1279,4.03,1280,4.03,1281,4.03,1282,3.461,1283,4.03,1284,3.461,1285,4.03,1286,4.03,1287,3.461,1288,4.03,1289,4.03,1290,6.009,1291,5.161,1292,4.03,1293,6.402,1294,4.03,1295,4.03,1296,4.03,1297,4.03,1298,5.352,1299,4.596,1300,6.402,1301,3.461,1302,5.352,1303,5.352,1304,4.03,1305,6.849,1306,4.03,1307,4.03,1308,4.03,1309,4.03,1310,4.03,1311,3.461,1312,4.03,1313,4.03,1314,6.009,1315,4.03,1316,4.03,1317,3.087,1318,4.03]],["title/license.html",[1215,2.685,1216,2.685,1319,2.685]],["body/license.html",[25,0.015,66,0.015,67,0.015,104,2.547,169,3.407,211,1.651,420,3.407,480,3.407,669,3.746,1113,4.201,1222,4.642,1273,3.746,1287,4.201,1291,5.205,1319,4.201,1320,4.891,1321,6.585,1322,4.891,1323,4.891,1324,4.891,1325,4.891,1326,6.06,1327,4.891,1328,4.891,1329,4.891,1330,4.891,1331,4.891,1332,4.891,1333,6.06,1334,7.444,1335,4.891,1336,6.585,1337,4.891,1338,4.891,1339,4.891,1340,4.891,1341,4.891,1342,4.891,1343,4.891,1344,4.891,1345,4.891,1346,4.891,1347,6.06,1348,4.891,1349,4.891,1350,4.891,1351,4.891,1352,4.891,1353,6.06,1354,6.06,1355,4.201,1356,4.891,1357,4.891,1358,4.891,1359,4.891,1360,4.891,1361,4.891,1362,4.891,1363,4.891,1364,4.891,1365,4.891,1366,4.891,1367,4.891,1368,4.891,1369,4.891,1370,4.891,1371,4.891,1372,4.891,1373,4.891,1374,4.891,1375,4.891,1376,4.891,1377,4.891,1378,4.891,1379,4.891,1380,4.891,1381,4.891]],["title/modules.html",[189,3.025]],["body/modules.html",[25,0.017,66,0.017,67,0.017,189,3.581]],["title/overview.html",[1317,3.895]],["body/overview.html",[2,2.319,25,0.017,33,2.094,66,0.017,67,0.017,70,1.282,120,2.892,776,4.519,1317,4.519,1382,5.9,1383,5.9,1384,5.9]],["title/properties.html",[77,0.342,1175,2.394]],["body/properties.html",[25,0.018,66,0.017,67,0.017,77,0.455,1265,4.575,1385,5.974]],["title/miscellaneous/typealiases.html",[1197,1.628,1386,4.489]],["body/miscellaneous/typealiases.html",[25,0.019,54,1.62,66,0.015,67,0.015,71,3.435,72,1.75,73,2.934,75,3.161,76,0.253,82,0.38,112,3.777,113,3.435,114,4.665,115,3.777,116,3.777,117,3.777,168,2.274,175,3.161,211,1.665,294,2.568,299,3.383,302,2.86,303,2.043,313,3.383,314,2.934,319,1.665,323,3.905,353,3.905,357,2.934,373,3.161,374,3.161,375,3.383,376,3.161,377,2.934,378,3.161,379,3.161,380,2.934,381,3.905,382,3.161,383,3.161,384,3.161,385,2.934,450,3.777,1056,3.777,1078,5.232,1197,2.568,1387,4.931,1388,4.931,1389,4.931,1390,6.091,1391,4.931,1392,4.931,1393,4.931,1394,4.236]],["title/miscellaneous/variables.html",[1197,1.628,1395,3.856]],["body/miscellaneous/variables.html",[0,0.561,2,1.327,10,0.388,12,3.025,14,1.16,15,0.712,17,1.508,19,1.261,25,0.019,29,0.774,36,0.409,38,0.91,40,0.676,42,0.381,45,0.676,51,0.91,53,0.362,54,1.194,59,1.732,60,1.532,62,0.712,63,0.865,66,0.004,67,0.004,73,0.608,75,3.513,76,0.052,81,1.077,82,0.367,93,1.945,104,1.27,106,1.066,123,0.345,131,2.833,137,2.26,140,0.472,142,0.711,143,2.397,144,1.391,145,0.711,147,2.821,148,0.792,158,1.451,159,0.532,165,2.095,166,1.555,168,2.438,169,0.711,171,1.654,174,0.782,176,0.447,177,1.387,184,1.364,188,2.193,189,1.451,190,2.074,191,0.643,204,0.865,207,1.987,211,0.996,219,0.472,224,1.755,236,2.86,238,0.877,240,0.782,241,0.711,242,1.387,244,2.909,245,1.387,246,0.943,251,0.877,255,2.104,256,1.755,270,0.91,277,0.782,278,0.655,279,1.387,288,0.711,290,2.074,296,1.261,302,1.222,305,0.782,308,2.26,310,1.387,315,1.547,317,0.792,357,1.451,367,1.563,386,0.782,387,1.387,389,3.111,390,1.387,391,1.387,392,1.387,400,1.261,419,1.006,426,0.711,432,1.537,436,1.261,444,1.006,446,0.608,449,1.699,453,0.782,461,2.391,472,0.711,475,1.387,481,0.711,483,0.782,485,3.04,488,1.077,493,1.261,501,1.261,502,0.782,510,1.868,523,1.699,533,1.699,547,3.475,549,1.868,563,1.261,621,3.963,636,0.711,637,0.782,638,1.387,639,1.387,640,1.387,641,1.387,642,2.601,643,1.387,644,1.387,646,1.868,647,0.877,648,0.877,649,0.877,656,0.711,657,1.387,659,1.387,684,3.437,709,1.387,730,1.161,737,0.877,765,1.128,776,4.281,792,0.655,829,5.754,833,0.782,834,1.387,965,3.207,981,1.261,992,3.095,997,0.782,998,0.782,999,1.387,1000,1.387,1011,0.877,1024,2.26,1025,1.387,1030,2.095,1068,1.555,1073,0.782,1074,1.555,1101,0.782,1104,0.711,1105,0.782,1106,1.387,1107,2.899,1108,0.877,1109,0.877,1110,1.868,1111,0.877,1114,0.877,1116,0.877,1118,1.555,1121,0.782,1124,1.555,1129,0.877,1133,0.877,1134,1.555,1135,0.877,1136,2.095,1152,0.877,1155,0.877,1156,2.095,1159,0.877,1160,1.555,1161,0.782,1162,0.877,1163,2.095,1166,4.965,1168,0.877,1169,1.555,1170,0.877,1171,0.877,1172,0.877,1187,0.877,1197,0.532,1200,0.877,1201,3.095,1202,2.899,1203,3.698,1205,0.877,1207,0.877,1209,0.877,1211,0.877,1222,0.782,1226,0.877,1231,1.555,1265,1.387,1268,3.698,1273,0.782,1282,1.555,1284,0.877,1299,2.095,1301,1.555,1311,0.877,1355,0.877,1394,3.207,1395,0.877,1396,2.439,1397,1.021,1398,1.021,1399,2.439,1400,1.021,1401,1.021,1402,2.439,1403,1.811,1404,1.021,1405,1.021,1406,1.021,1407,1.811,1408,1.811,1409,1.811,1410,2.439,1411,1.021,1412,1.811,1413,1.021,1414,1.021,1415,1.021,1416,1.021,1417,1.021,1418,1.021,1419,1.021,1420,1.021,1421,1.021,1422,1.021,1423,2.439,1424,1.021,1425,1.021,1426,1.021,1427,1.021,1428,1.021,1429,1.021,1430,1.021,1431,1.021,1432,1.811,1433,4.741,1434,2.439,1435,1.021,1436,2.439,1437,1.811,1438,1.811,1439,1.021,1440,2.95,1441,1.021,1442,1.021,1443,2.439,1444,2.95,1445,2.95,1446,1.021,1447,3.375,1448,1.021,1449,1.021,1450,1.021,1451,1.021,1452,1.021,1453,1.811,1454,1.021,1455,1.021,1456,1.021,1457,1.021,1458,1.021,1459,1.021,1460,1.021,1461,1.021,1462,1.021,1463,1.021,1464,2.95,1465,1.021,1466,1.021,1467,2.95,1468,1.021,1469,1.021,1470,1.021,1471,1.021,1472,1.811,1473,1.811,1474,2.439,1475,3.734,1476,2.439,1477,2.439,1478,2.439,1479,2.439,1480,2.439,1481,2.439,1482,2.439,1483,1.811,1484,1.811,1485,1.021,1486,1.021,1487,2.95,1488,1.811,1489,1.811,1490,2.439,1491,1.021,1492,2.95,1493,1.021,1494,1.811,1495,2.439,1496,5.781,1497,5.781,1498,6.699,1499,5.781,1500,6.017,1501,2.439,1502,2.439,1503,2.439,1504,2.439,1505,2.439,1506,2.439,1507,4.741,1508,4.741,1509,2.439,1510,2.439,1511,2.439,1512,2.439,1513,1.811,1514,1.021,1515,1.021,1516,1.811,1517,1.021,1518,4.041,1519,1.021,1520,1.021,1521,1.021,1522,1.021,1523,1.021,1524,1.021,1525,1.021,1526,1.021,1527,1.021,1528,1.021,1529,1.021,1530,1.021,1531,1.021,1532,1.021,1533,2.95,1534,1.021,1535,1.811,1536,1.021,1537,1.021,1538,2.439,1539,1.811,1540,2.95,1541,1.021,1542,1.021,1543,1.811,1544,1.811,1545,1.811,1546,1.021,1547,1.811,1548,1.021,1549,1.021,1550,1.021,1551,1.021,1552,1.021,1553,1.021,1554,1.021,1555,1.021,1556,1.021,1557,1.811,1558,1.021,1559,1.021,1560,1.021,1561,1.021,1562,1.021,1563,1.811,1564,1.021,1565,1.021,1566,1.021,1567,1.811,1568,1.811,1569,1.021,1570,1.021,1571,2.439,1572,1.811,1573,2.439,1574,1.021,1575,1.811,1576,1.021,1577,1.021,1578,1.021,1579,1.021,1580,1.021,1581,1.021,1582,2.439,1583,1.021,1584,1.021,1585,1.021,1586,1.021,1587,1.021,1588,1.021,1589,1.811,1590,1.021,1591,1.021,1592,1.021,1593,1.021,1594,1.811,1595,1.811,1596,1.811,1597,1.021,1598,1.021,1599,1.021,1600,1.021,1601,1.021,1602,1.021,1603,1.021,1604,1.021,1605,1.021,1606,1.021,1607,1.021,1608,1.021,1609,1.021,1610,1.021,1611,1.021,1612,1.021,1613,1.021,1614,1.811,1615,1.021,1616,1.021,1617,2.439,1618,1.811,1619,2.439,1620,1.811,1621,1.811,1622,1.021,1623,1.021,1624,1.021,1625,1.021,1626,1.021,1627,1.021,1628,1.021,1629,1.021,1630,1.021,1631,1.021,1632,1.021,1633,1.021,1634,1.021,1635,1.021,1636,1.021,1637,1.021,1638,1.021,1639,1.021,1640,1.021,1641,1.021,1642,1.021,1643,1.021,1644,1.021,1645,1.021,1646,1.021,1647,1.021,1648,1.021,1649,1.021,1650,1.021,1651,1.021,1652,1.021,1653,1.021,1654,1.021,1655,1.021,1656,1.021,1657,1.021,1658,1.811,1659,5.866,1660,5.866,1661,1.021,1662,1.021,1663,1.021,1664,1.021,1665,1.021,1666,1.021]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":621,"title":{},"body":{"injectables/HubService.html":{},"directives/TooltipDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1385,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":776,"title":{"interfaces/MitreAttackInfo-1.html":{}},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1&scaling=scale",{"_index":1257,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["1/46",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":965,"title":{},"body":{"directives/TooltipDirective.html":{},"miscellaneous/variables.html":{}}}],["10/10",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1051,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":1054,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["10203%2c0.3&t=l5l2apwzhiosa6rt",{"_index":1256,"title":{},"body":{"index.html":{}}}],["11",{"_index":1382,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["139.5.174.205",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["139.5.177.205",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14/16",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["15/18",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["16/17",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1266,"title":{},"body":{"index.html":{}}}],["17.2.0",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["2.11.8",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1138,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["2004.(citation",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2008",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2014",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2015.[3][4][5][6",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2016",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2016)(citation",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2017)(citation",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2018",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2018)(citation",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2019",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2020)(citation",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2021",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2024",{"_index":1323,"title":{},"body":{"license.html":{}}}],["25",{"_index":1384,"title":{},"body":{"overview.html":{}}}],["26165",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26165.(citation",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/3",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4/4",{"_index":1125,"title":{},"body":{"coverage.html":{}}}],["4127)(citation",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49407&viewport",{"_index":1254,"title":{},"body":{"index.html":{}}}],["5",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.3.3",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":810,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["7.8.0",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["74455",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["756oxaa4sgzh74rf.us.auth0.com",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1383,"title":{},"body":{"overview.html":{}}}],["8/9",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["85th",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1127,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["9649%2c",{"_index":1255,"title":{},"body":{"index.html":{}}}],["_cluster",{"_index":728,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["_cluster.id",{"_index":726,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["above",{"_index":1352,"title":{},"body":{"license.html":{}}}],["access",{"_index":1025,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["accordingly",{"_index":1109,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":211,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":219,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"injectables/HubEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["actiontype",{"_index":213,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"injectables/MitreAttackService.html":{}}}],["activate",{"_index":136,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["activatedroutesnapshot",{"_index":130,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["active",{"_index":288,"title":{},"body":{"interfaces/ClusterConfig.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/variables.html":{}}}],["actor",{"_index":687,"title":{},"body":{"components/MitreAttackComponent.html":{},"index.html":{}}}],["actorname",{"_index":537,"title":{},"body":{"injectables/HubService.html":{}}}],["actors",{"_index":1226,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["actual_component",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["add",{"_index":1101,"title":{},"body":{"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["adding",{"_index":1210,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additional",{"_index":83,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["address",{"_index":102,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["advisory",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["against",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agency",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ai",{"_index":1249,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":357,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["allows",{"_index":1228,"title":{},"body":{"index.html":{}}}],["already",{"_index":917,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["alto",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["analysis",{"_index":1233,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1345,"title":{},"body":{"license.html":{}}}],["angular",{"_index":158,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":254,"title":{},"body":{"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":545,"title":{},"body":{"injectables/HubService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0_Guard.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"injectables/UserEffects.html":{},"components/UserLoginSystemComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anti",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":1268,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apiinterceptor",{"_index":1124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiresponse",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["apiurl",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["app_callback",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1118,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appends",{"_index":905,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/HubEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application's",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":645,"title":{},"body":{"interfaces/HubState.html":{}}}],["april",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apt28",{"_index":1201,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apt28)(citation",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apt29",{"_index":1202,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":891,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["arising",{"_index":1379,"title":{},"body":{"license.html":{}}}],["array",{"_index":188,"title":{},"body":{"components/CardComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["ars",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifacts",{"_index":1294,"title":{},"body":{"index.html":{}}}],["assets/images/card/polygon.svg",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assistance",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associate",{"_index":855,"title":{},"body":{"components/ModalComponent.html":{}}}],["associated",{"_index":169,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/ClusterConfig.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":739,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["att&ck",{"_index":1220,"title":{},"body":{"index.html":{}}}],["attacco",{"_index":756,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack",{"_index":302,"title":{},"body":{"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["attack'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["attack.component",{"_index":473,"title":{},"body":{"components/HubComponent.html":{},"injectables/MitreAttackService.html":{}}}],["attack.component.html",{"_index":660,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.scss",{"_index":661,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts",{"_index":657,"title":{},"body":{"components/MitreAttackComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["attack.component.ts:102",{"_index":707,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:108",{"_index":688,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:118",{"_index":692,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:125",{"_index":708,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:133",{"_index":701,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:149",{"_index":670,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:160",{"_index":676,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:188",{"_index":673,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:53",{"_index":693,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:59",{"_index":694,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:65",{"_index":706,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:71",{"_index":691,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:77",{"_index":704,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:84",{"_index":680,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:90",{"_index":690,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:96",{"_index":683,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.github.io/attack",{"_index":1238,"title":{},"body":{"index.html":{}}}],["attack.json",{"_index":1245,"title":{},"body":{"index.html":{}}}],["attack.model.ts",{"_index":762,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["attack.service",{"_index":718,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.service.ts",{"_index":778,"title":{},"body":{"injectables/MitreAttackService.html":{},"coverage.html":{}}}],["attack.service.ts:24",{"_index":794,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["attack.service.ts:32",{"_index":785,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["attack.service.ts:52",{"_index":788,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["attack.service.ts:79",{"_index":790,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["attack/enterprise",{"_index":1244,"title":{},"body":{"index.html":{}}}],["attack/mitre",{"_index":472,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["attack/services/mitre",{"_index":777,"title":{},"body":{"injectables/MitreAttackService.html":{},"coverage.html":{}}}],["attackhacker",{"_index":662,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attackhacker.ipadresss",{"_index":746,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attackhacker.title",{"_index":743,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attacks",{"_index":682,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attaco",{"_index":750,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attempt",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attributed",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["august",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":1107,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["auth0",{"_index":75,"title":{},"body":{"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["auth0/auth0",{"_index":157,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["auth0_guard",{"_index":119,"title":{"injectables/Auth0_Guard.html":{}},"body":{"injectables/Auth0_Guard.html":{},"coverage.html":{}}}],["auth0config",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth0error",{"_index":69,"title":{"interfaces/Auth0Error.html":{}},"body":{"interfaces/Auth0Error.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["auth0errortype",{"_index":114,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["auth0providers",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth0service",{"_index":124,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["authenticate",{"_index":991,"title":{},"body":{"injectables/UserFacade.html":{}}}],["authenticated",{"_index":1046,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["authenticating",{"_index":164,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["authentication",{"_index":147,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["authenticationmanager",{"_index":1007,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["authfeaturekey",{"_index":1106,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmodule.forroot",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorization",{"_index":1211,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authorizationparams",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1370,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":142,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["authservice.getaccesstokensilently().pipe",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1008,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"index.html":{}}}],["base",{"_index":1394,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":672,"title":{},"body":{"components/MitreAttackComponent.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["bear",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":883,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["behaviorsubject",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{}}}],["being",{"_index":681,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["between",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":906,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["boolean",{"_index":106,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/ChipConfig.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"directives/TooltipDirective.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":803,"title":{},"body":{"injectables/MitreAttackService.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":802,"title":{},"body":{"injectables/MitreAttackService.html":{},"dependencies.html":{}}}],["break",{"_index":832,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["browser",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["brute",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1293,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":373,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["c",{"_index":1322,"title":{},"body":{"license.html":{}}}],["callback",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["called",{"_index":1009,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["campaign",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivate",{"_index":128,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["canactivate(undefined",{"_index":129,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["capabilities",{"_index":1312,"title":{},"body":{"index.html":{}}}],["card",{"_index":176,"title":{},"body":{"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["card'},{'name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["card.component.html",{"_index":178,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":179,"title":{},"body":{"components/CardComponent.html":{}}}],["card.model",{"_index":858,"title":{},"body":{"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{}}}],["card/card.component",{"_index":839,"title":{},"body":{"components/ModalComponent.html":{}}}],["card_directives",{"_index":177,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["card_polygon",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cardaction",{"_index":212,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/enumerations.html":{}}}],["cardaction.info",{"_index":812,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["cardaction.settings",{"_index":815,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["cardcomponent",{"_index":38,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardconfig",{"_index":180,"title":{"interfaces/CardConfig.html":{}},"body":{"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"coverage.html":{}}}],["cardconfig().footer",{"_index":199,"title":{},"body":{"components/CardComponent.html":{}}}],["cardconfig().header.label",{"_index":195,"title":{},"body":{"components/CardComponent.html":{}}}],["cardconfig().header.value",{"_index":196,"title":{},"body":{"components/CardComponent.html":{}}}],["cardfooter",{"_index":205,"title":{"interfaces/CardFooter.html":{}},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"coverage.html":{}}}],["cardheader",{"_index":206,"title":{"interfaces/CardHeader.html":{}},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"coverage.html":{}}}],["cardicon",{"_index":210,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/enumerations.html":{}}}],["cardicon.info",{"_index":811,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["cardicon.settings",{"_index":814,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["cards",{"_index":663,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{}}}],["case",{"_index":817,"title":{},"body":{"injectables/MitreAttackService.html":{},"injectables/UserService.html":{}}}],["castro",{"_index":1325,"title":{},"body":{"license.html":{}}}],["catch",{"_index":1032,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["catcherror((err",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cells",{"_index":767,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["center",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["centered",{"_index":830,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["chain",{"_index":369,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["change",{"_index":1286,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1038,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["charge",{"_index":1330,"title":{},"body":{"license.html":{}}}],["che",{"_index":629,"title":{},"body":{"injectables/HubService.html":{}}}],["check",{"_index":924,"title":{},"body":{"directives/TooltipDirective.html":{},"index.html":{}}}],["checks",{"_index":922,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["chemical",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chemicals",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chip",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["chip'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["chip.component.html",{"_index":226,"title":{},"body":{"components/ChipComponent.html":{}}}],["chip.component.scss",{"_index":227,"title":{},"body":{"components/ChipComponent.html":{}}}],["chip.model",{"_index":274,"title":{},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{}}}],["chip/chip.component",{"_index":253,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["chip?:any",{"_index":772,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["chipcomponent",{"_index":40,"title":{"components/ChipComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chipconfig",{"_index":228,"title":{"interfaces/ChipConfig.html":{}},"body":{"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/MitreAttackComponent.html":{},"coverage.html":{}}}],["chipconfig().label",{"_index":233,"title":{},"body":{"components/ChipComponent.html":{}}}],["chips",{"_index":244,"title":{},"body":{"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"miscellaneous/variables.html":{}}}],["chipset",{"_index":251,"title":{},"body":{"components/ChipsetComponent.html":{},"miscellaneous/variables.html":{}}}],["chipsetcomponent",{"_index":42,"title":{"components/ChipsetComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chipsetconfig",{"_index":249,"title":{"interfaces/ChipsetConfig.html":{}},"body":{"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"coverage.html":{}}}],["chipsetconfig().content",{"_index":265,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["chipsetconfig().header",{"_index":261,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["chipsetcontent",{"_index":271,"title":{"interfaces/ChipsetContent.html":{}},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"coverage.html":{}}}],["chipsetheader",{"_index":273,"title":{"interfaces/ChipsetHeader.html":{}},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"coverage.html":{}}}],["choice",{"_index":1308,"title":{},"body":{"index.html":{}}}],["christian",{"_index":1324,"title":{},"body":{"license.html":{}}}],["ci",{"_index":853,"title":{},"body":{"components/ModalComponent.html":{}}}],["citation",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["citations",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["claim",{"_index":1373,"title":{},"body":{"license.html":{}}}],["class",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["classicon",{"_index":235,"title":{},"body":{"interfaces/ChipConfig.html":{}}}],["clears",{"_index":900,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["cleartimeout(this.showtimeout",{"_index":939,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["cli",{"_index":1264,"title":{},"body":{"index.html":{}}}],["client",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clientid",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clinton",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["close",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster",{"_index":278,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/variables.html":{}}}],["cluster'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["cluster.active",{"_index":729,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["cluster.component.html",{"_index":280,"title":{},"body":{"components/ClusterComponent.html":{}}}],["cluster.component.scss",{"_index":281,"title":{},"body":{"components/ClusterComponent.html":{}}}],["cluster.id",{"_index":727,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["cluster.techniques.map((technique",{"_index":734,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["cluster.techniques?.length",{"_index":733,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["cluster_directives",{"_index":279,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clustercomponent",{"_index":45,"title":{"components/ClusterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clusterconfig",{"_index":282,"title":{"interfaces/ClusterConfig.html":{}},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"coverage.html":{}}}],["clusterconfig().name",{"_index":286,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusters",{"_index":395,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["code",{"_index":1288,"title":{},"body":{"index.html":{}}}],["col",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["command",{"_index":1274,"title":{},"body":{"index.html":{}}}],["committee",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":246,"title":{},"body":{"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["compromise",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compromised",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["con",{"_index":592,"title":{},"body":{"injectables/HubService.html":{}}}],["conditions",{"_index":1351,"title":{},"body":{"license.html":{}}}],["conducted",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":184,"title":{},"body":{"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":418,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{}}}],["configures",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuring",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["congressional",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":1380,"title":{},"body":{"license.html":{}}}],["consent_required",{"_index":116,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["console",{"_index":1098,"title":{},"body":{"injectables/UserService.html":{}}}],["console.error('auth_0",{"_index":1099,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":191,"title":{},"body":{"components/CardComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":407,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{}}}],["constructor(action",{"_index":974,"title":{},"body":{"injectables/UserEffects.html":{}}}],["constructor(actions",{"_index":489,"title":{},"body":{"injectables/HubEffects.html":{}}}],["constructor(private",{"_index":518,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"directives/TooltipDirective.html":{},"injectables/UserFacade.html":{}}}],["constructor(renderer",{"_index":877,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["constructor(store",{"_index":521,"title":{},"body":{"injectables/HubFacade.html":{},"injectables/UserFacade.html":{}}}],["containing",{"_index":255,"title":{},"body":{"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":270,"title":{},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"miscellaneous/variables.html":{}}}],["content.label",{"_index":847,"title":{},"body":{"components/ModalComponent.html":{}}}],["content.value",{"_index":846,"title":{},"body":{"components/ModalComponent.html":{}}}],["contract",{"_index":1376,"title":{},"body":{"license.html":{}}}],["coordinate",{"_index":928,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["coordinates",{"_index":898,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["copies",{"_index":1347,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1333,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1321,"title":{},"body":{"license.html":{}}}],["core/modules/user/models/user.model",{"_index":463,"title":{},"body":{"components/HubComponent.html":{}}}],["core/modules/user/service/user.service",{"_index":459,"title":{},"body":{"components/HubComponent.html":{}}}],["core/modules/user/store/user.facade",{"_index":464,"title":{},"body":{"components/HubComponent.html":{}}}],["countries",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["course",{"_index":378,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["court",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":1112,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cozy",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creare",{"_index":557,"title":{},"body":{"injectables/HubService.html":{}}}],["createaction",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[get",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":324,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"components/UserLoginSystemComponent.html":{}}}],["created_by_ref",{"_index":325,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["createeffect",{"_index":494,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{}}}],["createfeatureselector(authfeaturekey",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector(hublistfeaturekey",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createmitrecluster",{"_index":781,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["createmitrecluster(mitreattackinfo",{"_index":784,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["createmitretechniques",{"_index":782,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["createmitretechniques(mitreattackinfo",{"_index":787,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["createreducer",{"_index":638,"title":{},"body":{"interfaces/HubState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":786,"title":{},"body":{"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{}}}],["createselector",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(getuserfeature",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtooltip",{"_index":862,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["crowdstrike",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":208,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{}}}],["cta",{"_index":201,"title":{},"body":{"components/CardComponent.html":{}}}],["current",{"_index":446,"title":{},"body":{"components/HubComponent.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":946,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["cyber",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cybersecurity",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1374,"title":{},"body":{"license.html":{}}}],["dark",{"_index":238,"title":{},"body":{"interfaces/ChipConfig.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":168,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.map(item",{"_index":603,"title":{},"body":{"injectables/HubService.html":{}}}],["data.objects.filter(mitreinfo",{"_index":553,"title":{},"body":{"injectables/HubService.html":{}}}],["data.objects.find(e",{"_index":575,"title":{},"body":{"injectables/HubService.html":{}}}],["data.objects.foreach((mitreinfo",{"_index":564,"title":{},"body":{"injectables/HubService.html":{}}}],["datamitreattack",{"_index":740,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["date",{"_index":95,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["deal",{"_index":1335,"title":{},"body":{"license.html":{}}}],["dealerschoice)(citation",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dealings",{"_index":1381,"title":{},"body":{"license.html":{}}}],["deas",{"_index":308,"title":{},"body":{"components/DeasComponent.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["deas'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["deas.component.html",{"_index":311,"title":{},"body":{"components/DeasComponent.html":{}}}],["deas.component.scss",{"_index":312,"title":{},"body":{"components/DeasComponent.html":{}}}],["deascomponent",{"_index":47,"title":{"components/DeasComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{}}}],["deasdemo",{"_index":1217,"title":{},"body":{"index.html":{}}}],["debugging",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":910,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["dedicated",{"_index":1103,"title":{},"body":{"injectables/UserService.html":{}}}],["default",{"_index":143,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":133,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["definition",{"_index":313,"title":{"interfaces/Definition.html":{}},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["definition_type",{"_index":364,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["delay",{"_index":546,"title":{},"body":{"injectables/HubService.html":{},"directives/TooltipDirective.html":{}}}],["delle",{"_index":560,"title":{},"body":{"injectables/HubService.html":{}}}],["demo",{"_index":719,"title":{},"body":{"components/MitreAttackComponent.html":{},"index.html":{}}}],["democratic",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":1176,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deployment",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deployurl",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describing",{"_index":84,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["descrizione",{"_index":747,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["destroy",{"_index":396,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["destroying",{"_index":1014,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["destroys",{"_index":412,"title":{},"body":{"components/HubComponent.html":{}}}],["destruction",{"_index":423,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["detects",{"_index":384,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["determines",{"_index":135,"title":{},"body":{"injectables/Auth0_Guard.html":{},"directives/TooltipDirective.html":{}}}],["dev",{"_index":1282,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":1280,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1187,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["di",{"_index":749,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["different",{"_index":218,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"miscellaneous/enumerations.html":{}}}],["directive",{"_index":33,"title":{"directives/TooltipDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["directives/tooltip.directive",{"_index":187,"title":{},"body":{"components/CardComponent.html":{},"components/ClusterComponent.html":{}}}],["directives_hub",{"_index":391,"title":{},"body":{"components/HubComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1292,"title":{},"body":{"index.html":{}}}],["directorate",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directory",{"_index":1297,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":980,"title":{},"body":{"injectables/UserEffects.html":{}}}],["dispatched",{"_index":493,"title":{},"body":{"injectables/HubEffects.html":{},"interfaces/HubState.html":{},"injectables/UserEffects.html":{},"miscellaneous/variables.html":{}}}],["dispatches",{"_index":509,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/UserFacade.html":{}}}],["display",{"_index":890,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["displayed",{"_index":918,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["displaying",{"_index":658,"title":{},"body":{"components/MitreAttackComponent.html":{},"directives/TooltipDirective.html":{}}}],["displays",{"_index":1219,"title":{},"body":{"index.html":{}}}],["disponibile",{"_index":759,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["dist",{"_index":1296,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1343,"title":{},"body":{"license.html":{}}}],["district",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dnc",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document",{"_index":1004,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["document.documentelement.scrollleft",{"_index":960,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["document.documentelement.scrolltop",{"_index":963,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["documentation",{"_index":1113,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doj",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["domain",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["domains",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doping",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["down&starting",{"_index":1258,"title":{},"body":{"index.html":{}}}],["drovorub",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dukes.[7][8",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":579,"title":{},"body":{"injectables/HubService.html":{}}}],["e.g",{"_index":1227,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":576,"title":{},"body":{"injectables/HubService.html":{}}}],["e2e",{"_index":1306,"title":{},"body":{"index.html":{}}}],["easier",{"_index":1234,"title":{},"body":{"index.html":{}}}],["effect",{"_index":506,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{}}}],["effects",{"_index":483,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{},"miscellaneous/variables.html":{}}}],["election",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{}}}],["elementi",{"_index":628,"title":{},"body":{"injectables/HubService.html":{}}}],["elements",{"_index":887,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["email",{"_index":101,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["email_verified",{"_index":107,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["end",{"_index":1305,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoints",{"_index":549,"title":{},"body":{"injectables/HubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enterprise",{"_index":1240,"title":{},"body":{"index.html":{}}}],["entit",{"_index":571,"title":{},"body":{"injectables/HubService.html":{}}}],["entity",{"_index":574,"title":{},"body":{"injectables/HubService.html":{}}}],["enum",{"_index":217,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"miscellaneous/enumerations.html":{}}}],["enumeration",{"_index":425,"title":{},"body":{"components/HubComponent.html":{}}}],["enumerations",{"_index":1198,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":547,"title":{},"body":{"injectables/HubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.auth0.clientid",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.auth0.domain",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.deployurl}/${environment.auth0.redirect_uri",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":548,"title":{},"body":{"injectables/HubService.html":{}}}],["err",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.error",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":73,"title":{},"body":{"interfaces/Auth0Error.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["error('auth0",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error('network",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error_description",{"_index":79,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["errors",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eset",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esterno",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["europe",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":669,"title":{},"body":{"components/MitreAttackComponent.html":{},"directives/TooltipDirective.html":{},"license.html":{}}}],["event.clienty",{"_index":937,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["event.target",{"_index":720,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["example",{"_index":820,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["execute",{"_index":1302,"title":{},"body":{"index.html":{}}}],["executed",{"_index":214,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{}}}],["export",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["express",{"_index":1361,"title":{},"body":{"license.html":{}}}],["extended",{"_index":450,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/typealiases.html":{}}}],["extendedmitreattackinfo",{"_index":299,"title":{},"body":{"interfaces/ClusterConfig.html":{},"components/HubComponent.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/typealiases.html":{}}}],["extendedmitredata",{"_index":594,"title":{},"body":{"injectables/HubService.html":{}}}],["extends",{"_index":1393,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["external",{"_index":295,"title":{},"body":{"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{}}}],["external_id",{"_index":367,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/variables.html":{}}}],["external_references",{"_index":326,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["externalid",{"_index":289,"title":{},"body":{"interfaces/ClusterConfig.html":{},"injectables/MitreAttackService.html":{}}}],["externalreference",{"_index":327,"title":{"interfaces/ExternalReference.html":{}},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"coverage.html":{}}}],["facade",{"_index":429,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{}}}],["facility",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":730,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":89,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["family_name",{"_index":90,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["fase",{"_index":752,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["fasi",{"_index":748,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["feature",{"_index":485,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":526,"title":{},"body":{"injectables/HubFacade.html":{}}}],["fetching",{"_index":487,"title":{},"body":{"injectables/HubEffects.html":{}}}],["figma",{"_index":1246,"title":{},"body":{"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["files",{"_index":1287,"title":{},"body":{"index.html":{},"license.html":{}}}],["filter",{"_index":461,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/UserFacade.html":{},"miscellaneous/variables.html":{}}}],["filter(boolean",{"_index":439,"title":{},"body":{"components/HubComponent.html":{}}}],["filter(event",{"_index":668,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["filter(item",{"_index":624,"title":{},"body":{"injectables/HubService.html":{}}}],["filter(technique",{"_index":619,"title":{},"body":{"injectables/HubService.html":{}}}],["filterbyactorrecursive",{"_index":534,"title":{},"body":{"injectables/HubService.html":{}}}],["filterbyactorrecursive(data",{"_index":536,"title":{},"body":{"injectables/HubService.html":{}}}],["filtered",{"_index":702,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["filteredsubtechniques",{"_index":613,"title":{},"body":{"injectables/HubService.html":{}}}],["filtereduses",{"_index":616,"title":{},"body":{"injectables/HubService.html":{}}}],["filtering",{"_index":1229,"title":{},"body":{"index.html":{}}}],["filters",{"_index":671,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["filtra",{"_index":604,"title":{},"body":{"injectables/HubService.html":{}}}],["fireeye",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":1309,"title":{},"body":{"index.html":{}}}],["first_seen",{"_index":358,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["fitness",{"_index":1366,"title":{},"body":{"license.html":{}}}],["five",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flag",{"_index":237,"title":{},"body":{"interfaces/ChipConfig.html":{}}}],["flex",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["following",{"_index":1273,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":203,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["for(card",{"_index":850,"title":{},"body":{"components/ModalComponent.html":{}}}],["for(chip",{"_index":267,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["for(content",{"_index":843,"title":{},"body":{"components/ModalComponent.html":{}}}],["for(cta",{"_index":198,"title":{},"body":{"components/CardComponent.html":{}}}],["for(header",{"_index":260,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["for(row",{"_index":264,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["force",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foreign",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":1221,"title":{},"body":{"index.html":{}}}],["free",{"_index":1329,"title":{},"body":{"license.html":{}}}],["full",{"_index":92,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["function",{"_index":224,"title":{},"body":{"interfaces/CardFooter.html":{},"interfaces/ClusterConfig.html":{},"interfaces/HubState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1204,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1350,"title":{},"body":{"license.html":{}}}],["further",{"_index":1313,"title":{},"body":{"index.html":{}}}],["fw?page",{"_index":1251,"title":{},"body":{"index.html":{}}}],["g",{"_index":1276,"title":{},"body":{"index.html":{}}}],["g0000",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["g0007",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["g0008",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["general",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":1290,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1263,"title":{},"body":{"index.html":{}}}],["generic",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["getmitredata",{"_index":488,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmitredata(filter",{"_index":524,"title":{},"body":{"injectables/HubFacade.html":{}}}],["getmitredata(filter:hackertype",{"_index":530,"title":{},"body":{"injectables/HubFacade.html":{}}}],["getmitredatasuccess",{"_index":501,"title":{},"body":{"injectables/HubEffects.html":{},"interfaces/HubState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":1215,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuserfeature",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["given",{"_index":87,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["given_name",{"_index":88,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["gli",{"_index":627,"title":{},"body":{"injectables/HubService.html":{}}}],["globally",{"_index":1271,"title":{},"body":{"index.html":{}}}],["go",{"_index":1316,"title":{},"body":{"index.html":{}}}],["government",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["governments",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":1328,"title":{},"body":{"license.html":{}}}],["grizzly",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["groups",{"_index":1232,"title":{},"body":{"index.html":{}}}],["gru",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gtsss",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guard",{"_index":163,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["guard.ts",{"_index":122,"title":{},"body":{"injectables/Auth0_Guard.html":{},"coverage.html":{}}}],["guard.ts:20",{"_index":150,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["guard.ts:26",{"_index":146,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["guard.ts:34",{"_index":134,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["hacker",{"_index":426,"title":{},"body":{"components/HubComponent.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["hackersmock",{"_index":709,"title":{},"body":{"components/MitreAttackComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hackersmock.apt28",{"_index":679,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["hackersmock[hackertype",{"_index":723,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["hackertype",{"_index":397,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["hackertype.apt28",{"_index":643,"title":{},"body":{"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["hackertype.apt29",{"_index":737,"title":{},"body":{"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["hackertype.generic",{"_index":502,"title":{},"body":{"injectables/HubEffects.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["halo",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handle",{"_index":296,"title":{},"body":{"interfaces/ClusterConfig.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["handler",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["handles",{"_index":414,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/UserService.html":{}}}],["handling",{"_index":779,"title":{},"body":{"injectables/MitreAttackService.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["hanno",{"_index":630,"title":{},"body":{"injectables/HubService.html":{}}}],["header",{"_index":204,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"miscellaneous/variables.html":{}}}],["header.label",{"_index":262,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["header:string",{"_index":769,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["headers",{"_index":1212,"title":{},"body":{"miscellaneous/functions.html":{}}}],["height",{"_index":1053,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["help",{"_index":1314,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1327,"title":{},"body":{"license.html":{}}}],["hides",{"_index":902,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hidetooltip",{"_index":863,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hierarchy",{"_index":452,"title":{},"body":{"components/HubComponent.html":{}}}],["highcharts",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["hillary",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holders",{"_index":1371,"title":{},"body":{"license.html":{}}}],["hook",{"_index":411,"title":{},"body":{"components/HubComponent.html":{}}}],["host",{"_index":1049,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["hostlistener",{"_index":930,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostlistener('mouseenter",{"_index":911,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostlistener('mouseleave",{"_index":912,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostlistener('mousemove",{"_index":914,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostlisteners",{"_index":873,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["html",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{}}}],["htmlelement",{"_index":920,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["htmlelement.offsetwidth",{"_index":971,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["htmlelement.scrollwidth",{"_index":970,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["htmlselectelement).value",{"_index":721,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["http",{"_index":533,"title":{},"body":{"injectables/HubService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:1234",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1284,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":544,"title":{},"body":{"injectables/HubService.html":{},"injectables/UserService.html":{}}}],["httphandlerfn",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httprequest",{"_index":1207,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["https://attack.mitre.org",{"_index":1235,"title":{},"body":{"index.html":{}}}],["https://attack.mitre.org/groups",{"_index":1236,"title":{},"body":{"index.html":{}}}],["https://attack.mitre.org/groups/g0007",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/mitre/cti/blob/master/enterprise",{"_index":1243,"title":{},"body":{"index.html":{}}}],["https://mitre",{"_index":1237,"title":{},"body":{"index.html":{}}}],["https://www.figma.com/proto/526imlmqdt7kkcfgaekcd5/deas",{"_index":1248,"title":{},"body":{"index.html":{}}}],["hub",{"_index":389,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["hub'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["hub.actions",{"_index":517,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{}}}],["hub.component.html",{"_index":393,"title":{},"body":{"components/HubComponent.html":{}}}],["hub.component.scss",{"_index":394,"title":{},"body":{"components/HubComponent.html":{}}}],["hub.selectors",{"_index":529,"title":{},"body":{"injectables/HubFacade.html":{}}}],["hub/models/hub.models",{"_index":713,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["hub/services/hub.service",{"_index":714,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["hub/store/hub.facade",{"_index":715,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["hubcomponent",{"_index":49,"title":{"components/HubComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{}}}],["hubeffects",{"_index":481,"title":{"injectables/HubEffects.html":{}},"body":{"injectables/HubEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hubfacade",{"_index":388,"title":{"injectables/HubFacade.html":{}},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"coverage.html":{}}}],["hubfeature",{"_index":1156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["hublistfeaturekey",{"_index":640,"title":{},"body":{"interfaces/HubState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hubreducer",{"_index":646,"title":{},"body":{"interfaces/HubState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hubservice",{"_index":398,"title":{"injectables/HubService.html":{}},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"coverage.html":{}}}],["hubstate",{"_index":636,"title":{"interfaces/HubState.html":{}},"body":{"interfaces/HubState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":209,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/enumerations.html":{}}}],["icons",{"_index":221,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"miscellaneous/enumerations.html":{}}}],["id",{"_index":290,"title":{},"body":{"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/variables.html":{}}}],["id=0%3a1&node",{"_index":1252,"title":{},"body":{"index.html":{}}}],["id=722%3a60720",{"_index":1261,"title":{},"body":{"index.html":{}}}],["id=977",{"_index":1253,"title":{},"body":{"index.html":{}}}],["identified",{"_index":685,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["identifier",{"_index":109,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"coverage.html":{}}}],["identity_class",{"_index":363,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["if(attackhacker",{"_index":742,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["if(cardconfig",{"_index":193,"title":{},"body":{"components/CardComponent.html":{}}}],["if(cardconfig().footer",{"_index":197,"title":{},"body":{"components/CardComponent.html":{}}}],["if(cardconfig().header",{"_index":194,"title":{},"body":{"components/CardComponent.html":{}}}],["if(cards.length",{"_index":757,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["if(chipconfig",{"_index":231,"title":{},"body":{"components/ChipComponent.html":{}}}],["if(chipconfig().icon",{"_index":232,"title":{},"body":{"components/ChipComponent.html":{}}}],["if(chipsetconfig",{"_index":258,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["if(chipsetconfig().content",{"_index":263,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["if(chipsetconfig().header",{"_index":259,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["if(clusterconfig",{"_index":285,"title":{},"body":{"components/ClusterComponent.html":{}}}],["if(clusters.length",{"_index":755,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["if(content.label",{"_index":845,"title":{},"body":{"components/ModalComponent.html":{}}}],["if(datamitreattack",{"_index":741,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["if(mitreattackinfo",{"_index":738,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["if(mitrefilters",{"_index":736,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["if(modalconfig.cards.length",{"_index":848,"title":{},"body":{"components/ModalComponent.html":{}}}],["if(modalconfig.content.length",{"_index":842,"title":{},"body":{"components/ModalComponent.html":{}}}],["image",{"_index":1163,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":1310,"title":{},"body":{"index.html":{}}}],["implied",{"_index":1362,"title":{},"body":{"license.html":{}}}],["import",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["important",{"_index":1052,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["importprovidersfrom",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["included",{"_index":1355,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["includi",{"_index":625,"title":{},"body":{"injectables/HubService.html":{}}}],["including",{"_index":1222,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":76,"title":{"index.html":{}},"body":{"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":103,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/ClusterConfig.html":{},"interfaces/UserModel.html":{}}}],["indicating",{"_index":141,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/ChipConfig.html":{},"directives/TooltipDirective.html":{}}}],["indicted",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indictment",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indirizzo",{"_index":744,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["industry",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":303,"title":{},"body":{"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["informazioni",{"_index":818,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["initial",{"_index":641,"title":{},"body":{"interfaces/HubState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["initialize",{"_index":1005,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["initializes",{"_index":491,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{}}}],["initialstate",{"_index":642,"title":{},"body":{"interfaces/HubState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialstate.data",{"_index":648,"title":{},"body":{"interfaces/HubState.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":153,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["inject(authservice",{"_index":145,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["inject(document",{"_index":1016,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["inject(httpclient",{"_index":542,"title":{},"body":{"injectables/HubService.html":{},"injectables/UserService.html":{}}}],["inject(hubfacade",{"_index":427,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["inject(hubservice",{"_index":433,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["inject(mitreattackservice",{"_index":705,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["inject(ngbmodal",{"_index":793,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["inject(router",{"_index":149,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/UserLoginSystemComponent.html":{}}}],["inject(userfacade",{"_index":453,"title":{},"body":{"components/HubComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["inject(userservice",{"_index":457,"title":{},"body":{"components/HubComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["injectable",{"_index":118,"title":{"injectables/Auth0_Guard.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{}},"body":{"injectables/Auth0_Guard.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":120,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":795,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["input",{"_index":185,"title":{},"body":{"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{}}}],["input.required",{"_index":192,"title":{},"body":{"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{}}}],["inputs",{"_index":181,"title":{},"body":{"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{}}}],["install",{"_index":1270,"title":{},"body":{"index.html":{}}}],["instance",{"_index":151,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["institutes",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intelligence",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interacted",{"_index":215,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{}}}],["interacting",{"_index":430,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{}}}],["interaction",{"_index":416,"title":{},"body":{"components/HubComponent.html":{}}}],["interaction_required",{"_index":117,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["interceptor",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":68,"title":{"interfaces/Auth0Error.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"interfaces/UserModel.html":{},"interfaces/UserState.html":{}},"body":{"interfaces/Auth0Error.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"interfaces/UserModel.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["interfaces",{"_index":70,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"interfaces/UserModel.html":{},"interfaces/UserState.html":{},"overview.html":{}}}],["interfere",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["involved",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ip",{"_index":745,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["ipadresss",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ipsum",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iron",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isauthenticated",{"_index":1047,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["isdark",{"_index":236,"title":{},"body":{"interfaces/ChipConfig.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["it's",{"_index":916,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["item",{"_index":623,"title":{},"body":{"injectables/HubService.html":{}}}],["item.subtechniques",{"_index":606,"title":{},"body":{"injectables/HubService.html":{}}}],["item.subtechniques.length",{"_index":633,"title":{},"body":{"injectables/HubService.html":{}}}],["item.techniques",{"_index":611,"title":{},"body":{"injectables/HubService.html":{}}}],["item.techniques.length",{"_index":635,"title":{},"body":{"injectables/HubService.html":{}}}],["item.techniques.map(technique",{"_index":612,"title":{},"body":{"injectables/HubService.html":{}}}],["item.uses",{"_index":608,"title":{},"body":{"injectables/HubService.html":{}}}],["item.uses.filter(use",{"_index":609,"title":{},"body":{"injectables/HubService.html":{}}}],["item.uses.length",{"_index":634,"title":{},"body":{"injectables/HubService.html":{}}}],["january",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jar)(citation",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jm23xl7wtu0ozm8sb8litlfymws38a70",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":1242,"title":{},"body":{"index.html":{}}}],["jul",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["july",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["june",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":1304,"title":{},"body":{"index.html":{}}}],["kcp.phase_name",{"_index":600,"title":{},"body":{"injectables/HubService.html":{}}}],["key",{"_index":563,"title":{},"body":{"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["kill",{"_index":368,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["kill_chain_name",{"_index":371,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["kill_chain_phases",{"_index":340,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["killchainphase",{"_index":341,"title":{"interfaces/KillChainPhase.html":{}},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"coverage.html":{}}}],["kind",{"_index":1360,"title":{},"body":{"license.html":{}}}],["kit",{"_index":475,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":207,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"miscellaneous/variables.html":{}}}],["labels",{"_index":337,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["laboratory",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":98,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["last_seen",{"_index":359,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["layer.json",{"_index":1241,"title":{},"body":{"index.html":{}}}],["le",{"_index":593,"title":{},"body":{"injectables/HubService.html":{},"components/MitreAttackComponent.html":{}}}],["left",{"_index":966,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["left}px",{"_index":969,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["legend",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["lg",{"_index":829,"title":{},"body":{"injectables/MitreAttackService.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":1375,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1372,"title":{},"body":{"license.html":{}}}],["libraries/components/card/card.component",{"_index":469,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["libraries/components/chip",{"_index":711,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["libraries/components/chip/chip.component",{"_index":710,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["libraries/components/cluster/cluster.component",{"_index":470,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["libraries/components/loader/loader.component",{"_index":468,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["libraries/components/modal/modal.component",{"_index":797,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["libraries/directives/tooltip.directive",{"_index":465,"title":{},"body":{"components/HubComponent.html":{}}}],["libraries/models/card.model",{"_index":716,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["libraries/models/cluster.model",{"_index":471,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["libraries/models/modal.model",{"_index":799,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["license",{"_index":1319,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":410,"title":{},"body":{"components/HubComponent.html":{}}}],["limitation",{"_index":1338,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1363,"title":{},"body":{"license.html":{}}}],["line",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lista",{"_index":590,"title":{},"body":{"injectables/HubService.html":{}}}],["listener",{"_index":893,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["literal",{"_index":1391,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["loader",{"_index":651,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["loader.component.html",{"_index":652,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":653,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadercomponent",{"_index":51,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1026,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["localstorage.getitem('token')?.length",{"_index":170,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["localstorage.removeitem('token",{"_index":1034,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem('token",{"_index":1028,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["log",{"_index":479,"title":{},"body":{"components/HubComponent.html":{}}}],["logged",{"_index":982,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["login",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login(user",{"_index":989,"title":{},"body":{"injectables/UserFacade.html":{},"injectables/UserService.html":{}}}],["login_required",{"_index":115,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["loginsuccess",{"_index":981,"title":{},"body":{"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logout",{"_index":415,"title":{},"body":{"components/HubComponent.html":{}}}],["logoutparams",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["logs",{"_index":1061,"title":{},"body":{"injectables/UserService.html":{}}}],["lorem",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["making",{"_index":1073,"title":{},"body":{"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["malicious",{"_index":686,"title":{},"body":{"components/MitreAttackComponent.html":{},"index.html":{}}}],["malware",{"_index":382,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["management",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["managing",{"_index":422,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["map",{"_index":514,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["map((response",{"_index":500,"title":{},"body":{"injectables/HubEffects.html":{}}}],["map((subtechnique",{"_index":585,"title":{},"body":{"injectables/HubService.html":{}}}],["map((technique",{"_index":602,"title":{},"body":{"injectables/HubService.html":{}}}],["map((user",{"_index":979,"title":{},"body":{"injectables/UserEffects.html":{}}}],["mapmitredata",{"_index":535,"title":{},"body":{"injectables/HubService.html":{}}}],["mapmitredata(data",{"_index":540,"title":{},"body":{"injectables/HubService.html":{}}}],["mappa",{"_index":559,"title":{},"body":{"injectables/HubService.html":{}}}],["marking",{"_index":374,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":376,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["md",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1365,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1341,"title":{},"body":{"license.html":{}}}],["message",{"_index":80,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{}}}],["methods",{"_index":127,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["military",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":882,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["miscellaneous",{"_index":1197,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1320,"title":{},"body":{"license.html":{}}}],["mitigates",{"_index":383,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["mitradatasubscription",{"_index":399,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["mitre",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mitreattackcomponent",{"_index":53,"title":{"components/MitreAttackComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mitreattackconfig",{"_index":760,"title":{"interfaces/MitreAttackConfig.html":{}},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["mitreattackdata",{"_index":317,"title":{"interfaces/MitreAttackData.html":{}},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mitreattackfooter",{"_index":763,"title":{"interfaces/MitreAttackFooter.html":{}},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["mitreattackheader",{"_index":764,"title":{"interfaces/MitreAttackHeader.html":{}},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["mitreattackinfo",{"_index":319,"title":{"interfaces/MitreAttackInfo-1.html":{}},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["mitreattackinfo.description",{"_index":819,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo.external_references[0].external_id",{"_index":809,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo.id",{"_index":805,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo.name",{"_index":804,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo.subtechniques.map(subtechnique",{"_index":825,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo.techniques",{"_index":807,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo.uses",{"_index":808,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo?.subtechniques",{"_index":824,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo?.uses",{"_index":821,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo?.uses[0]?.description",{"_index":822,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackservice",{"_index":664,"title":{"injectables/MitreAttackService.html":{}},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"coverage.html":{}}}],["mitrecells",{"_index":768,"title":{"interfaces/MitreCells.html":{}},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["mitrecellscontent",{"_index":770,"title":{"interfaces/MitreCellsContent.html":{}},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["mitrecomponent",{"_index":675,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["mitrecomponent.selectmitrecluster(mitreinfo",{"_index":806,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitredata",{"_index":400,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mitredatafiltered",{"_index":665,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["mitredatainfo",{"_index":401,"title":{},"body":{"components/HubComponent.html":{}}}],["mitrefilters",{"_index":666,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["mitreherarchydata",{"_index":402,"title":{},"body":{"components/HubComponent.html":{}}}],["mitreinfo",{"_index":301,"title":{},"body":{"interfaces/ClusterConfig.html":{},"injectables/MitreAttackService.html":{}}}],["mitreinfo.relationship_type",{"_index":565,"title":{},"body":{"injectables/HubService.html":{}}}],["mitreinfo.source_ref",{"_index":569,"title":{},"body":{"injectables/HubService.html":{}}}],["mitreinfo.type",{"_index":554,"title":{},"body":{"injectables/HubService.html":{}}}],["mitreinfo.x_mitre_is_subtechnique",{"_index":555,"title":{},"body":{"injectables/HubService.html":{}}}],["mitretype",{"_index":323,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["mock",{"_index":689,"title":{},"body":{"components/MitreAttackComponent.html":{},"index.html":{}}}],["mocker",{"_index":1269,"title":{},"body":{"index.html":{}}}],["modal",{"_index":792,"title":{},"body":{"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"miscellaneous/variables.html":{}}}],["modal'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["modal.component.html",{"_index":835,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.scss",{"_index":836,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":56,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{}}}],["modalconfig",{"_index":798,"title":{"interfaces/ModalConfig.html":{}},"body":{"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"coverage.html":{}}}],["modalconfig.cards",{"_index":851,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.content",{"_index":844,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.title",{"_index":841,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig:modalconfig",{"_index":840,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcontent",{"_index":857,"title":{"interfaces/ModalContent.html":{}},"body":{"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"coverage.html":{}}}],["modalref",{"_index":827,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["modalref.componentinstance.modalconfig",{"_index":831,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["modals",{"_index":796,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["modalservice",{"_index":780,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mode",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":1055,"title":{},"body":{"interfaces/UserModel.html":{}}}],["models/card.model",{"_index":186,"title":{},"body":{"components/CardComponent.html":{}}}],["models/chip.model",{"_index":230,"title":{},"body":{"components/ChipComponent.html":{}}}],["models/chipset.model",{"_index":252,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["models/cluster.model",{"_index":284,"title":{},"body":{"components/ClusterComponent.html":{}}}],["models/hub.models",{"_index":466,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{}}}],["models/modal.model",{"_index":838,"title":{},"body":{"components/ModalComponent.html":{}}}],["models/user.model",{"_index":984,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["modified",{"_index":328,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/functions.html":{}}}],["modifies",{"_index":1208,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modify",{"_index":1340,"title":{},"body":{"license.html":{}}}],["modifyreq",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["modifyreq(request",{"_index":1206,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modifyurl",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["modifyurl(url",{"_index":1213,"title":{},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":431,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["modules",{"_index":189,"title":{"modules.html":{}},"body":{"components/CardComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["modules/deas/hub/models/hub.models",{"_index":300,"title":{},"body":{"interfaces/ClusterConfig.html":{}}}],["modules/user/store/user.facade",{"_index":160,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["modules_core_deas",{"_index":310,"title":{},"body":{"components/DeasComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules_hub",{"_index":390,"title":{},"body":{"components/HubComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1315,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":897,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["mouseenter",{"_index":874,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["mouseevent",{"_index":909,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["mouseleave",{"_index":875,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["mousemove",{"_index":876,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["n/a",{"_index":823,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["national",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nato",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navigate",{"_index":1283,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":152,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/UserEffects.html":{},"components/UserLoginSystemComponent.html":{}}}],["navigationend",{"_index":154,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["navigator//#layerurl=https%3a%2f%2fattack.mitre.org%2fgroups%2fg0007%2fg0007",{"_index":1239,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":1040,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":1102,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["nessuna",{"_index":758,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["networks",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":419,"title":{},"body":{"components/HubComponent.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(modifyreq(request",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":801,"title":{},"body":{"injectables/MitreAttackService.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodal",{"_index":800,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["ngondestroy",{"_index":405,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["ngrx",{"_index":523,"title":{},"body":{"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"injectables/UserFacade.html":{},"miscellaneous/variables.html":{}}}],["ngrx/effects",{"_index":513,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":528,"title":{},"body":{"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"injectables/UserFacade.html":{},"interfaces/UserState.html":{},"dependencies.html":{}}}],["nickname",{"_index":91,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["nobelium",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":1260,"title":{},"body":{"index.html":{}}}],["nome",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":852,"title":{},"body":{"components/ModalComponent.html":{}}}],["noninfringement",{"_index":1369,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1353,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1275,"title":{},"body":{"index.html":{}}}],["nsa/fbi",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nuclear",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":444,"title":{},"body":{"components/HubComponent.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":298,"title":{},"body":{"interfaces/ClusterConfig.html":{},"directives/TooltipDirective.html":{}}}],["o",{"_index":631,"title":{},"body":{"injectables/HubService.html":{}}}],["oauth",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauth/callback",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":684,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object_marking_refs",{"_index":322,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["objects",{"_index":318,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["observable",{"_index":140,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["observables",{"_index":424,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["obtaining",{"_index":1332,"title":{},"body":{"license.html":{}}}],["oct",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(true",{"_index":172,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["of(user",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["officers",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oftype",{"_index":512,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{}}}],["oftype(getmitredata",{"_index":496,"title":{},"body":{"injectables/HubEffects.html":{}}}],["oftype(login",{"_index":977,"title":{},"body":{"injectables/UserEffects.html":{}}}],["on(getmitredata",{"_index":647,"title":{},"body":{"interfaces/HubState.html":{},"miscellaneous/variables.html":{}}}],["on(getmitredatasuccess",{"_index":649,"title":{},"body":{"interfaces/HubState.html":{},"miscellaneous/variables.html":{}}}],["on(loginsuccess",{"_index":1111,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["onlogout",{"_index":406,"title":{},"body":{"components/HubComponent.html":{}}}],["onmouseenter",{"_index":864,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["onmouseenter(event",{"_index":908,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["onmouseleave",{"_index":865,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["onmousemove",{"_index":866,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["onmousemove(event",{"_index":913,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["opaque",{"_index":291,"title":{},"body":{"interfaces/ClusterConfig.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["opcw",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":1267,"title":{},"body":{"index.html":{}}}],["openmitremodal",{"_index":783,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["openmitremodal(actiontype",{"_index":789,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["opens",{"_index":791,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["operated",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operations",{"_index":436,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":78,"title":{},"body":{"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ClusterConfig.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCellsContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["organization",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizations.(citation",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizes",{"_index":1218,"title":{},"body":{"index.html":{}}}],["original",{"_index":1214,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1378,"title":{},"body":{"license.html":{}}}],["out",{"_index":480,"title":{},"body":{"components/HubComponent.html":{},"injectables/UserService.html":{},"index.html":{},"license.html":{}}}],["output",{"_index":1247,"title":{},"body":{"index.html":{}}}],["overlap",{"_index":886,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["overlaps",{"_index":923,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["overview",{"_index":1317,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1175,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":1045,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["palo",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":167,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/ClusterConfig.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":138,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1367,"title":{},"body":{"license.html":{}}}],["paths",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":380,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["per",{"_index":753,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["performs",{"_index":1039,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["permission",{"_index":1326,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1348,"title":{},"body":{"license.html":{}}}],["person",{"_index":1331,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1349,"title":{},"body":{"license.html":{}}}],["phase",{"_index":370,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{}}}],["phase:any",{"_index":773,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["phase_name",{"_index":372,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["picture",{"_index":94,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["pipe",{"_index":499,"title":{},"body":{"injectables/HubEffects.html":{}}}],["pipe(filter(boolean",{"_index":695,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["platform",{"_index":1307,"title":{},"body":{"index.html":{}}}],["point",{"_index":1259,"title":{},"body":{"index.html":{}}}],["popperjs/core",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":1357,"title":{},"body":{"license.html":{}}}],["position",{"_index":896,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["possible",{"_index":112,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["present",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["presidential",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":125,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["process",{"_index":1011,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":97,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["prohibition",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1262,"title":{},"body":{"index.html":{}}}],["properties",{"_index":77,"title":{"properties.html":{}},"body":{"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"properties.html":{}}}],["props",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1358,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":162,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"injectables/MitreAttackService.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{}}}],["provideeffects([usereffects",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptors([apiinterceptor",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":992,"title":{},"body":{"injectables/UserFacade.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":387,"title":{},"body":{"components/HubComponent.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":449,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["providestore",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestoredevtools",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":123,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["publish",{"_index":1342,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1368,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["received",{"_index":703,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["redirect",{"_index":1030,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["redirect_uri",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirects",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["reducer",{"_index":644,"title":{},"body":{"interfaces/HubState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["redux",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":1318,"title":{},"body":{"index.html":{}}}],["references",{"_index":365,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"index.html":{}}}],["referred",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":315,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["relationship",{"_index":381,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["relationship_type",{"_index":352,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["relationships",{"_index":1224,"title":{},"body":{"index.html":{}}}],["relationshiptype",{"_index":353,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["relazioni",{"_index":561,"title":{},"body":{"injectables/HubService.html":{}}}],["reload",{"_index":1285,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1033,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["renderer",{"_index":880,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["renderer2",{"_index":878,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["rendering",{"_index":307,"title":{},"body":{"components/DeasComponent.html":{}}}],["reportedly",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reporting",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["representing",{"_index":72,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"interfaces/HubState.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["represents",{"_index":175,"title":{},"body":{"components/CardComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/typealiases.html":{}}}],["reprresents",{"_index":654,"title":{},"body":{"components/LoaderComponent.html":{}}}],["request",{"_index":1209,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":1074,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":182,"title":{},"body":{"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{}}}],["research",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":74,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["responsible",{"_index":306,"title":{},"body":{"components/DeasComponent.html":{}}}],["restriction",{"_index":1337,"title":{},"body":{"license.html":{}}}],["results",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retrieved",{"_index":511,"title":{},"body":{"injectables/HubEffects.html":{}}}],["retrieves",{"_index":508,"title":{},"body":{"injectables/HubEffects.html":{}}}],["return",{"_index":171,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/HubEffects.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1064,"title":{},"body":{"injectables/UserService.html":{}}}],["returns",{"_index":139,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/ClusterConfig.html":{},"components/HubComponent.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["returnto",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["revoked",{"_index":334,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["ricorsivamente",{"_index":605,"title":{},"body":{"injectables/HubService.html":{}}}],["rights",{"_index":1339,"title":{},"body":{"license.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0_Guard.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"injectables/MitreAttackService.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["route",{"_index":137,"title":{},"body":{"injectables/Auth0_Guard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":126,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/UserEffects.html":{},"components/UserLoginSystemComponent.html":{}}}],["routermodule",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":132,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["routes",{"_index":165,"title":{},"body":{"injectables/Auth0_Guard.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":266,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["row.chips",{"_index":268,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["run",{"_index":1272,"title":{},"body":{"index.html":{}}}],["running",{"_index":1298,"title":{},"body":{"index.html":{}}}],["russia's",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":156,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":516,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{}}}],["sandworm",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scaffolding",{"_index":1289,"title":{},"body":{"index.html":{}}}],["script",{"_index":1279,"title":{},"body":{"index.html":{}}}],["scrollx",{"_index":958,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["scrolly",{"_index":961,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["section",{"_index":276,"title":{},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{}}}],["sections",{"_index":272,"title":{},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{}}}],["secureworks",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":292,"title":{},"body":{"interfaces/ClusterConfig.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["selected",{"_index":304,"title":{},"body":{"interfaces/ClusterConfig.html":{}}}],["selection",{"_index":297,"title":{},"body":{"interfaces/ClusterConfig.html":{}}}],["selectmitrecluster",{"_index":667,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["selectmitrecluster(cluster",{"_index":674,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["selects",{"_index":677,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["seleziona",{"_index":751,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["sell",{"_index":1346,"title":{},"body":{"license.html":{}}}],["serve",{"_index":1281,"title":{},"body":{"index.html":{}}}],["server",{"_index":1278,"title":{},"body":{"index.html":{}}}],["service",{"_index":148,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["service/user.service",{"_index":985,"title":{},"body":{"injectables/UserEffects.html":{},"components/UserLoginSystemComponent.html":{}}}],["services",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services/hub.service",{"_index":467,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{}}}],["services/mitre",{"_index":717,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["set",{"_index":243,"title":{},"body":{"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/UserLoginSystemComponent.html":{}}}],["set'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["set.component",{"_index":712,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["set.component.html",{"_index":247,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["set.component.ts",{"_index":242,"title":{},"body":{"components/ChipsetComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["set.component.ts:32",{"_index":250,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["set.scss",{"_index":248,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["set/chip",{"_index":241,"title":{},"body":{"components/ChipsetComponent.html":{},"components/MitreAttackComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sets",{"_index":1067,"title":{},"body":{"injectables/UserService.html":{}}}],["settimeout",{"_index":934,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["settings",{"_index":220,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/enumerations.html":{}}}],["setusererror",{"_index":1057,"title":{},"body":{"injectables/UserService.html":{}}}],["setusererror(error",{"_index":1062,"title":{},"body":{"injectables/UserService.html":{}}}],["setuserinfo",{"_index":1058,"title":{},"body":{"injectables/UserService.html":{}}}],["setuserinfo(user",{"_index":1065,"title":{},"body":{"injectables/UserService.html":{}}}],["setuserlogout",{"_index":1059,"title":{},"body":{"injectables/UserService.html":{}}}],["shall",{"_index":1354,"title":{},"body":{"license.html":{}}}],["shared/constants/endpoints",{"_index":550,"title":{},"body":{"injectables/HubService.html":{}}}],["shared/constants/grouphackers.model",{"_index":474,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{}}}],["shared/model/mitre.model",{"_index":462,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubService.html":{}}}],["shared/routes/route.model",{"_index":161,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/UserLoginSystemComponent.html":{}}}],["showing",{"_index":884,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["shows",{"_index":894,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["showtimeout",{"_index":860,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["showtooltip",{"_index":867,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["side",{"_index":484,"title":{},"body":{"injectables/HubEffects.html":{}}}],["simplified",{"_index":520,"title":{},"body":{"injectables/HubFacade.html":{}}}],["size",{"_index":275,"title":{},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ClusterConfig.html":{},"injectables/MitreAttackService.html":{}}}],["size:'col",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["soc",{"_index":1250,"title":{},"body":{"index.html":{}}}],["sofacy",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1334,"title":{},"body":{"license.html":{}}}],["solarstorm.[9][10][11][12][13][14",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solarwinds",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solo",{"_index":626,"title":{},"body":{"injectables/HubService.html":{}}}],["someactive",{"_index":731,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["sono",{"_index":854,"title":{},"body":{"components/ModalComponent.html":{}}}],["sotto",{"_index":849,"title":{},"body":{"components/ModalComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"index.html":{}}}],["source_name",{"_index":366,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["source_ref",{"_index":354,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["spec_version",{"_index":320,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["special",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":435,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"index.html":{}}}],["specifies",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spiez",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":655,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/.../api.interceptor.ts",{"_index":1205,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth0.providers.ts",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card.component.ts",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card.model.ts",{"_index":1199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../chip",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cluster.component.ts",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../deas.component.ts",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoints.ts",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.test.ts",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../grouphackers.model.ts",{"_index":1200,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../hub.actions.ts",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../hub.component.ts",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../hub.models.ts",{"_index":1389,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../hub.reducer.ts",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../hub.selectors.ts",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../image.path.ts",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mitre",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mitre.model.ts",{"_index":1390,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../modal.component.ts",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../route.model.ts",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.actions.ts",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.model.ts",{"_index":1388,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.reducer.ts",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.selectors.ts",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":1387,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.config.ts",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth0",{"_index":121,"title":{},"body":{"injectables/Auth0_Guard.html":{},"coverage.html":{}}}],["src/app/core/interceptors/api.interceptor.ts",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/modules/user/models/user.model.ts",{"_index":71,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/modules/user/service/user.service.ts",{"_index":1056,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/modules/user/service/user.service.ts:23",{"_index":1072,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:29",{"_index":1075,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:35",{"_index":1070,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:41",{"_index":1071,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:48",{"_index":1060,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:58",{"_index":1066,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:77",{"_index":1069,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:87",{"_index":1063,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/store/user.actions.ts",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/modules/user/store/user.effects.ts",{"_index":973,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{}}}],["src/app/core/modules/user/store/user.effects.ts:13",{"_index":975,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/core/modules/user/store/user.effects.ts:30",{"_index":983,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/core/modules/user/store/user.facade.ts",{"_index":987,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["src/app/core/modules/user/store/user.facade.ts:18",{"_index":988,"title":{},"body":{"injectables/UserFacade.html":{}}}],["src/app/core/modules/user/store/user.facade.ts:31",{"_index":990,"title":{},"body":{"injectables/UserFacade.html":{}}}],["src/app/core/modules/user/store/user.reducer.ts",{"_index":1105,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/modules/user/store/user.selectors.ts",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/modules/user/user",{"_index":997,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/providers/auth0.providers.ts",{"_index":1135,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/libraries/components/card/card.component.ts",{"_index":174,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/libraries/components/card/card.component.ts:31",{"_index":183,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/libraries/components/chip",{"_index":240,"title":{},"body":{"components/ChipsetComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/libraries/components/chip/chip.component.ts",{"_index":225,"title":{},"body":{"components/ChipComponent.html":{},"coverage.html":{}}}],["src/app/libraries/components/chip/chip.component.ts:20",{"_index":229,"title":{},"body":{"components/ChipComponent.html":{}}}],["src/app/libraries/components/cluster/cluster.component.ts",{"_index":277,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/libraries/components/cluster/cluster.component.ts:32",{"_index":283,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/libraries/components/loader/loader.component.ts",{"_index":650,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/libraries/components/modal/modal.component.ts",{"_index":833,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/libraries/components/modal/modal.component.ts:33",{"_index":837,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts",{"_index":859,"title":{},"body":{"directives/TooltipDirective.html":{},"coverage.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:101",{"_index":927,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:133",{"_index":921,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:14",{"_index":888,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:19",{"_index":885,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:24",{"_index":881,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:26",{"_index":929,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:27",{"_index":879,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:37",{"_index":892,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:51",{"_index":899,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:61",{"_index":903,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:68",{"_index":915,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:77",{"_index":907,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:87",{"_index":904,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/models/card.model.ts",{"_index":202,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/libraries/models/chip.model.ts",{"_index":234,"title":{},"body":{"interfaces/ChipConfig.html":{},"coverage.html":{}}}],["src/app/libraries/models/chipset.model.ts",{"_index":269,"title":{},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"coverage.html":{}}}],["src/app/libraries/models/cluster.model.ts",{"_index":287,"title":{},"body":{"interfaces/ClusterConfig.html":{},"coverage.html":{}}}],["src/app/libraries/models/mitre",{"_index":761,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["src/app/libraries/models/modal.model.ts",{"_index":856,"title":{},"body":{"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"coverage.html":{}}}],["src/app/modules/deas/deas.component.ts",{"_index":305,"title":{},"body":{"components/DeasComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/deas/hub/hub.component.ts",{"_index":386,"title":{},"body":{"components/HubComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:101",{"_index":456,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:107",{"_index":448,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:114",{"_index":445,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:120",{"_index":451,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:126",{"_index":417,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:132",{"_index":408,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:142",{"_index":443,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:153",{"_index":413,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:161",{"_index":409,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:71",{"_index":458,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:77",{"_index":454,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:83",{"_index":428,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:89",{"_index":434,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:95",{"_index":421,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/models/hub.models.ts",{"_index":1392,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/modules/deas/hub/services/hub.service.ts",{"_index":532,"title":{},"body":{"injectables/HubService.html":{},"coverage.html":{}}}],["src/app/modules/deas/hub/services/hub.service.ts:16",{"_index":543,"title":{},"body":{"injectables/HubService.html":{}}}],["src/app/modules/deas/hub/services/hub.service.ts:19",{"_index":539,"title":{},"body":{"injectables/HubService.html":{}}}],["src/app/modules/deas/hub/services/hub.service.ts:25",{"_index":541,"title":{},"body":{"injectables/HubService.html":{}}}],["src/app/modules/deas/hub/services/hub.service.ts:91",{"_index":538,"title":{},"body":{"injectables/HubService.html":{}}}],["src/app/modules/deas/hub/store/hub.actions.ts",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/deas/hub/store/hub.effects.ts",{"_index":482,"title":{},"body":{"injectables/HubEffects.html":{},"coverage.html":{}}}],["src/app/modules/deas/hub/store/hub.effects.ts:13",{"_index":490,"title":{},"body":{"injectables/HubEffects.html":{}}}],["src/app/modules/deas/hub/store/hub.effects.ts:27",{"_index":505,"title":{},"body":{"injectables/HubEffects.html":{}}}],["src/app/modules/deas/hub/store/hub.facade.ts",{"_index":519,"title":{},"body":{"injectables/HubFacade.html":{},"coverage.html":{}}}],["src/app/modules/deas/hub/store/hub.facade.ts:19",{"_index":522,"title":{},"body":{"injectables/HubFacade.html":{}}}],["src/app/modules/deas/hub/store/hub.facade.ts:30",{"_index":525,"title":{},"body":{"injectables/HubFacade.html":{}}}],["src/app/modules/deas/hub/store/hub.reducer.ts",{"_index":637,"title":{},"body":{"interfaces/HubState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/deas/hub/store/hub.selectors.ts",{"_index":1155,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/deas/mitre",{"_index":656,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/constants/endpoints.ts",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/constants/grouphackers.model.ts",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/constants/image.path.ts",{"_index":1162,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/model/mitre.model.ts",{"_index":314,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/routes/route.model.ts",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.test.ts",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st.id",{"_index":568,"title":{},"body":{"injectables/HubService.html":{}}}],["staff",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standalone",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{}}}],["start",{"_index":1277,"title":{},"body":{"index.html":{}}}],["started",{"_index":1216,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state",{"_index":131,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":316,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["statements",{"_index":1114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stellarparticle",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["steppe",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":1027,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["store",{"_index":432,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["store/hub.facade",{"_index":460,"title":{},"body":{"components/HubComponent.html":{}}}],["store/user.facade",{"_index":1042,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["stored",{"_index":1295,"title":{},"body":{"index.html":{}}}],["stream",{"_index":492,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{}}}],["string",{"_index":81,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":996,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["styleurl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{}}}],["styleurls",{"_index":1001,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["sub",{"_index":110,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["subject",{"_index":420,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{},"license.html":{}}}],["subject,subscription,takeuntil",{"_index":1041,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["sublicense",{"_index":1344,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1023,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["subscribe((data",{"_index":441,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["subscribe((user",{"_index":1020,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["subscribes",{"_index":1037,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["subscription",{"_index":437,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["subscriptions",{"_index":1015,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["substantial",{"_index":1356,"title":{},"body":{"license.html":{}}}],["subtechnique",{"_index":385,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["subtechniquemap",{"_index":562,"title":{},"body":{"injectables/HubService.html":{}}}],["subtechniquemap[mitreinfo.target_ref",{"_index":566,"title":{},"body":{"injectables/HubService.html":{}}}],["subtechniquemap[mitreinfo.target_ref].push(subtechnique",{"_index":570,"title":{},"body":{"injectables/HubService.html":{}}}],["subtechniquemap[technique.id",{"_index":584,"title":{},"body":{"injectables/HubService.html":{}}}],["subtechniques",{"_index":556,"title":{},"body":{"injectables/HubService.html":{},"index.html":{}}}],["subtechniques.find(st",{"_index":567,"title":{},"body":{"injectables/HubService.html":{}}}],["subtechniquesextended",{"_index":583,"title":{},"body":{"injectables/HubService.html":{}}}],["subtecniche",{"_index":580,"title":{},"body":{"injectables/HubService.html":{},"components/ModalComponent.html":{}}}],["subtitle",{"_index":766,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["success",{"_index":510,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["successful",{"_index":1068,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["such",{"_index":486,"title":{},"body":{"injectables/HubEffects.html":{}}}],["summer",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svr",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svr).[1][2",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swiss",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":816,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["switchmap",{"_index":515,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap((token",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switchmap(({filter",{"_index":497,"title":{},"body":{"injectables/HubEffects.html":{}}}],["symantec",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["system.component.html",{"_index":1003,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.scss",{"_index":1002,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts",{"_index":999,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["system.component.ts:107",{"_index":1010,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts:39",{"_index":1013,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts:45",{"_index":1018,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts:51",{"_index":1017,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts:57",{"_index":1012,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts:63",{"_index":1006,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts:77",{"_index":1036,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system/user",{"_index":998,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["tactic",{"_index":377,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["tactic.x_mitre_shortname",{"_index":601,"title":{},"body":{"injectables/HubService.html":{}}}],["tactic_refs",{"_index":321,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["tactics",{"_index":552,"title":{},"body":{"injectables/HubService.html":{},"index.html":{}}}],["tactics.map((tactic",{"_index":595,"title":{},"body":{"injectables/HubService.html":{}}}],["takeuntil",{"_index":155,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["takeuntil(this.destroy",{"_index":440,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["tanks",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap",{"_index":1077,"title":{},"body":{"injectables/UserService.html":{}}}],["target_ref",{"_index":355,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["targeting",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tattiche",{"_index":591,"title":{},"body":{"injectables/HubService.html":{}}}],["team",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technica",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technique",{"_index":589,"title":{},"body":{"injectables/HubService.html":{},"components/MitreAttackComponent.html":{}}}],["technique.kill_chain_phases",{"_index":598,"title":{},"body":{"injectables/HubService.html":{}}}],["technique.kill_chain_phases.some(kcp",{"_index":599,"title":{},"body":{"injectables/HubService.html":{}}}],["technique.subtechniques",{"_index":614,"title":{},"body":{"injectables/HubService.html":{}}}],["technique.subtechniques.length",{"_index":620,"title":{},"body":{"injectables/HubService.html":{}}}],["technique.uses",{"_index":617,"title":{},"body":{"injectables/HubService.html":{}}}],["technique.uses.filter(use",{"_index":618,"title":{},"body":{"injectables/HubService.html":{}}}],["technique.uses.length",{"_index":622,"title":{},"body":{"injectables/HubService.html":{}}}],["techniquemap",{"_index":581,"title":{},"body":{"injectables/HubService.html":{}}}],["techniquemap[technique.id",{"_index":588,"title":{},"body":{"injectables/HubService.html":{}}}],["techniques",{"_index":293,"title":{},"body":{"interfaces/ClusterConfig.html":{},"injectables/HubService.html":{},"injectables/MitreAttackService.html":{},"index.html":{}}}],["techniques.filter((technique",{"_index":597,"title":{},"body":{"injectables/HubService.html":{}}}],["techniques.foreach((technique",{"_index":582,"title":{},"body":{"injectables/HubService.html":{}}}],["techniquesextended",{"_index":596,"title":{},"body":{"injectables/HubService.html":{}}}],["tecniche",{"_index":578,"title":{},"body":{"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{}}}],["tecnique",{"_index":775,"title":{},"body":{"interfaces/MitreAttackFooter.html":{}}}],["tecnique:any",{"_index":774,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["test",{"_index":1301,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["testing",{"_index":1311,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":1300,"title":{},"body":{"index.html":{}}}],["text",{"_index":889,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["textoverlap",{"_index":868,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["textoverlap(htmlelement",{"_index":919,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tg",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["theme",{"_index":239,"title":{},"body":{"interfaces/ChipConfig.html":{}}}],["there's",{"_index":1097,"title":{},"body":{"injectables/UserService.html":{}}}],["think",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.action$.pipe",{"_index":976,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.actions$.pipe",{"_index":495,"title":{},"body":{"injectables/HubEffects.html":{}}}],["this.attackhacker",{"_index":722,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.authservice.getaccesstokensilently().pipe",{"_index":1022,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.authservice.isauthenticated$.subscribe(isauthenticated",{"_index":1044,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.authservice.loginwithredirect",{"_index":1048,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["this.authservice.logout",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.user$.pipe",{"_index":1019,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.cards",{"_index":697,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.clusters",{"_index":698,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.clusters.map((_cluster",{"_index":725,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.clusters.some((cluster",{"_index":732,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.createmitretechniques(subtechnique",{"_index":826,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["this.createtooltip",{"_index":942,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.destroy$.next",{"_index":478,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["this.document.location.origin",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["this.filterbyactorrecursive(item.subtechniques",{"_index":607,"title":{},"body":{"injectables/HubService.html":{}}}],["this.filterbyactorrecursive(technique.subtechniques",{"_index":615,"title":{},"body":{"injectables/HubService.html":{}}}],["this.hidetooltip",{"_index":940,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.http.get(`${environment.apiurl}/${endpoints.mitre",{"_index":551,"title":{},"body":{"injectables/HubService.html":{}}}],["this.hubfacade.getmitredata(hackertype",{"_index":724,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.hubfacade.getmitredata(hackertype.apt28",{"_index":476,"title":{},"body":{"components/HubComponent.html":{}}}],["this.hubfacade.mitredata",{"_index":447,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["this.hubfacade.mitredata$.pipe",{"_index":438,"title":{},"body":{"components/HubComponent.html":{}}}],["this.hubservice",{"_index":498,"title":{},"body":{"injectables/HubEffects.html":{}}}],["this.hubservice.filterbyactorrecursive(this.hubservice.mapmitredata(response",{"_index":504,"title":{},"body":{"injectables/HubEffects.html":{}}}],["this.hubservice.mapmitredata(response",{"_index":503,"title":{},"body":{"injectables/HubEffects.html":{}}}],["this.initialize",{"_index":1043,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.mitreattackservice.createmitrecluster(mitreattackinfo",{"_index":700,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.mitreattackservice.createmitretechniques",{"_index":735,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.mitredatafiltered",{"_index":696,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.mitredatafiltered.map",{"_index":699,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.mitreherarchydata",{"_index":442,"title":{},"body":{"components/HubComponent.html":{}}}],["this.modalservice.open(modalcomponent",{"_index":828,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["this.openmitremodal(actiontype",{"_index":813,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["this.renderer.addclass(this.tooltipelement",{"_index":945,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.appendchild(document.body",{"_index":949,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.createelement('div",{"_index":944,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.removechild(document.body",{"_index":943,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.setstyle(this.tooltipelement",{"_index":967,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.router.navigatebyurl(`${app.deas",{"_index":1031,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.router.navigatebyurl(`/${route.user_auth",{"_index":173,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["this.showtimeout",{"_index":933,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.showtooltip",{"_index":935,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.store.dispatch(getmitredata({filter",{"_index":531,"title":{},"body":{"injectables/HubFacade.html":{}}}],["this.store.dispatch(login",{"_index":995,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.store.select(mitredata",{"_index":527,"title":{},"body":{"injectables/HubFacade.html":{}}}],["this.store.select(user$).pipe(filter(boolean",{"_index":993,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.textoverlap(event.target",{"_index":931,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltipdelay",{"_index":938,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltipelement",{"_index":941,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltipelement.innerhtml",{"_index":947,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltipelement.offsetheight",{"_index":953,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltipelement.offsetwidth",{"_index":951,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltipshow",{"_index":932,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltiptext",{"_index":948,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.updatetooltipposition(event.clientx",{"_index":936,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.userfacade.login(userinfo",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userfacade.user",{"_index":455,"title":{},"body":{"components/HubComponent.html":{}}}],["this.userservice.login(user).pipe",{"_index":978,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.userservice.setusererror(error",{"_index":1035,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.userservice.setuserinfo(user",{"_index":1029,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.userservice.setuserlogout",{"_index":477,"title":{},"body":{"components/HubComponent.html":{}}}],["threat",{"_index":1231,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["throwerror",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":96,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["timeout",{"_index":901,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["title",{"_index":765,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1100,"title":{},"body":{"injectables/UserService.html":{}}}],["token",{"_index":1024,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":379,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["tooltip",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{}}}],["tooltipdelay",{"_index":870,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltipdirective",{"_index":63,"title":{"directives/TooltipDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tooltipelement",{"_index":861,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltipheight",{"_index":952,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltipoverlap",{"_index":895,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltipshow",{"_index":871,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltiptext",{"_index":872,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltipwidth",{"_index":950,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["top",{"_index":964,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["top}px",{"_index":968,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tort",{"_index":1377,"title":{},"body":{"license.html":{}}}],["track",{"_index":200,"title":{},"body":{"components/CardComponent.html":{},"components/ChipsetComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["triggered",{"_index":507,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{}}}],["true",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1021,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["tslib",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["twilight",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":82,"title":{},"body":{"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1386,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":257,"title":{},"body":{"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/ModalComponent.html":{}}}],["types",{"_index":113,"title":{},"body":{"interfaces/Auth0Error.html":{},"components/HubComponent.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["u.s",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui",{"_index":256,"title":{},"body":{"components/ChipsetComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["ui_chipset",{"_index":245,"title":{},"body":{"components/ChipsetComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_kit_hub",{"_index":392,"title":{},"body":{"components/HubComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_mitre_attack",{"_index":659,"title":{},"body":{"components/MitreAttackComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_modal",{"_index":834,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_user_login",{"_index":1000,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uk",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["una",{"_index":558,"title":{},"body":{"injectables/HubService.html":{},"components/MitreAttackComponent.html":{}}}],["unc2452",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uncomment",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":111,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["unique",{"_index":108,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["unit",{"_index":1299,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":1108,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["updated",{"_index":99,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["updated_at",{"_index":100,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["updates",{"_index":678,"title":{},"body":{"components/MitreAttackComponent.html":{},"directives/TooltipDirective.html":{}}}],["updatetooltipposition",{"_index":869,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["updatetooltipposition(x",{"_index":925,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["uri",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":93,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"interfaces/UserModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["usage",{"_index":1223,"title":{},"body":{"index.html":{}}}],["use",{"_index":1291,"title":{},"body":{"index.html":{},"license.html":{}}}],["use.name",{"_index":610,"title":{},"body":{"injectables/HubService.html":{}}}],["used",{"_index":190,"title":{},"body":{"components/CardComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":86,"title":{},"body":{"interfaces/Auth0Error.html":{},"components/HubComponent.html":{},"interfaces/UserModel.html":{}}}],["user.actions",{"_index":986,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"interfaces/UserState.html":{}}}],["user.email",{"_index":1088,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email_verified",{"_index":1089,"title":{},"body":{"injectables/UserService.html":{}}}],["user.family_name",{"_index":1083,"title":{},"body":{"injectables/UserService.html":{}}}],["user.given_name",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{}}}],["user.name",{"_index":1085,"title":{},"body":{"injectables/UserService.html":{}}}],["user.nickname",{"_index":1084,"title":{},"body":{"injectables/UserService.html":{}}}],["user.picture",{"_index":1086,"title":{},"body":{"injectables/UserService.html":{}}}],["user.selectors",{"_index":994,"title":{},"body":{"injectables/UserFacade.html":{}}}],["user.sub",{"_index":1090,"title":{},"body":{"injectables/UserService.html":{}}}],["user.updated_at",{"_index":1087,"title":{},"body":{"injectables/UserService.html":{}}}],["user_auth",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usereffects",{"_index":972,"title":{"injectables/UserEffects.html":{}},"body":{"injectables/UserEffects.html":{},"coverage.html":{}}}],["userfacade",{"_index":159,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinfo",{"_index":403,"title":{},"body":{"components/HubComponent.html":{},"injectables/UserService.html":{}}}],["userloginsystemcomponent",{"_index":58,"title":{"components/UserLoginSystemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{}}}],["usermodel",{"_index":85,"title":{"interfaces/UserModel.html":{}},"body":{"interfaces/Auth0Error.html":{},"components/HubComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["userreducer",{"_index":1110,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":404,"title":{"injectables/UserService.html":{}},"body":{"components/HubComponent.html":{},"injectables/UserEffects.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userstate",{"_index":1104,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":294,"title":{},"body":{"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/typealiases.html":{}}}],["usesmap",{"_index":572,"title":{},"body":{"injectables/HubService.html":{}}}],["usesmap[mitreinfo.target_ref",{"_index":573,"title":{},"body":{"injectables/HubService.html":{}}}],["usesmap[mitreinfo.target_ref].push(entity",{"_index":577,"title":{},"body":{"injectables/HubService.html":{}}}],["usesmap[subtechnique.id",{"_index":586,"title":{},"body":{"injectables/HubService.html":{}}}],["usesmap[technique.id",{"_index":587,"title":{},"body":{"injectables/HubService.html":{}}}],["using",{"_index":166,"title":{},"body":{"injectables/Auth0_Guard.html":{},"miscellaneous/variables.html":{}}}],["v1",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valide",{"_index":632,"title":{},"body":{"injectables/HubService.html":{}}}],["value",{"_index":144,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value:string",{"_index":771,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["var",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["variable",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1395,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1225,"title":{},"body":{"index.html":{}}}],["verified",{"_index":105,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["version",{"_index":1265,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":1160,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["versions.v1}/mitre",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":1303,"title":{},"body":{"index.html":{}}}],["view",{"_index":309,"title":{},"body":{"components/DeasComponent.html":{}}}],["virus",{"_index":223,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["visualization",{"_index":1230,"title":{},"body":{"index.html":{}}}],["visualizzare",{"_index":754,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["void",{"_index":216,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ClusterConfig.html":{},"components/HubComponent.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["vrius",{"_index":222,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"miscellaneous/enumerations.html":{}}}],["wada",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":1364,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1359,"title":{},"body":{"license.html":{}}}],["weapons",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whether",{"_index":104,"title":{},"body":{"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"interfaces/ChipConfig.html":{},"interfaces/ClusterConfig.html":{},"directives/TooltipDirective.html":{},"interfaces/UserModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["width",{"_index":1050,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["window.innerheight",{"_index":957,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["window.innerwidth",{"_index":955,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["window.scrollx",{"_index":959,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["window.scrolly",{"_index":962,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["windowheight",{"_index":956,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["windowwidth",{"_index":954,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["within",{"_index":639,"title":{},"body":{"interfaces/HubState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":1336,"title":{},"body":{"license.html":{}}}],["world",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":375,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"directives/TooltipDirective.html":{},"miscellaneous/typealiases.html":{}}}],["x_mitre_aliases",{"_index":336,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_attack_spec_version",{"_index":330,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_collection_layers",{"_index":362,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_contributors",{"_index":338,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_data_source_ref",{"_index":356,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_data_sources",{"_index":344,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_defense_bypassed",{"_index":345,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_deprecated",{"_index":333,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_detection",{"_index":342,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_domains",{"_index":332,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_effective_permissions",{"_index":350,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_first_seen_citation",{"_index":360,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_impact_type",{"_index":349,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_is_subtechnique",{"_index":343,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_last_seen_citation",{"_index":361,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_modified_by_ref",{"_index":331,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_network_requirements",{"_index":351,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_permissions_required",{"_index":346,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_platforms",{"_index":335,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_remote_support",{"_index":347,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_shortname",{"_index":339,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_system_requirements",{"_index":348,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_version",{"_index":329,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["y",{"_index":926,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["zebrocy",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        The root component of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {  RouterModule} from '@angular/router';\n\n/**\n * The root component of the application.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [ RouterModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Auth0Error.html":{"url":"interfaces/Auth0Error.html","title":"interface - Auth0Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Auth0Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modules/user/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an error response from Auth0.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error_description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional description of the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A message describing the error.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface UserModel {\n  /**\n   * The user's given name.\n   * @type {string}\n   */\n  given_name: string;\n\n  /**\n   * The user's family name.\n   * @type {string}\n   */\n  family_name: string;\n\n  /**\n   * The user's nickname.\n   * @type {string}\n   */\n  nickname: string;\n\n  /**\n   * The user's full name.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * The URL of the user's picture.\n   * @type {string}\n   */\n  picture: string;\n\n  /**\n   * The date and time when the user's profile was last updated.\n   * @type {string}\n   */\n  updated_at: string;\n\n  /**\n   * The user's email address.\n   * @type {string}\n   */\n  email: string;\n\n  /**\n   * Indicates whether the user's email address has been verified.\n   * @type {boolean}\n   */\n  email_verified: boolean;\n\n  /**\n   * The user's unique identifier.\n   * @type {string}\n   */\n  sub: string;\n}\n\n/**\n * Interface representing an error response from Auth0.\n */\nexport interface Auth0Error {\n  /**\n   * The type of error.\n   * @type {string}\n   */\n  error: string;\n\n  /**\n   * Additional description of the error.\n   * @type {string | undefined}\n   */\n  error_description?: string;\n\n  /**\n   * A message describing the error.\n   * @type {string | undefined}\n   */\n  message?: string;\n}\n\n/**\n * Type representing possible error types from Auth0.\n */\nexport type Auth0ErrorType = 'login_required' | 'consent_required' | 'interaction_required';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Auth0_Guard.html":{"url":"injectables/Auth0_Guard.html","title":"injectable - Auth0_Guard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Auth0_Guard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/guards/auth0-guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth0Service\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(undefined: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth0-guard.ts:34\n                        \n                    \n\n\n            \n                \n                        Determines whether the user can activate a route.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The state of the router.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable indicating whether the user can activate the route.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth0Service\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/guards/auth0-guard.ts:26\n                        \n                    \n\n            \n                \n                    The authentication service for Auth0.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/guards/auth0-guard.ts:20\n                        \n                    \n\n            \n                \n                    The router instance for navigation.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, NavigationEnd, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { Observable, of, takeUntil, } from \"rxjs\";\nimport { AuthService } from '@auth0/auth0-angular';\nimport { UserFacade } from \"../modules/user/store/user.facade\";\nimport { ROUTE } from \"../../shared/routes/route.model\";\n\n\n@Injectable({\n  providedIn: 'root',\n})\n/**\n * Guard for authenticating routes using Auth0.\n */\nexport class Auth0_Guard {\n  /**\n   * The router instance for navigation.\n   * @type {Router}\n   */\n  private router: Router = inject(Router);\n\n  /**\n   * The authentication service for Auth0.\n   * @type {AuthService}\n   */\n  public auth0Service: AuthService = inject(AuthService);\n\n  /**\n   * Determines whether the user can activate a route.\n   * @param {ActivatedRouteSnapshot} data The data associated with the route.\n   * @param {RouterStateSnapshot} state The state of the router.\n   * @returns {Observable} An observable indicating whether the user can activate the route.\n   */\n  canActivate({ data }: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    if (localStorage.getItem('token')?.length) {\n      return of(true);\n    } else {\n      this.router.navigateByUrl(`/${ROUTE.USER_AUTH}`);\n      return of(true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libraries/components/card/card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Represents a card component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                CARD_DIRECTIVES\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cardConfig\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cardConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cardConfig\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/components/card/card.component.ts:31\n                            \n                        \n                \n                    \n                        Configuration for the card component.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cardConfig\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/libraries/components/card/card.component.ts:31\n                        \n                    \n\n            \n                \n                    Configuration for the card component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { CardConfig } from '../../models/card.model';\nimport { TooltipDirective } from '../../directives/tooltip.directive';\n\n\n/**\n * Array of modules used in the Card component.\n * @type {Array}\n */\nconst CARD_DIRECTIVES = [\n  TooltipDirective\n]\n\n/**\n * Represents a card component.\n */\n@Component({\n  selector: 'app-card',\n  standalone: true,\n  imports: [\n    ...CARD_DIRECTIVES\n  ],\n  templateUrl: './card.component.html',\n  styleUrl: './card.component.scss'\n})\nexport class CardComponent {\n/**\n * Configuration for the card component.\n * @type {CardConfig}\n */\n  public cardConfig = input.required();\n\n\n}\n\n    \n\n    \n        @if(cardConfig()){\n  \n\n    \n    @if(cardConfig().header){\n\n      \n        \n          \n            {{cardConfig().header.label}}\n          \n        \n        \n          \n            {{cardConfig().header.value}}\n          \n        \n      \n    }\n\n    \n    @if(cardConfig().footer){\n      \n        @for(cta of cardConfig().footer; track cta ){\n          \n        }\n      \n    }\n\n    \n  \n\n\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(cardConfig()){          @if(cardConfig().header){                                    {{cardConfig().header.label}}                                                {{cardConfig().header.value}}                            }        @if(cardConfig().footer){              @for(cta of cardConfig().footer; track cta ){                  }          }      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardConfig.html":{"url":"interfaces/CardConfig.html","title":"interface - CardConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/card.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for a card component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            footer\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        footer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        footer:         CardFooter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardFooter[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The footer configuration for the card.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         CardHeader\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardHeader\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header configuration for the card.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardConfig {\n  /**\n   * The header configuration for the card.\n   * @type {CardHeader}\n   */\n  header: CardHeader;\n\n  /**\n   * The footer configuration for the card.\n   * @type {CardFooter[]}\n   */\n  footer: CardFooter[];\n}\n\n/**\n * Configuration for the header of a card component.\n */\nexport interface CardHeader {\n  /**\n   * The label for the card header.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * The value for the card header.\n   * @type {string}\n   */\n  value: string;\n\n  /**\n   * Optional CSS class for the card header.\n   * @type {string}\n   */\n  class?: string;\n}\n\n/**\n * Configuration for the footer of a card component.\n */\nexport interface CardFooter {\n  /**\n   * The icon for the card footer.\n   * @type {CardIcon}\n   */\n  icon: CardIcon;\n\n  /**\n   * Optional label for the card footer.\n   * @type {string}\n   */\n  label?: string;\n\n  /**\n   * The type of action for the card footer.\n   * @type {CardAction}\n   */\n  actionType: CardAction;\n\n  /**\n   * The action to be executed when the card footer is interacted with.\n   * @type {(actionType: CardAction) => void}\n   */\n  action: (actionType: CardAction) => void;\n}\n\n/**\n * Enum representing different actions for a card component.\n */\nexport enum CardAction {\n  INFO = 'info',\n  SETTINGS = 'settings',\n}\n\n/**\n * Enum representing different icons for a card component.\n */\nexport enum CardIcon {\n  info = 'icon-info',\n  settings = 'icon-settings',\n  vrius = 'icon-virus',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardFooter.html":{"url":"interfaces/CardFooter.html","title":"interface - CardFooter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardFooter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/card.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for the footer of a card component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            actionType\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action to be executed when the card footer is interacted with.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionType:         CardAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardAction\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of action for the card footer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         CardIcon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardIcon\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The icon for the card footer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional label for the card footer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardConfig {\n  /**\n   * The header configuration for the card.\n   * @type {CardHeader}\n   */\n  header: CardHeader;\n\n  /**\n   * The footer configuration for the card.\n   * @type {CardFooter[]}\n   */\n  footer: CardFooter[];\n}\n\n/**\n * Configuration for the header of a card component.\n */\nexport interface CardHeader {\n  /**\n   * The label for the card header.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * The value for the card header.\n   * @type {string}\n   */\n  value: string;\n\n  /**\n   * Optional CSS class for the card header.\n   * @type {string}\n   */\n  class?: string;\n}\n\n/**\n * Configuration for the footer of a card component.\n */\nexport interface CardFooter {\n  /**\n   * The icon for the card footer.\n   * @type {CardIcon}\n   */\n  icon: CardIcon;\n\n  /**\n   * Optional label for the card footer.\n   * @type {string}\n   */\n  label?: string;\n\n  /**\n   * The type of action for the card footer.\n   * @type {CardAction}\n   */\n  actionType: CardAction;\n\n  /**\n   * The action to be executed when the card footer is interacted with.\n   * @type {(actionType: CardAction) => void}\n   */\n  action: (actionType: CardAction) => void;\n}\n\n/**\n * Enum representing different actions for a card component.\n */\nexport enum CardAction {\n  INFO = 'info',\n  SETTINGS = 'settings',\n}\n\n/**\n * Enum representing different icons for a card component.\n */\nexport enum CardIcon {\n  info = 'icon-info',\n  settings = 'icon-settings',\n  vrius = 'icon-virus',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardHeader.html":{"url":"interfaces/CardHeader.html","title":"interface - CardHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/card.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for the header of a card component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class for the card header.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The label for the card header.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value for the card header.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardConfig {\n  /**\n   * The header configuration for the card.\n   * @type {CardHeader}\n   */\n  header: CardHeader;\n\n  /**\n   * The footer configuration for the card.\n   * @type {CardFooter[]}\n   */\n  footer: CardFooter[];\n}\n\n/**\n * Configuration for the header of a card component.\n */\nexport interface CardHeader {\n  /**\n   * The label for the card header.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * The value for the card header.\n   * @type {string}\n   */\n  value: string;\n\n  /**\n   * Optional CSS class for the card header.\n   * @type {string}\n   */\n  class?: string;\n}\n\n/**\n * Configuration for the footer of a card component.\n */\nexport interface CardFooter {\n  /**\n   * The icon for the card footer.\n   * @type {CardIcon}\n   */\n  icon: CardIcon;\n\n  /**\n   * Optional label for the card footer.\n   * @type {string}\n   */\n  label?: string;\n\n  /**\n   * The type of action for the card footer.\n   * @type {CardAction}\n   */\n  actionType: CardAction;\n\n  /**\n   * The action to be executed when the card footer is interacted with.\n   * @type {(actionType: CardAction) => void}\n   */\n  action: (actionType: CardAction) => void;\n}\n\n/**\n * Enum representing different actions for a card component.\n */\nexport enum CardAction {\n  INFO = 'info',\n  SETTINGS = 'settings',\n}\n\n/**\n * Enum representing different icons for a card component.\n */\nexport enum CardIcon {\n  info = 'icon-info',\n  settings = 'icon-settings',\n  vrius = 'icon-virus',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChipComponent.html":{"url":"components/ChipComponent.html","title":"component - ChipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libraries/components/chip/chip.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chip\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./chip.component.html\n            \n\n\n\n            \n                styleUrl\n                ./chip.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chipConfig\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipConfig\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/components/chip/chip.component.ts:20\n                            \n                        \n                \n                    \n                        Configuration for the chip component.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chipConfig\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/libraries/components/chip/chip.component.ts:20\n                        \n                    \n\n            \n                \n                    Configuration for the chip component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { ChipConfig } from '../../models/chip.model';\n\n@Component({\n  selector: 'app-chip',\n  standalone: true,\n  imports: [],\n  templateUrl: './chip.component.html',\n  styleUrl: './chip.component.scss'\n})\n\n/**\n * Component representing a chip.\n */\nexport class ChipComponent {\n/**\n * Configuration for the chip component.\n * @type {ChipConfig}\n */\n  public chipConfig = input.required();\n\n}\n\n    \n\n    \n        @if(chipConfig()){\n  \n    @if(chipConfig().icon){\n      \n    }\n    {{chipConfig().label}}\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(chipConfig()){      @if(chipConfig().icon){          }    {{chipConfig().label}}  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChipConfig.html":{"url":"interfaces/ChipConfig.html","title":"interface - ChipConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChipConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/chip.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            classIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isDark\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class for the chip.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class for the chip icon.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the chip.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDark\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDark:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional flag indicating whether the chip has a dark theme.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The label for the chip.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ChipConfig {\n  /**\n   * The label for the chip.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * Optional CSS class for the chip.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * Optional flag indicating whether the chip has a dark theme.\n   * @type {boolean}\n   */\n  isDark?: boolean;\n\n  /**\n   * Optional icon for the chip.\n   * @type {string}\n   */\n  icon?: string;\n\n  /**\n   * Optional CSS class for the chip icon.\n   * @type {string}\n   */\n  classIcon?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChipsetComponent.html":{"url":"components/ChipsetComponent.html","title":"component - ChipsetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChipsetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libraries/components/chip-set/chip-set.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component representing a set of chips.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chip-set\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UI_CHIPSET\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./chip-set.component.html\n            \n\n\n\n            \n                styleUrl\n                ./chip-set.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chipsetConfig\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipsetConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipsetConfig\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/components/chip-set/chip-set.component.ts:32\n                            \n                        \n                \n                    \n                        Configuration for the chipset component.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chipsetConfig\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/libraries/components/chip-set/chip-set.component.ts:32\n                        \n                    \n\n            \n                \n                    Configuration for the chipset component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { ChipsetConfig } from '../../models/chipset.model';\nimport { ChipComponent } from '../chip/chip.component';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Array containing UI chipset components.\n * @type {typeof ChipComponent[]}\n */\nconst UI_CHIPSET: typeof ChipComponent[] = [\n  ChipComponent\n];\n\n/**\n * Component representing a set of chips.\n */\n@Component({\n  selector: 'app-chip-set',\n  standalone: true,\n  imports: [\n    ...UI_CHIPSET,\n    CommonModule\n  ],\n  templateUrl: './chip-set.component.html',\n  styleUrl: './chip-set.scss'\n})\nexport class ChipsetComponent {\n  /**\n   * Configuration for the chipset component.\n   * @type {ChipsetConfig}\n   */\n  public chipsetConfig = input.required();\n}\n\n    \n\n    \n        @if(chipsetConfig()){\n\n  \n\n    @if(chipsetConfig().header){\n      \n        @for(header of chipsetConfig().header; track header){\n          \n            \n              {{header.label}}\n            \n          \n        }\n      \n    }\n\n    @if(chipsetConfig().content){\n\n\n      \n        @for(row of chipsetConfig().content; track row){\n          \n            @for(chip of row.chips; track chip){\n              \n            }\n          \n        }\n      \n    }\n\n\n  \n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(chipsetConfig()){      @if(chipsetConfig().header){              @for(header of chipsetConfig().header; track header){                                    {{header.label}}                              }          }    @if(chipsetConfig().content){              @for(row of chipsetConfig().content; track row){                      @for(chip of row.chips; track chip){                          }                  }          }  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChipsetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChipsetConfig.html":{"url":"interfaces/ChipsetConfig.html","title":"interface - ChipsetConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChipsetConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/chipset.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         ChipsetContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChipsetContent[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content sections of the chip set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         ChipsetHeader[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChipsetHeader[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header configuration for the chip set.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChipConfig } from \"./chip.model\";\n\nexport interface ChipsetConfig {\n  /**\n   * The header configuration for the chip set.\n   * @type {ChipsetHeader[]}\n   */\n  header: ChipsetHeader[];\n\n  /**\n   * The content sections of the chip set.\n   * @type {ChipsetContent[]}\n   */\n  content: ChipsetContent[];\n}\n\n/**\n * Configuration for the header of a chip set.\n */\nexport interface ChipsetHeader {\n  /**\n   * Optional CSS class for the header of the chip set.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * The size of the header of the chip set.\n   * @type {string}\n   */\n  size: string;\n\n  /**\n   * The label for the header of the chip set.\n   * @type {string}\n   */\n  label: string;\n}\n\n/**\n * Configuration for the content section of a chip set.\n */\nexport interface ChipsetContent {\n  /**\n   * Optional CSS class for the content section of the chip set.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * The size of the content section of the chip set.\n   * @type {string}\n   */\n  size: string;\n\n  /**\n   * The chips configuration for the content section of the chip set.\n   * @type {ChipConfig[]}\n   */\n  chips: ChipConfig[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChipsetContent.html":{"url":"interfaces/ChipsetContent.html","title":"interface - ChipsetContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChipsetContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/chipset.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for the content section of a chip set.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chips\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chips\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chips:         ChipConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChipConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The chips configuration for the content section of the chip set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class for the content section of the chip set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the content section of the chip set.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChipConfig } from \"./chip.model\";\n\nexport interface ChipsetConfig {\n  /**\n   * The header configuration for the chip set.\n   * @type {ChipsetHeader[]}\n   */\n  header: ChipsetHeader[];\n\n  /**\n   * The content sections of the chip set.\n   * @type {ChipsetContent[]}\n   */\n  content: ChipsetContent[];\n}\n\n/**\n * Configuration for the header of a chip set.\n */\nexport interface ChipsetHeader {\n  /**\n   * Optional CSS class for the header of the chip set.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * The size of the header of the chip set.\n   * @type {string}\n   */\n  size: string;\n\n  /**\n   * The label for the header of the chip set.\n   * @type {string}\n   */\n  label: string;\n}\n\n/**\n * Configuration for the content section of a chip set.\n */\nexport interface ChipsetContent {\n  /**\n   * Optional CSS class for the content section of the chip set.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * The size of the content section of the chip set.\n   * @type {string}\n   */\n  size: string;\n\n  /**\n   * The chips configuration for the content section of the chip set.\n   * @type {ChipConfig[]}\n   */\n  chips: ChipConfig[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChipsetHeader.html":{"url":"interfaces/ChipsetHeader.html","title":"interface - ChipsetHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChipsetHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/chipset.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for the header of a chip set.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class for the header of the chip set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The label for the header of the chip set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the header of the chip set.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChipConfig } from \"./chip.model\";\n\nexport interface ChipsetConfig {\n  /**\n   * The header configuration for the chip set.\n   * @type {ChipsetHeader[]}\n   */\n  header: ChipsetHeader[];\n\n  /**\n   * The content sections of the chip set.\n   * @type {ChipsetContent[]}\n   */\n  content: ChipsetContent[];\n}\n\n/**\n * Configuration for the header of a chip set.\n */\nexport interface ChipsetHeader {\n  /**\n   * Optional CSS class for the header of the chip set.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * The size of the header of the chip set.\n   * @type {string}\n   */\n  size: string;\n\n  /**\n   * The label for the header of the chip set.\n   * @type {string}\n   */\n  label: string;\n}\n\n/**\n * Configuration for the content section of a chip set.\n */\nexport interface ChipsetContent {\n  /**\n   * Optional CSS class for the content section of the chip set.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * The size of the content section of the chip set.\n   * @type {string}\n   */\n  size: string;\n\n  /**\n   * The chips configuration for the content section of the chip set.\n   * @type {ChipConfig[]}\n   */\n  chips: ChipConfig[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClusterComponent.html":{"url":"components/ClusterComponent.html","title":"component - ClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libraries/components/cluster/cluster.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component representing a cluster.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cluster\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                CLUSTER_DIRECTIVES\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cluster.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cluster.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clusterConfig\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clusterConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clusterConfig\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/components/cluster/cluster.component.ts:32\n                            \n                        \n                \n                    \n                        Configuration for the cluster component.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clusterConfig\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/libraries/components/cluster/cluster.component.ts:32\n                        \n                    \n\n            \n                \n                    Configuration for the cluster component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { ClusterConfig } from '../../models/cluster.model';\nimport { CommonModule } from '@angular/common';\nimport { TooltipDirective } from '../../directives/tooltip.directive';\n\n/**\n * Array containing cluster directives.\n * @type {typeof TooltipDirective[]}\n */\nconst CLUSTER_DIRECTIVES: typeof TooltipDirective[] = [\n  TooltipDirective\n];\n\n/**\n * Component representing a cluster.\n */\n@Component({\n  selector: 'app-cluster',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ...CLUSTER_DIRECTIVES\n  ],\n  templateUrl: './cluster.component.html',\n  styleUrl: './cluster.component.scss'\n})\nexport class ClusterComponent {\n/**\n * Configuration for the cluster component.\n * @type {ClusterConfig}\n */\n  public clusterConfig = input.required();\n\n}\n\n    \n\n    \n        @if(clusterConfig()){\n  \n  \n    \n      {{clusterConfig().name}}\n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(clusterConfig()){              {{clusterConfig().name}}      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterConfig.html":{"url":"interfaces/ClusterConfig.html","title":"interface - ClusterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClusterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/cluster.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            externalID\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            opaque\n                                        \n                                \n                                \n                                        \n                                            select\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            techniques\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uses\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the cluster is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The external ID of the cluster.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the cluster.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the cluster.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opaque\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opaque:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the cluster is opaque.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        select:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Function to handle cluster selection.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the cluster.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        techniques\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        techniques:         ExtendedMitreAttackInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtendedMitreAttackInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional array of techniques associated with the cluster.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uses:         ExtendedMitreAttackInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtendedMitreAttackInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional array of uses associated with the cluster.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExtendedMitreAttackInfo } from \"../../modules/deas/hub/models/hub.models\";\n\nexport interface ClusterConfig {\n  /**\n   * Indicates whether the cluster is active.\n   * @type {boolean}\n   */\n  active: boolean;\n\n  /**\n   * Indicates whether the cluster is opaque.\n   * @type {boolean}\n   */\n  opaque: boolean;\n\n  /**\n   * The name of the cluster.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * The size of the cluster.\n   * @type {number}\n   */\n  size: number;\n\n  /**\n   * Function to handle cluster selection.\n   * @param {ClusterConfig} mitreInfo The Mitre Attack information for the selected cluster.\n   * @returns {void}\n   */\n  select: (mitreInfo: ClusterConfig) => void;\n\n  /**\n   * The ID of the cluster.\n   * @type {string}\n   */\n  id: string;\n\n  /**\n   * Optional array of techniques associated with the cluster.\n   * @type {ExtendedMitreAttackInfo[]}\n   */\n  techniques?: ExtendedMitreAttackInfo[];\n\n  /**\n   * Optional array of uses associated with the cluster.\n   * @type {ExtendedMitreAttackInfo[]}\n   */\n  uses?: ExtendedMitreAttackInfo[];\n\n  /**\n   * The external ID of the cluster.\n   * @type {string}\n   */\n  externalID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeasComponent.html":{"url":"components/DeasComponent.html","title":"component - DeasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/deas/deas.component.ts\n\n\n\n    \n        Description\n    \n    \n        Represents the DeasComponent class.\nThis component is responsible for rendering the Deas view.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-deas\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                MODULES_CORE_DEAS\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./deas.component.html\n            \n\n\n\n            \n                styleUrl\n                ./deas.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n/**\n * Array of modules used in the Deas component.\n * @type {Array}\n */\nconst MODULES_CORE_DEAS = [\n  RouterModule,\n  CommonModule\n]\n\n\n/**\n * Represents the DeasComponent class.\n * This component is responsible for rendering the Deas view.\n */\n@Component({\n  selector: 'app-deas',\n  standalone: true,\n  imports: [\n    ...MODULES_CORE_DEAS\n  ],\n  templateUrl: './deas.component.html',\n  styleUrl: './deas.component.scss'\n})\nexport class DeasComponent {\n\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'DeasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Definition.html":{"url":"interfaces/Definition.html","title":"interface - Definition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Definition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/mitre.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Definition related to Mitre Attack data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            statement\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        statement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statement:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackData {\n  type: string;\n  id: string;\n  objects: MitreAttackInfo[];\n  spec_version: string;\n}\n\n/**\n * Interface for the Mitre Attack information.\n */\nexport interface MitreAttackInfo {\n  tactic_refs: string[];\n  object_marking_refs: string[];\n  id: string;\n  type: MitreType;\n  created: string;\n  created_by_ref: string;\n  external_references: ExternalReference[];\n  modified: string;\n  name: string;\n  description: string;\n  x_mitre_version: string;\n  x_mitre_attack_spec_version: string;\n  x_mitre_modified_by_ref: string;\n  x_mitre_domains: string[];\n  x_mitre_deprecated: boolean;\n  revoked: boolean;\n  x_mitre_platforms: string[];\n  x_mitre_aliases: string[];\n  labels: string[];\n  x_mitre_contributors: string[];\n  x_mitre_shortname: string;\n  kill_chain_phases: KillChainPhase[];\n  x_mitre_detection: string;\n  x_mitre_is_subtechnique: boolean;\n  x_mitre_data_sources: string[];\n  x_mitre_defense_bypassed: string[];\n  x_mitre_permissions_required: string[];\n  x_mitre_remote_support: boolean;\n  x_mitre_system_requirements: string[];\n  x_mitre_impact_type: string[];\n  x_mitre_effective_permissions: string[];\n  x_mitre_network_requirements: boolean;\n  relationship_type: RelationshipType;\n  source_ref: string;\n  target_ref: string;\n  x_mitre_data_source_ref: string;\n  aliases: string[];\n  first_seen: string;\n  last_seen: string;\n  x_mitre_first_seen_citation: string;\n  x_mitre_last_seen_citation: string;\n  x_mitre_collection_layers: string[];\n  identity_class: string;\n  definition: Definition;\n  definition_type: string;\n}\n\n/**\n * Interface for external references related to Mitre Attack data.\n */\nexport interface ExternalReference {\n  source_name: string;\n  description: string;\n  url: string;\n  external_id: string;\n}\n\n/**\n * Interface for the Kill Chain Phase related to Mitre Attack data.\n */\nexport interface KillChainPhase {\n  kill_chain_name: string;\n  phase_name: string;\n}\n\n/**\n * Interface for the Definition related to Mitre Attack data.\n */\nexport interface Definition {\n  statement: string;\n}\n\n/**\n * Type for Mitre Attack data type.\n */\nexport type MitreType =\n  | 'bundle'\n  | 'marking-definition'\n  | 'definition'\n  | 'x-mitre-matrix'\n  | 'x-mitre-tactic'\n  | 'course-of-action'\n  | 'tool'\n  | 'attack-pattern'\n  | 'relationship'\n  | 'malware';\n\n/**\n * Type for Relationship type in Mitre Attack data.\n */\nexport type RelationshipType = 'mitigates' | 'uses' | 'detects' | 'subtechnique-of';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExternalReference.html":{"url":"interfaces/ExternalReference.html","title":"interface - ExternalReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExternalReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/mitre.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for external references related to Mitre Attack data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            external_id\n                                        \n                                \n                                \n                                        \n                                            source_name\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        external_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        external_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackData {\n  type: string;\n  id: string;\n  objects: MitreAttackInfo[];\n  spec_version: string;\n}\n\n/**\n * Interface for the Mitre Attack information.\n */\nexport interface MitreAttackInfo {\n  tactic_refs: string[];\n  object_marking_refs: string[];\n  id: string;\n  type: MitreType;\n  created: string;\n  created_by_ref: string;\n  external_references: ExternalReference[];\n  modified: string;\n  name: string;\n  description: string;\n  x_mitre_version: string;\n  x_mitre_attack_spec_version: string;\n  x_mitre_modified_by_ref: string;\n  x_mitre_domains: string[];\n  x_mitre_deprecated: boolean;\n  revoked: boolean;\n  x_mitre_platforms: string[];\n  x_mitre_aliases: string[];\n  labels: string[];\n  x_mitre_contributors: string[];\n  x_mitre_shortname: string;\n  kill_chain_phases: KillChainPhase[];\n  x_mitre_detection: string;\n  x_mitre_is_subtechnique: boolean;\n  x_mitre_data_sources: string[];\n  x_mitre_defense_bypassed: string[];\n  x_mitre_permissions_required: string[];\n  x_mitre_remote_support: boolean;\n  x_mitre_system_requirements: string[];\n  x_mitre_impact_type: string[];\n  x_mitre_effective_permissions: string[];\n  x_mitre_network_requirements: boolean;\n  relationship_type: RelationshipType;\n  source_ref: string;\n  target_ref: string;\n  x_mitre_data_source_ref: string;\n  aliases: string[];\n  first_seen: string;\n  last_seen: string;\n  x_mitre_first_seen_citation: string;\n  x_mitre_last_seen_citation: string;\n  x_mitre_collection_layers: string[];\n  identity_class: string;\n  definition: Definition;\n  definition_type: string;\n}\n\n/**\n * Interface for external references related to Mitre Attack data.\n */\nexport interface ExternalReference {\n  source_name: string;\n  description: string;\n  url: string;\n  external_id: string;\n}\n\n/**\n * Interface for the Kill Chain Phase related to Mitre Attack data.\n */\nexport interface KillChainPhase {\n  kill_chain_name: string;\n  phase_name: string;\n}\n\n/**\n * Interface for the Definition related to Mitre Attack data.\n */\nexport interface Definition {\n  statement: string;\n}\n\n/**\n * Type for Mitre Attack data type.\n */\nexport type MitreType =\n  | 'bundle'\n  | 'marking-definition'\n  | 'definition'\n  | 'x-mitre-matrix'\n  | 'x-mitre-tactic'\n  | 'course-of-action'\n  | 'tool'\n  | 'attack-pattern'\n  | 'relationship'\n  | 'malware';\n\n/**\n * Type for Relationship type in Mitre Attack data.\n */\nexport type RelationshipType = 'mitigates' | 'uses' | 'detects' | 'subtechnique-of';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HubComponent.html":{"url":"components/HubComponent.html","title":"component - HubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/deas/hub/hub.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                HubFacade\n                \n            \n\n\n            \n                selector\n                app-hub\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                MODULES_HUB\n                                DIRECTIVES_HUB\n                                UI_KIT_HUB\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hub.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hub.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clusters\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                hackerType\n                            \n                            \n                                    Private\n                                hubFacade\n                            \n                            \n                                    Public\n                                hubService\n                            \n                            \n                                    Public\n                                mitraDataSubscription\n                            \n                            \n                                    Public\n                                mitreData\n                            \n                            \n                                    Public\n                                mitreDataInfo$\n                            \n                            \n                                    Public\n                                mitreHerarchyData\n                            \n                            \n                                    Private\n                                userFacade\n                            \n                            \n                                    Public\n                                userInfo$\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/deas/hub/hub.component.ts:132\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/hub.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that destroys the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/hub.component.ts:153\n                        \n                    \n\n\n            \n                \n                        Handles the logout interaction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clusters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClusterConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:126\n                        \n                    \n\n            \n                \n                    Configurations for clusters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:95\n                        \n                    \n\n            \n                \n                    Subject for managing the destruction of observables.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hackerType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : HackerType\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:132\n                        \n                    \n\n            \n                \n                    Enumeration of hacker types.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HubFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:83\n                        \n                    \n\n            \n                \n                    Facade for interacting with the Hub module store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hubService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HubService)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:89\n                        \n                    \n\n            \n                \n                    Hub service for Hub-specific operations.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitraDataSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : this.hubFacade.mitreData$.pipe(\n    filter(Boolean),\n    takeUntil(this.destroy$)\n  ).subscribe((data: ExtendedMitreAttackInfo[]) => {\n    this.mitreHerarchyData = data;\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:142\n                        \n                    \n\n            \n                \n                    Subscription to the Mitre Data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MitreAttackData | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:114\n                        \n                    \n\n            \n                \n                    Current Mitre Attack data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreDataInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.hubFacade.mitreData$\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:107\n                        \n                    \n\n            \n                \n                    Observable that provides the extended Mitre Attack information or null.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreHerarchyData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtendedMitreAttackInfo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:120\n                        \n                    \n\n            \n                \n                    Hierarchy of extended Mitre Attack data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:77\n                        \n                    \n\n            \n                \n                    Facade for interacting with the user store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.userFacade.user$\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:101\n                        \n                    \n\n            \n                \n                    Observable that provides the current user's information.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:71\n                        \n                    \n\n            \n                \n                    User service for managing user-related operations.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { UserService } from '../../../core/modules/user/service/user.service';\nimport { RouterModule } from '@angular/router';\nimport { HubFacade } from './store/hub.facade';\nimport { filter, Observable, Subject, Subscription, takeUntil } from 'rxjs';\nimport { MitreAttackData } from '../../../shared/model/mitre.model';\nimport { UserModel } from '../../../core/modules/user/models/user.model';\nimport { UserFacade } from '../../../core/modules/user/store/user.facade';\nimport { TooltipDirective } from '../../../libraries/directives/tooltip.directive';\nimport { ExtendedMitreAttackInfo } from './models/hub.models';\nimport { HubService } from './services/hub.service';\nimport { LoaderComponent } from '../../../libraries/components/loader/loader.component';\nimport { CardComponent } from '../../../libraries/components/card/card.component';\nimport { ClusterComponent } from '../../../libraries/components/cluster/cluster.component';\nimport { ClusterConfig } from '../../../libraries/models/cluster.model';\nimport { MitreAttackComponent } from '../mitre-attack/mitre-attack.component';\nimport { HackerType } from '../../../shared/constants/groupHackers.model';\n\n\n\n/**\n * Array of modules used in the hub component.\n * @type {Array}\n */\nconst MODULES_HUB = [\n  RouterModule,\n  CommonModule\n]\n\n/**\n * Array of directives used in the Hub component.\n */\nconst DIRECTIVES_HUB = [\n  TooltipDirective\n]\n\n/**\n * Array containing components related to the UI kit hub.\n * @type {Array}\n */\nconst UI_KIT_HUB = [\n  MitreAttackComponent,\n  LoaderComponent,\n  CardComponent,\n  ClusterComponent\n]\n\n\n\n@Component({\n  selector: 'app-hub',\n  standalone: true,\n  imports: [\n    ...MODULES_HUB,\n    ...DIRECTIVES_HUB,\n    ...UI_KIT_HUB\n  ],\n  templateUrl: './hub.component.html',\n  styleUrl: './hub.component.scss',\n  providers: [HubFacade]\n})\n/**\n * Represents the Hub component.\n */\nexport class HubComponent {\n  /**\n   * User service for managing user-related operations.\n   * @private\n   */\n  private userService = inject(UserService);\n\n  /**\n   * Facade for interacting with the user store.\n   * @private\n   */\n  private userFacade = inject(UserFacade);\n\n  /**\n   * Facade for interacting with the Hub module store.\n   * @private\n   */\n  private hubFacade = inject(HubFacade);\n\n  /**\n   * Hub service for Hub-specific operations.\n   * @public\n   */\n  public hubService = inject(HubService);\n\n  /**\n   * Subject for managing the destruction of observables.\n   * @private\n   */\n  private destroy$ = new Subject();\n\n  /**\n   * Observable that provides the current user's information.\n   * @public\n   */\n  public userInfo$: Observable = this.userFacade.user$;\n\n  /**\n   * Observable that provides the extended Mitre Attack information or null.\n   * @public\n   */\n  public mitreDataInfo$: Observable = this.hubFacade.mitreData$;\n\n\n  /**\n   * Current Mitre Attack data.\n   * @public\n   */\n  public mitreData: MitreAttackData | null = null;\n\n  /**\n   * Hierarchy of extended Mitre Attack data.\n   * @public\n   */\n  public mitreHerarchyData: ExtendedMitreAttackInfo[] = [];\n\n  /**\n   * Configurations for clusters.\n   * @public\n   */\n  public clusters: ClusterConfig[] = [];\n\n  /**\n   * Enumeration of hacker types.\n   * @public\n   */\n  public hackerType = HackerType;\n\n  constructor() {\n    this.hubFacade.getMitreData(HackerType.APT28);\n  }\n\n  /**\n   * Subscription to the Mitre Data.\n   * @public\n   */\n  public mitraDataSubscription: Subscription = this.hubFacade.mitreData$.pipe(\n    filter(Boolean),\n    takeUntil(this.destroy$)\n  ).subscribe((data: ExtendedMitreAttackInfo[]) => {\n    this.mitreHerarchyData = data;\n  });\n\n  /**\n   * Handles the logout interaction.\n   * @public\n   */\n  public onLogout(): void {\n    this.userService.setUserLogOut();\n  }\n\n  /**\n   * Lifecycle hook that destroys the component.\n   * @public\n   */\n  public ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n\n\n}\n\n    \n\n    \n        \n\n\n\n  \n    \n      {{'Log out'}}\n    \n  \n\n  \n    \n  \n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\\'Log out\\'}}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'HubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HubEffects.html":{"url":"injectables/HubEffects.html","title":"injectable - HubEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HubEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/deas/hub/store/hub.effects.ts\n        \n\n\n            \n                Description\n            \n            \n                Effects class for the Hub module.\nHandles side effects related to the Hub feature, such as fetching Mitre data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMitreData\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, hubService: HubService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/deas/hub/store/hub.effects.ts:13\n                            \n                        \n\n                \n                    \n                            Initializes the HubEffects instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Observable stream of actions dispatched in the application.\n\n                                                        \n                                                \n                                                \n                                                        hubService\n                                                  \n                                                        \n                                                                        HubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service for interacting with the Hub feature.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getMitreData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(getMitreData),\n      switchMap(({filter}) => {\n        return this.hubService\n          .getMitreData$()\n          .pipe(\n            map((response) => getMitreDataSuccess({\n              mitreAttackData: filter === HackerType.GENERIC ?\n              this.hubService.mapMitreData(response)\n              : this.hubService.filterByActorRecursive(this.hubService.mapMitreData(response), filter), filter: filter }))\n          );\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/store/hub.effects.ts:27\n                        \n                    \n\n            \n                \n                    Effect triggered when a getMitreData action is dispatched.\nRetrieves Mitre data from the service and dispatches a success action with the retrieved data.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { map, switchMap } from \"rxjs/operators\";\nimport { HubService } from \"../services/hub.service\";\nimport { getMitreData, getMitreDataSuccess } from \"./hub.actions\";\nimport { HackerType } from \"../../../../shared/constants/groupHackers.model\";\n\n/**\n * Effects class for the Hub module.\n * Handles side effects related to the Hub feature, such as fetching Mitre data.\n */\n@Injectable()\nexport class HubEffects {\n\n  /**\n   * Initializes the HubEffects instance.\n   * @param {Actions} actions$ Observable stream of actions dispatched in the application.\n   * @param {HubService} hubService The service for interacting with the Hub feature.\n   */\n    constructor(private actions$: Actions, private hubService: HubService) {}\n\n  /**\n   * Effect triggered when a getMitreData action is dispatched.\n   * Retrieves Mitre data from the service and dispatches a success action with the retrieved data.\n   * @type {Observable}\n   */\n  public getMitreData = createEffect(() =>\n    this.actions$.pipe(\n      ofType(getMitreData),\n      switchMap(({filter}) => {\n        return this.hubService\n          .getMitreData$()\n          .pipe(\n            map((response) => getMitreDataSuccess({\n              mitreAttackData: filter === HackerType.GENERIC ?\n              this.hubService.mapMitreData(response)\n              : this.hubService.filterByActorRecursive(this.hubService.mapMitreData(response), filter), filter: filter }))\n          );\n      })\n    )\n  );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HubFacade.html":{"url":"injectables/HubFacade.html","title":"injectable - HubFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HubFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/deas/hub/store/hub.facade.ts\n        \n\n\n            \n                Description\n            \n            \n                Facade service for the Hub module.\nProvides a simplified interface for interacting with the Hub feature store.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mitreData$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMitreData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/deas/hub/store/hub.facade.ts:19\n                            \n                        \n\n                \n                    \n                            Initializes the HubFacade instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The NgRx store instance.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getMitreData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMitreData(filter: HackerType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/store/hub.facade.ts:30\n                        \n                    \n\n\n            \n                \n                        Dispatches an action to fetch Mitre data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            HackerType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(mitreData$)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/store/hub.facade.ts:19\n                        \n                    \n\n            \n                \n                    Observable stream of Mitre data from the store.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { HackerType } from '../../../../shared/constants/groupHackers.model';\nimport { getMitreData } from './hub.actions';\nimport { mitreData$,  } from './hub.selectors';\n\n/**\n * Facade service for the Hub module.\n * Provides a simplified interface for interacting with the Hub feature store.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HubFacade {\n  /**\n   * Observable stream of Mitre data from the store.\n   * @type {Observable}\n   */\n  public mitreData$ = this.store.select(mitreData$);\n\n  /**\n   * Initializes the HubFacade instance.\n   * @param {Store} store The NgRx store instance.\n   */\n  constructor(private store: Store) {}\n\n  /**\n   * Dispatches an action to fetch Mitre data.\n   */\n  public getMitreData(filter:HackerType): void {\n    this.store.dispatch(getMitreData({filter}));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HubService.html":{"url":"injectables/HubService.html","title":"injectable - HubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/deas/hub/services/hub.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterByActorRecursive\n                            \n                            \n                                    Public\n                                getMitreData$\n                            \n                            \n                                    Public\n                                mapMitreData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filterByActorRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    filterByActorRecursive(data: ExtendedMitreAttackInfo[], actorName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/services/hub.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ExtendedMitreAttackInfo[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actorName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ExtendedMitreAttackInfo[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getMitreData$\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMitreData$()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/services/hub.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mapMitreData\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapMitreData(data: MitreAttackData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/services/hub.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MitreAttackData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ExtendedMitreAttackInfo[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/services/hub.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { delay, Observable, of } from 'rxjs';\nimport { MitreAttackData, MitreAttackInfo } from '../../../../shared/model/mitre.model';\nimport { environment } from '../../../../../environments/environment';\nimport { ENDPOINTS } from '../../../../shared/constants/endpoints';\nimport { ExtendedMitreAttackInfo } from '../models/hub.models';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HubService {\n\n  private http = inject(HttpClient);\n\n\n  public getMitreData$(): Observable {\n    return this.http.get(`${environment.apiUrl}/${ENDPOINTS.MITRE}`);\n  }\n\n\n\n  public mapMitreData(data: MitreAttackData): ExtendedMitreAttackInfo[] {\n    const tactics: MitreAttackInfo[] = data.objects.filter(mitreInfo => mitreInfo.type === 'x-mitre-tactic');\n    const techniques: MitreAttackInfo[] = data.objects.filter(mitreInfo => mitreInfo.type === 'attack-pattern' && !mitreInfo.x_mitre_is_subtechnique);\n    const subtechniques: MitreAttackInfo[] = data.objects.filter(mitreInfo => mitreInfo.type === 'attack-pattern' && mitreInfo.x_mitre_is_subtechnique);\n\n    // Creare una mappa delle relazioni subtechnique-of\n    const subtechniqueMap: { [key: string]: MitreAttackInfo[] } = {};\n    data.objects.forEach((mitreInfo) => {\n      if (mitreInfo.relationship_type === 'subtechnique-of') {\n        if (!subtechniqueMap[mitreInfo.target_ref]) {\n          subtechniqueMap[mitreInfo.target_ref] = [];\n        }\n        const subtechnique = subtechniques.find(st => st.id === mitreInfo.source_ref);\n        if (subtechnique) {\n          subtechniqueMap[mitreInfo.target_ref].push(subtechnique);\n        }\n      }\n    });\n\n    // Creare una mappa delle entità \"uses\"\n    const usesMap: { [key: string]: MitreAttackInfo[] } = {};\n    data.objects.forEach((mitreInfo) => {\n      if (mitreInfo.relationship_type === 'uses') {\n        if (!usesMap[mitreInfo.target_ref]) {\n          usesMap[mitreInfo.target_ref] = [];\n        }\n        const entity = data.objects.find(e => e.id === mitreInfo.source_ref);\n        if (entity) {\n          usesMap[mitreInfo.target_ref].push(entity);\n        }\n      }\n    });\n\n    // Creare una mappa delle tecniche e subtecniche\n    const techniqueMap: { [key: string]: ExtendedMitreAttackInfo } = {};\n    techniques.forEach((technique) => {\n      const subtechniquesExtended = (subtechniqueMap[technique.id] || []).map((subtechnique) => ({\n        ...subtechnique,\n        uses: usesMap[subtechnique.id] || []\n      }));\n      const uses = usesMap[technique.id] || [];\n      techniqueMap[technique.id] = {\n        ...technique,\n        subtechniques: subtechniquesExtended,\n        uses\n      };\n    });\n\n    // Creare una lista delle tattiche con le tecniche, subtecniche e entità \"uses\"\n    const extendedMitreData: ExtendedMitreAttackInfo[] = tactics.map((tactic) => {\n      const techniquesExtended = techniques.filter((technique) => {\n        return technique.kill_chain_phases &&\n        technique.kill_chain_phases.some(kcp => kcp.phase_name === tactic.x_mitre_shortname);\n      }).map((technique) => techniqueMap[technique.id]);\n\n      return {\n        ...tactic,\n        techniques: techniquesExtended,\n        subtechniques: [],\n        uses: []\n      };\n    });\n\n    return extendedMitreData;\n  }\n\n  public filterByActorRecursive(data: ExtendedMitreAttackInfo[], actorName: string): ExtendedMitreAttackInfo[] {\n    return data.map(item => {\n      // Filtra subtecniche ricorsivamente\n      const subtechniques = item.subtechniques ? this.filterByActorRecursive(item.subtechniques, actorName) : [];\n\n      // Filtra le entità \"uses\"\n      const uses = item.uses ? item.uses.filter(use => use.name === actorName) : [];\n\n      // Filtra tecniche ricorsivamente\n      const techniques = item.techniques ? item.techniques.map(technique => {\n        const filteredSubtechniques = technique.subtechniques ? this.filterByActorRecursive(technique.subtechniques, actorName) : [];\n        const filteredUses = technique.uses ? technique.uses.filter(use => use.name === actorName) : [];\n\n        return {\n          ...technique,\n          subtechniques: filteredSubtechniques,\n          uses: filteredUses\n        };\n      }).filter(technique => technique.subtechniques.length > 0 || technique.uses.length > 0) : [];\n\n      return {\n        ...item,\n        subtechniques,\n        uses,\n        techniques\n      };\n    }).filter(item => {\n      // Includi solo gli elementi che hanno subtecniche, uses o tecniche valide\n      return (item.subtechniques && item.subtechniques.length > 0) ||\n             (item.uses && item.uses.length > 0) ||\n             (item.techniques && item.techniques.length > 0);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HubState.html":{"url":"interfaces/HubState.html","title":"interface - HubState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HubState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/deas/hub/store/hub.reducer.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the state of the Hub feature.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            filter\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         ExtendedMitreAttackInfo[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtendedMitreAttackInfo[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:         HackerType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HackerType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { HackerType } from '../../../../shared/constants/groupHackers.model';\nimport { ExtendedMitreAttackInfo } from '../models/hub.models';\nimport { getMitreData, getMitreDataSuccess } from './hub.actions';\n\n/**\n * The key for the Hub feature state within the NgRx store.\n * @type {string}\n */\nexport const HubListFeatureKey = 'hub';\n\n/**\n * Interface representing the state of the Hub feature.\n * @interface\n */\nexport interface HubState {\n  data: ExtendedMitreAttackInfo[] | null; // Mitre attack data\n  filter: HackerType; // Hacker type filter\n}\n\n/**\n * Initial state for the Hub feature.\n * @type {HubState}\n */\nconst initialState: HubState = {\n  data: null,\n  filter: HackerType.APT28 // Default hacker type filter\n};\n\n/**\n * Reducer function for the Hub feature.\n * @function\n * @param {HubState} state The current state of the Hub feature.\n * @param {*} action The action dispatched to the reducer.\n * @returns {HubState} The new state of the Hub feature after applying the action.\n */\nexport const hubReducer = createReducer(\n  initialState,\n  on(getMitreData, (state, { filter }) => ({ ...state, data: initialState.data, filter: filter })),\n  on(getMitreDataSuccess, (state, { mitreAttackData, filter }) => ({ ...state, data: mitreAttackData, filter: filter })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KillChainPhase.html":{"url":"interfaces/KillChainPhase.html","title":"interface - KillChainPhase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  KillChainPhase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/mitre.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Kill Chain Phase related to Mitre Attack data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kill_chain_name\n                                        \n                                \n                                \n                                        \n                                            phase_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kill_chain_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kill_chain_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phase_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackData {\n  type: string;\n  id: string;\n  objects: MitreAttackInfo[];\n  spec_version: string;\n}\n\n/**\n * Interface for the Mitre Attack information.\n */\nexport interface MitreAttackInfo {\n  tactic_refs: string[];\n  object_marking_refs: string[];\n  id: string;\n  type: MitreType;\n  created: string;\n  created_by_ref: string;\n  external_references: ExternalReference[];\n  modified: string;\n  name: string;\n  description: string;\n  x_mitre_version: string;\n  x_mitre_attack_spec_version: string;\n  x_mitre_modified_by_ref: string;\n  x_mitre_domains: string[];\n  x_mitre_deprecated: boolean;\n  revoked: boolean;\n  x_mitre_platforms: string[];\n  x_mitre_aliases: string[];\n  labels: string[];\n  x_mitre_contributors: string[];\n  x_mitre_shortname: string;\n  kill_chain_phases: KillChainPhase[];\n  x_mitre_detection: string;\n  x_mitre_is_subtechnique: boolean;\n  x_mitre_data_sources: string[];\n  x_mitre_defense_bypassed: string[];\n  x_mitre_permissions_required: string[];\n  x_mitre_remote_support: boolean;\n  x_mitre_system_requirements: string[];\n  x_mitre_impact_type: string[];\n  x_mitre_effective_permissions: string[];\n  x_mitre_network_requirements: boolean;\n  relationship_type: RelationshipType;\n  source_ref: string;\n  target_ref: string;\n  x_mitre_data_source_ref: string;\n  aliases: string[];\n  first_seen: string;\n  last_seen: string;\n  x_mitre_first_seen_citation: string;\n  x_mitre_last_seen_citation: string;\n  x_mitre_collection_layers: string[];\n  identity_class: string;\n  definition: Definition;\n  definition_type: string;\n}\n\n/**\n * Interface for external references related to Mitre Attack data.\n */\nexport interface ExternalReference {\n  source_name: string;\n  description: string;\n  url: string;\n  external_id: string;\n}\n\n/**\n * Interface for the Kill Chain Phase related to Mitre Attack data.\n */\nexport interface KillChainPhase {\n  kill_chain_name: string;\n  phase_name: string;\n}\n\n/**\n * Interface for the Definition related to Mitre Attack data.\n */\nexport interface Definition {\n  statement: string;\n}\n\n/**\n * Type for Mitre Attack data type.\n */\nexport type MitreType =\n  | 'bundle'\n  | 'marking-definition'\n  | 'definition'\n  | 'x-mitre-matrix'\n  | 'x-mitre-tactic'\n  | 'course-of-action'\n  | 'tool'\n  | 'attack-pattern'\n  | 'relationship'\n  | 'malware';\n\n/**\n * Type for Relationship type in Mitre Attack data.\n */\nexport type RelationshipType = 'mitigates' | 'uses' | 'detects' | 'subtechnique-of';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libraries/components/loader/loader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loader.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'app-loader',\n  standalone: true,\n  imports: [],\n  templateUrl: './loader.component.html',\n  styleUrl: './loader.component.scss'\n})\n /**\n * Reprresents he Loader spinner component.\n */\nexport class LoaderComponent {\n\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MitreAttackComponent.html":{"url":"components/MitreAttackComponent.html","title":"component - MitreAttackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MitreAttackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/deas/mitre-attack/mitre-attack.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying Mitre Attack information.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mitre-attack\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UI_MITRE_ATTACK\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./mitre-attack.component.html\n            \n\n\n\n            \n                styleUrl\n                ./mitre-attack.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attackHacker\n                            \n                            \n                                    Public\n                                cards\n                            \n                            \n                                    Public\n                                chipConfig\n                            \n                            \n                                    Public\n                                clusters\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                hackerType\n                            \n                            \n                                    Private\n                                hubFacade\n                            \n                            \n                                    Public\n                                hubService\n                            \n                            \n                                    Public\n                                mitraDataSubscription\n                            \n                            \n                                    Public\n                                mitreAttackInfo$\n                            \n                            \n                                    Public\n                                mitreAttackService\n                            \n                            \n                                    Public\n                                mitreDataFiltered\n                            \n                            \n                                    Public\n                                mitreFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filter\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                selectMitreCluster\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Filters the Mitre Data based on the hacker type.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The type of select event filter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectMitreCluster\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectMitreCluster(cluster: ClusterConfig, mitreComponent: MitreAttackComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Selects a Mitre cluster and updates the active state of the clusters and cards.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cluster\n                                            \n                                                            ClusterConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe cluster to select.\n\n\n                                            \n                                        \n                                        \n                                                mitreComponent\n                                            \n                                                            MitreAttackComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe MitreAttackComponent instance.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        attackHacker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : HackersMock.APT28\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:84\n                        \n                    \n\n            \n                \n                    Current hacker data being used for attacks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:96\n                        \n                    \n\n            \n                \n                    Configurations for cards.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chipConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    label: 'Identified as malicious actor',\n    isDark: true,\n    icon: 'icon-virus',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:108\n                        \n                    \n\n            \n                \n                    Mock configuration for a chip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clusters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClusterConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:90\n                        \n                    \n\n            \n                \n                    Configurations for clusters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:71\n                        \n                    \n\n            \n                \n                    Subject for managing the destruction of observables.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hackerType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : HackerType\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:118\n                        \n                    \n\n            \n                \n                    hackerType configuration for filter.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HubFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:53\n                        \n                    \n\n            \n                \n                    Facade for interacting with the Hub module store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hubService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HubService)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:59\n                        \n                    \n\n            \n                \n                    Hub service for Hub-specific operations.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitraDataSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : this.hubFacade.mitreData$\n    .pipe(filter(Boolean), takeUntil(this.destroy$))\n    .subscribe((data: ExtendedMitreAttackInfo[]) => {\n      this.mitreDataFiltered = data;\n      this.cards = [];\n      this.clusters = this.mitreDataFiltered.map(\n        (mitreAttackInfo: ExtendedMitreAttackInfo) => this.mitreAttackService.createMitreCluster(mitreAttackInfo, this)\n      );\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:133\n                        \n                    \n\n            \n                \n                    Subscription to the Mitre Data.\nUpdates the filtered Mitre data and clusters based on the received data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreAttackInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.hubFacade.mitreData$\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:77\n                        \n                    \n\n            \n                \n                    Observable that provides the extended Mitre Attack information or null.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreAttackService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MitreAttackService)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:65\n                        \n                    \n\n            \n                \n                    Service for Mitre Attack operations.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreDataFiltered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtendedMitreAttackInfo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:102\n                        \n                    \n\n            \n                \n                    Filtered Mitre Attack data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreFilters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:125\n                        \n                    \n\n            \n                \n                    mitreFilters configuration optional.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  HackersMock,\n  HackerType,\n} from './../../../shared/constants/groupHackers.model';\nimport { Component, inject } from '@angular/core';\nimport { ChipComponent } from '../../../libraries/components/chip/chip.component';\nimport { CardComponent } from '../../../libraries/components/card/card.component';\nimport { ChipsetComponent } from '../../../libraries/components/chip-set/chip-set.component';\nimport { ClusterComponent } from '../../../libraries/components/cluster/cluster.component';\nimport { ClusterConfig } from '../../../libraries/models/cluster.model';\nimport { Observable, Subject, Subscription, filter, takeUntil } from 'rxjs';\nimport { ExtendedMitreAttackInfo } from '../hub/models/hub.models';\nimport { HubService } from '../hub/services/hub.service';\nimport { HubFacade } from '../hub/store/hub.facade';\nimport { CommonModule } from '@angular/common';\nimport { LoaderComponent } from '../../../libraries/components/loader/loader.component';\nimport { CardConfig } from '../../../libraries/models/card.model';\nimport { MitreAttackService } from './services/mitre-attack.service';\n\n/**\n * Array containing components related to the UI kit Mitre Attack Component.\n * @type {Array}\n */\nconst UI_MITRE_ATTACK = [\n  ChipComponent,\n  CardComponent,\n  ChipsetComponent,\n  ClusterComponent,\n  LoaderComponent,\n];\n\n/**\n * Component for displaying Mitre Attack information.\n */\n@Component({\n  selector: 'app-mitre-attack',\n  standalone: true,\n  imports: [...UI_MITRE_ATTACK, CommonModule],\n  templateUrl: './mitre-attack.component.html',\n  styleUrl: './mitre-attack.component.scss',\n})\n/**\n * Represents the Mitre Attack Component.\n */\n/**\n * Represents the Mitre Attack Component.\n */\nexport class MitreAttackComponent {\n  /**\n   * Facade for interacting with the Hub module store.\n   * @private\n   */\n  private hubFacade = inject(HubFacade);\n\n  /**\n   * Hub service for Hub-specific operations.\n   * @public\n   */\n  public hubService = inject(HubService);\n\n  /**\n   * Service for Mitre Attack operations.\n   * @public\n   */\n  public mitreAttackService = inject(MitreAttackService);\n\n  /**\n   * Subject for managing the destruction of observables.\n   * @private\n   */\n  private destroy$ = new Subject();\n\n  /**\n   * Observable that provides the extended Mitre Attack information or null.\n   * @public\n   */\n  public mitreAttackInfo$: Observable =\n    this.hubFacade.mitreData$;\n\n  /**\n   * Current hacker data being used for attacks.\n   * @public\n   */\n  public attackHacker = HackersMock.APT28;\n\n  /**\n   * Configurations for clusters.\n   * @public\n   */\n  public clusters: ClusterConfig[] = [];\n\n  /**\n   * Configurations for cards.\n   * @public\n   */\n  public cards: CardConfig[] = [];\n\n  /**\n   * Filtered Mitre Attack data.\n   * @public\n   */\n  public mitreDataFiltered: ExtendedMitreAttackInfo[] = [];\n\n  /**\n   * Mock configuration for a chip.\n   * @public\n   */\n  public chipConfig = {\n    label: 'Identified as malicious actor',\n    isDark: true,\n    icon: 'icon-virus',\n  };\n\n  /**\n   * hackerType configuration for filter.\n   * @public\n   */\n  public hackerType = HackerType;\n\n  // DEMO: filters\n  /**\n   * mitreFilters configuration optional.\n   * @public\n   */\n  public mitreFilters: boolean = true;\n\n\n  /**\n   * Subscription to the Mitre Data.\n   * Updates the filtered Mitre data and clusters based on the received data.\n   * @public\n   */\n  public mitraDataSubscription: Subscription = this.hubFacade.mitreData$\n    .pipe(filter(Boolean), takeUntil(this.destroy$))\n    .subscribe((data: ExtendedMitreAttackInfo[]) => {\n      this.mitreDataFiltered = data;\n      this.cards = [];\n      this.clusters = this.mitreDataFiltered.map(\n        (mitreAttackInfo: ExtendedMitreAttackInfo) => this.mitreAttackService.createMitreCluster(mitreAttackInfo, this)\n      );\n    });\n\n\n  /**\n   * Filters the Mitre Data based on the hacker type.\n   * @param event The type of select event filter.\n   * @public\n   */\n  public filter(event: Event): void {\n    const hackerType = (event.target as HTMLSelectElement).value as HackerType;\n    this.attackHacker = {...HackersMock[hackerType]};\n    this.hubFacade.getMitreData(hackerType);\n  }\n\n  /**\n   * Selects a Mitre cluster and updates the active state of the clusters and cards.\n   * @param cluster - The cluster to select.\n   * @param mitreComponent - The MitreAttackComponent instance.\n   */\n  public selectMitreCluster(\n    cluster: ClusterConfig,\n    mitreComponent: MitreAttackComponent\n  ): void {\n    this.clusters = this.clusters.map((_cluster) => {\n      if (_cluster.id === cluster.id) {\n        return { ..._cluster, active: !cluster.active, opaque: false };\n      } else {\n        const someActive = this.clusters.some((cluster) => cluster.active);\n        return {\n          ..._cluster,\n          active: false,\n          opaque: !someActive ? true : false,\n        };\n      }\n    });\n\n    if (cluster.techniques?.length)\n      this.cards = !cluster.active\n        ? cluster.techniques.map((technique: ExtendedMitreAttackInfo) =>\n            this.mitreAttackService.createMitreTechniques(\n              technique,\n              mitreComponent\n            )\n          )\n        : [];\n  }\n\n  public ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n\n\n}\n\n    \n\n    \n        \n\n  @if(mitreFilters){\n    \n      \n        {{hackerType.APT28}}\n        {{hackerType.APT29}}\n        {{hackerType.GENERIC}}\n      \n    \n  }\n\n  @if(mitreAttackInfo$ | async; as dataMitreAttack$){\n\n    @if(dataMitreAttack$){\n\n      @if(attackHacker){\n        \n        \n\n          \n            \n              {{attackHacker.title}}\n            \n\n            \n              {{'Indirizzo IP:'}}  {{attackHacker.ipAdresss}} \n            \n\n          \n\n          \n            \n          \n\n        \n\n        \n\n        \n        \n          \n\n          \n            {{'Descrizione:'}}\n            \n              \n            \n          \n        \n      }\n\n      \n      \n\n        \n          \n            {{'Fasi di Attaco'}}\n          \n          {{'Seleziona una fase per visualizzare le tecniche:'}}\n\n          @if(clusters.length){\n            \n              @for( cluster of clusters; track cluster){\n                \n              }\n            \n          }\n        \n\n        \n          \n            {{'Tecniche di Attacco'}}\n          \n          @if(cards.length){\n            \n              @for (card of cards; track card) {\n                \n              }\n            \n          }\n          @else {\n            \n              \n                {{'Nessuna fase di attacco disponibile'}}\n              \n            \n          }\n\n        \n\n\n      \n    }\n\n\n  }\n\n\n  @else {\n    \n      \n    \n  }\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if(mitreFilters){                  {{hackerType.APT28}}        {{hackerType.APT29}}        {{hackerType.GENERIC}}            }  @if(mitreAttackInfo$ | async; as dataMitreAttack$){    @if(dataMitreAttack$){      @if(attackHacker){                                                    {{attackHacker.title}}                                      {{\\'Indirizzo IP:\\'}}  {{attackHacker.ipAdresss}}                                                                                                                       {{\\'Descrizione:\\'}}                                                              }                                          {{\\'Fasi di Attaco\\'}}                    {{\\'Seleziona una fase per visualizzare le tecniche:\\'}}          @if(clusters.length){                          @for( cluster of clusters; track cluster){                              }                      }                                      {{\\'Tecniche di Attacco\\'}}                    @if(cards.length){                          @for (card of cards; track card) {                              }                      }          @else {                                          {{\\'Nessuna fase di attacco disponibile\\'}}                                    }                  }  }  @else {                }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'MitreAttackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreAttackConfig.html":{"url":"interfaces/MitreAttackConfig.html","title":"interface - MitreAttackConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreAttackConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/mitre-attack.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            footer\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            info\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        footer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        footer:         MitreAttackFooter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MitreAttackFooter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         MitreAttackHeader\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MitreAttackHeader\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:         MitreAttackInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MitreAttackInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackConfig {\n  header: MitreAttackHeader;\n  info: MitreAttackInfo;\n  footer: MitreAttackFooter[];\n}\n\nexport interface MitreAttackHeader {\n  title: string;\n  subtitle: string;\n  chip: any;\n}\n\n\nexport interface MitreAttackInfo {\n  cells: any;\n\n  label: string;\n  class?: string;\n  value: string;\n}\n\nexport interface MitreCells {\n  header:string;\n  content: MitreCellsContent[]\n}\n\nexport interface MitreCellsContent {\n  value:string;\n  chip?:any;\n}\n\nexport interface MitreAttackFooter {\n  phase:any;\n  tecnique:any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreAttackData.html":{"url":"interfaces/MitreAttackData.html","title":"interface - MitreAttackData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreAttackData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/mitre.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Mitre Attack data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            objects\n                                        \n                                \n                                \n                                        \n                                            spec_version\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objects:     MitreAttackInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MitreAttackInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spec_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spec_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackData {\n  type: string;\n  id: string;\n  objects: MitreAttackInfo[];\n  spec_version: string;\n}\n\n/**\n * Interface for the Mitre Attack information.\n */\nexport interface MitreAttackInfo {\n  tactic_refs: string[];\n  object_marking_refs: string[];\n  id: string;\n  type: MitreType;\n  created: string;\n  created_by_ref: string;\n  external_references: ExternalReference[];\n  modified: string;\n  name: string;\n  description: string;\n  x_mitre_version: string;\n  x_mitre_attack_spec_version: string;\n  x_mitre_modified_by_ref: string;\n  x_mitre_domains: string[];\n  x_mitre_deprecated: boolean;\n  revoked: boolean;\n  x_mitre_platforms: string[];\n  x_mitre_aliases: string[];\n  labels: string[];\n  x_mitre_contributors: string[];\n  x_mitre_shortname: string;\n  kill_chain_phases: KillChainPhase[];\n  x_mitre_detection: string;\n  x_mitre_is_subtechnique: boolean;\n  x_mitre_data_sources: string[];\n  x_mitre_defense_bypassed: string[];\n  x_mitre_permissions_required: string[];\n  x_mitre_remote_support: boolean;\n  x_mitre_system_requirements: string[];\n  x_mitre_impact_type: string[];\n  x_mitre_effective_permissions: string[];\n  x_mitre_network_requirements: boolean;\n  relationship_type: RelationshipType;\n  source_ref: string;\n  target_ref: string;\n  x_mitre_data_source_ref: string;\n  aliases: string[];\n  first_seen: string;\n  last_seen: string;\n  x_mitre_first_seen_citation: string;\n  x_mitre_last_seen_citation: string;\n  x_mitre_collection_layers: string[];\n  identity_class: string;\n  definition: Definition;\n  definition_type: string;\n}\n\n/**\n * Interface for external references related to Mitre Attack data.\n */\nexport interface ExternalReference {\n  source_name: string;\n  description: string;\n  url: string;\n  external_id: string;\n}\n\n/**\n * Interface for the Kill Chain Phase related to Mitre Attack data.\n */\nexport interface KillChainPhase {\n  kill_chain_name: string;\n  phase_name: string;\n}\n\n/**\n * Interface for the Definition related to Mitre Attack data.\n */\nexport interface Definition {\n  statement: string;\n}\n\n/**\n * Type for Mitre Attack data type.\n */\nexport type MitreType =\n  | 'bundle'\n  | 'marking-definition'\n  | 'definition'\n  | 'x-mitre-matrix'\n  | 'x-mitre-tactic'\n  | 'course-of-action'\n  | 'tool'\n  | 'attack-pattern'\n  | 'relationship'\n  | 'malware';\n\n/**\n * Type for Relationship type in Mitre Attack data.\n */\nexport type RelationshipType = 'mitigates' | 'uses' | 'detects' | 'subtechnique-of';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreAttackFooter.html":{"url":"interfaces/MitreAttackFooter.html","title":"interface - MitreAttackFooter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreAttackFooter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/mitre-attack.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            phase\n                                        \n                                \n                                \n                                        \n                                            tecnique\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tecnique\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tecnique:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackConfig {\n  header: MitreAttackHeader;\n  info: MitreAttackInfo;\n  footer: MitreAttackFooter[];\n}\n\nexport interface MitreAttackHeader {\n  title: string;\n  subtitle: string;\n  chip: any;\n}\n\n\nexport interface MitreAttackInfo {\n  cells: any;\n\n  label: string;\n  class?: string;\n  value: string;\n}\n\nexport interface MitreCells {\n  header:string;\n  content: MitreCellsContent[]\n}\n\nexport interface MitreCellsContent {\n  value:string;\n  chip?:any;\n}\n\nexport interface MitreAttackFooter {\n  phase:any;\n  tecnique:any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreAttackHeader.html":{"url":"interfaces/MitreAttackHeader.html","title":"interface - MitreAttackHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreAttackHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/mitre-attack.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chip\n                                        \n                                \n                                \n                                        \n                                            subtitle\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chip:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackConfig {\n  header: MitreAttackHeader;\n  info: MitreAttackInfo;\n  footer: MitreAttackFooter[];\n}\n\nexport interface MitreAttackHeader {\n  title: string;\n  subtitle: string;\n  chip: any;\n}\n\n\nexport interface MitreAttackInfo {\n  cells: any;\n\n  label: string;\n  class?: string;\n  value: string;\n}\n\nexport interface MitreCells {\n  header:string;\n  content: MitreCellsContent[]\n}\n\nexport interface MitreCellsContent {\n  value:string;\n  chip?:any;\n}\n\nexport interface MitreAttackFooter {\n  phase:any;\n  tecnique:any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreAttackInfo-1.html":{"url":"interfaces/MitreAttackInfo-1.html","title":"interface - MitreAttackInfo-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreAttackInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/mitre-attack.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cells\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cells\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cells:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackConfig {\n  header: MitreAttackHeader;\n  info: MitreAttackInfo;\n  footer: MitreAttackFooter[];\n}\n\nexport interface MitreAttackHeader {\n  title: string;\n  subtitle: string;\n  chip: any;\n}\n\n\nexport interface MitreAttackInfo {\n  cells: any;\n\n  label: string;\n  class?: string;\n  value: string;\n}\n\nexport interface MitreCells {\n  header:string;\n  content: MitreCellsContent[]\n}\n\nexport interface MitreCellsContent {\n  value:string;\n  chip?:any;\n}\n\nexport interface MitreAttackFooter {\n  phase:any;\n  tecnique:any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MitreAttackService.html":{"url":"injectables/MitreAttackService.html","title":"injectable - MitreAttackService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MitreAttackService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/deas/mitre-attack/services/mitre-attack.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling Mitre Attack related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modalService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createMitreCluster\n                            \n                            \n                                    Public\n                                createMitreTechniques\n                            \n                            \n                                    Public\n                                openMitreModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createMitreCluster\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMitreCluster(mitreAttackInfo: ExtendedMitreAttackInfo, mitreComponent: MitreAttackComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/mitre-attack/services/mitre-attack.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Creates a cluster configuration for a Mitre Attack.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mitreAttackInfo\n                                            \n                                                            ExtendedMitreAttackInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre Attack information.\n\n                                            \n                                        \n                                        \n                                                mitreComponent\n                                            \n                                                            MitreAttackComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre Attack component.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ClusterConfig\n\n                        \n                            \n                                The cluster configuration.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createMitreTechniques\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMitreTechniques(mitreAttackInfo: ExtendedMitreAttackInfo, mitreComponent: MitreAttackComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/mitre-attack/services/mitre-attack.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Creates a card configuration for Mitre Attack techniques.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mitreAttackInfo\n                                            \n                                                            ExtendedMitreAttackInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre Attack information.\n\n                                            \n                                        \n                                        \n                                                mitreComponent\n                                            \n                                                            MitreAttackComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre Attack component.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardConfig\n\n                        \n                            \n                                The card configuration.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openMitreModal\n                        \n                    \n                \n            \n            \n                \n                        \n                    openMitreModal(actionType: CardAction, mitreAttackInfo: ExtendedMitreAttackInfo, mitreComponent: MitreAttackComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/mitre-attack/services/mitre-attack.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Opens a modal for Mitre Attack information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                actionType\n                                            \n                                                            CardAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The type of action (INFO or SETTINGS).\n\n                                            \n                                        \n                                        \n                                                mitreAttackInfo\n                                            \n                                                            ExtendedMitreAttackInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre Attack information.\n\n                                            \n                                        \n                                        \n                                                mitreComponent\n                                            \n                                                            MitreAttackComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre Attack component.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NgbModal)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/services/mitre-attack.service.ts:24\n                        \n                    \n\n            \n                \n                    Injected service for managing modals.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from \"@angular/core\";\nimport { CardAction, CardConfig, CardIcon } from \"../../../../libraries/models/card.model\";\nimport { ModalComponent } from \"../../../../libraries/components/modal/modal.component\";\nimport { ModalConfig } from \"../../../../libraries/models/modal.model\";\nimport { ExtendedMitreAttackInfo } from \"../../hub/models/hub.models\";\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ClusterConfig } from \"../../../../libraries/models/cluster.model\";\nimport { MitreAttackComponent } from \"../mitre-attack.component\";\n\n/**\n * Service for handling Mitre Attack related operations.\n * @@Injectable\n * @providedIn: 'root'\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MitreAttackService {\n\n  /**\n   * Injected service for managing modals.\n   * @private\n   */\n  private modalService = inject(NgbModal);\n\n  /**\n   * Creates a cluster configuration for a Mitre Attack.\n   * @param {ExtendedMitreAttackInfo} mitreAttackInfo The Mitre Attack information.\n   * @param {MitreAttackComponent} mitreComponent The Mitre Attack component.\n   * @returns {ClusterConfig} The cluster configuration.\n   */\n  public createMitreCluster(mitreAttackInfo: ExtendedMitreAttackInfo, mitreComponent: MitreAttackComponent): ClusterConfig {\n    return {\n      name: mitreAttackInfo.name,\n      id: mitreAttackInfo.id,\n      active: false,\n      select: (mitreInfo: ClusterConfig) => mitreComponent.selectMitreCluster(mitreInfo, mitreComponent),\n      techniques: mitreAttackInfo.techniques,\n      uses: mitreAttackInfo.uses,\n      externalID: mitreAttackInfo.external_references[0].external_id,\n      opaque: false,\n      size: 7\n    };\n  }\n\n  /**\n   * Creates a card configuration for Mitre Attack techniques.\n   * @param {ExtendedMitreAttackInfo} mitreAttackInfo The Mitre Attack information.\n   * @param {MitreAttackComponent} mitreComponent The Mitre Attack component.\n   * @returns {CardConfig} The card configuration.\n   */\n  public createMitreTechniques(mitreAttackInfo: ExtendedMitreAttackInfo, mitreComponent: MitreAttackComponent): CardConfig {\n    return {\n      header: {\n        label: mitreAttackInfo.name,\n        value: mitreAttackInfo.external_references[0].external_id,\n      },\n      footer: [\n        {\n          icon: CardIcon.info,\n          actionType: CardAction.INFO,\n          action: (actionType: CardAction) => this.openMitreModal(actionType, mitreAttackInfo, mitreComponent)\n        },\n        {\n          icon: CardIcon.settings,\n          actionType: CardAction.SETTINGS,\n          action: (actionType: CardAction) => this.openMitreModal(actionType, mitreAttackInfo, mitreComponent)\n        }\n      ]\n    };\n  }\n\n  /**\n   * Opens a modal for Mitre Attack information.\n   * @param {CardAction} actionType The type of action (INFO or SETTINGS).\n   * @param {ExtendedMitreAttackInfo} mitreAttackInfo The Mitre Attack information.\n   * @param {MitreAttackComponent} mitreComponent The Mitre Attack component.\n   */\n  public openMitreModal(actionType: CardAction, mitreAttackInfo: ExtendedMitreAttackInfo, mitreComponent: MitreAttackComponent): void {\n    let modalConfig: ModalConfig;\n    switch (actionType) {\n      case CardAction.INFO:\n        modalConfig = {\n          title: 'Informazioni tecniche',\n          content: [\n            {\n              label: 'Name',\n              value: mitreAttackInfo.name,\n            },\n            {\n              label: 'ID',\n              value: mitreAttackInfo.id,\n            },\n            {\n              label: 'External ID',\n              value: mitreAttackInfo.external_references[0].external_id,\n            },\n            {\n              label: 'Descrizione',\n              value: mitreAttackInfo.description,\n            },\n            {\n              label: 'Uses Example',\n              value: mitreAttackInfo?.uses ? mitreAttackInfo?.uses[0]?.description : 'N/A',\n            }\n          ],\n          cards: mitreAttackInfo?.subtechniques ? mitreAttackInfo.subtechniques.map(subtechnique => this.createMitreTechniques(subtechnique, mitreComponent)) : []\n        };\n        const modalRef = this.modalService.open(ModalComponent, { size: 'lg', centered: true });\n        modalRef.componentInstance.modalConfig = modalConfig;\n        break;\n      default:\n        null;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreCells.html":{"url":"interfaces/MitreCells.html","title":"interface - MitreCells","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreCells\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/mitre-attack.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     MitreCellsContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MitreCellsContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackConfig {\n  header: MitreAttackHeader;\n  info: MitreAttackInfo;\n  footer: MitreAttackFooter[];\n}\n\nexport interface MitreAttackHeader {\n  title: string;\n  subtitle: string;\n  chip: any;\n}\n\n\nexport interface MitreAttackInfo {\n  cells: any;\n\n  label: string;\n  class?: string;\n  value: string;\n}\n\nexport interface MitreCells {\n  header:string;\n  content: MitreCellsContent[]\n}\n\nexport interface MitreCellsContent {\n  value:string;\n  chip?:any;\n}\n\nexport interface MitreAttackFooter {\n  phase:any;\n  tecnique:any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreCellsContent.html":{"url":"interfaces/MitreCellsContent.html","title":"interface - MitreCellsContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreCellsContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/mitre-attack.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            chip\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chip:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackConfig {\n  header: MitreAttackHeader;\n  info: MitreAttackInfo;\n  footer: MitreAttackFooter[];\n}\n\nexport interface MitreAttackHeader {\n  title: string;\n  subtitle: string;\n  chip: any;\n}\n\n\nexport interface MitreAttackInfo {\n  cells: any;\n\n  label: string;\n  class?: string;\n  value: string;\n}\n\nexport interface MitreCells {\n  header:string;\n  content: MitreCellsContent[]\n}\n\nexport interface MitreCellsContent {\n  value:string;\n  chip?:any;\n}\n\nexport interface MitreAttackFooter {\n  phase:any;\n  tecnique:any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libraries/components/modal/modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component representing a modal.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                UI_MODAL\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./modal.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalConfig\n                    \n                \n                \n                    \n                        Type :         ModalConfig\n\n                    \n                \n                \n                    \n                        Default value : {} as ModalConfig\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/components/modal/modal.component.ts:33\n                            \n                        \n                \n                    \n                        Configuration for the modal component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input, input } from '@angular/core';\nimport { ModalConfig } from '../../models/modal.model';\nimport { CommonModule } from '@angular/common';\nimport { CardComponent } from '../card/card.component';\n\n\n/**\n * Array containing UI modal components.\n * @type {typeof CardComponent[]}\n */\nconst UI_MODAL: typeof CardComponent[] = [\n  CardComponent\n];\n\n/**\n * Component representing a modal.\n */\n@Component({\n  selector: 'app-modal',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ...UI_MODAL\n  ],\n  templateUrl: './modal.component.html',\n  styleUrl: './modal.component.scss'\n})\nexport class ModalComponent {\n  /**\n   * Configuration for the modal component.\n   * @type {ModalConfig}\n   */\n  @Input() modalConfig:ModalConfig = {} as ModalConfig;\n\n}\n\n    \n\n    \n        \n\n\n  \n     {{modalConfig.title}}\n\n    \n\n    @if(modalConfig.content.length){\n      \n        @for(content of modalConfig.content; track content){\n          @if(content.label && content.value){\n            \n              {{content.label}}\n              {{content.value}}\n            \n          }\n        }\n\n      \n\n      @if(modalConfig.cards.length){\n        {{'Sotto tecniche:'}}\n          \n            @for(card of modalConfig.cards; track card){\n              \n            }\n          \n      }@else {\n        \n          {{'Non ci sono subtecniche associate'}}\n        \n      }\n    }\n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{modalConfig.title}}        @if(modalConfig.content.length){              @for(content of modalConfig.content; track content){          @if(content.label && content.value){                          {{content.label}}              {{content.value}}                      }        }            @if(modalConfig.cards.length){        {{\\'Sotto tecniche:\\'}}                      @for(card of modalConfig.cards; track card){                          }                }@else {                  {{\\'Non ci sono subtecniche associate\\'}}              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalConfig.html":{"url":"interfaces/ModalConfig.html","title":"interface - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/modal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cards\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cards:         CardConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The card configurations for the modal.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         ModalContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ModalContent[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content sections of the modal.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the modal.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CardConfig } from \"./card.model\";\n\nexport interface ModalConfig {\n  /**\n   * The title of the modal.\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * The content sections of the modal.\n   * @type {ModalContent[]}\n   */\n  content: ModalContent[];\n\n  /**\n   * The card configurations for the modal.\n   * @type {CardConfig[]}\n   */\n  cards: CardConfig[];\n}\n\n/**\n * Content configuration for a modal component.\n */\nexport interface ModalContent {\n  /**\n   * The label for the content section.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * The value for the content section.\n   * @type {string}\n   */\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalContent.html":{"url":"interfaces/ModalContent.html","title":"interface - ModalContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/modal.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Content configuration for a modal component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The label for the content section.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value for the content section.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CardConfig } from \"./card.model\";\n\nexport interface ModalConfig {\n  /**\n   * The title of the modal.\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * The content sections of the modal.\n   * @type {ModalContent[]}\n   */\n  content: ModalContent[];\n\n  /**\n   * The card configurations for the modal.\n   * @type {CardConfig[]}\n   */\n  cards: CardConfig[];\n}\n\n/**\n * Content configuration for a modal component.\n */\nexport interface ModalContent {\n  /**\n   * The label for the content section.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * The value for the content section.\n   * @type {string}\n   */\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TooltipDirective.html":{"url":"directives/TooltipDirective.html","title":"directive - TooltipDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  TooltipDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/directives/tooltip.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive for displaying a tooltip on an element.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [tooltip]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                showTimeout\n                            \n                            \n                                    Private\n                                tooltipElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTooltip\n                            \n                            \n                                    Private\n                                hideTooltip\n                            \n                            \n                                    \n                                onMouseEnter\n                            \n                            \n                                    \n                                onMouseLeave\n                            \n                            \n                                    \n                                onMouseMove\n                            \n                            \n                                    Private\n                                showTooltip\n                            \n                            \n                                    Private\n                                textOverlap\n                            \n                            \n                                    Private\n                                updateTooltipPosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tooltipDelay\n                            \n                            \n                                tooltipShow\n                            \n                            \n                                tooltipText\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                            \n                                mousemove\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/libraries/directives/tooltip.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tooltipDelay\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/directives/tooltip.directive.ts:24\n                            \n                        \n                \n                    \n                        The delay in milliseconds before showing the tooltip.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipShow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/directives/tooltip.directive.ts:19\n                            \n                        \n                \n                    \n                        Determines whether the tooltip can overlap with other elements.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/directives/tooltip.directive.ts:14\n                            \n                        \n                \n                    \n                        The text to display in the tooltip.\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/libraries/directives/tooltip.directive.ts:37\n                \n            \n\n\n            \n                \n                    Event listener for mouseenter event.\nShows the tooltip if tooltipOverlap is true.\nUpdates the tooltip position based on the mouse coordinates.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mouse event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseleave\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/libraries/directives/tooltip.directive.ts:51\n                \n            \n\n\n            \n                \n                    Event listener for mouseleave event.\nClears the timeout for showing the tooltip.\nHides the tooltip.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousemove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/libraries/directives/tooltip.directive.ts:61\n                \n            \n\n\n            \n                \n                    Event listener for mousemove event.\nUpdates the tooltip position based on the mouse coordinates.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mouse event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createTooltip\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTooltip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:87\n                        \n                    \n\n\n            \n                \n                        Creates the tooltip element and appends it to the body.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hideTooltip\n                        \n                    \n                \n            \n            \n                \n                        \n                    hideTooltip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:77\n                        \n                    \n\n\n            \n                \n                        Hides the tooltip.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseEnter(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseenter', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:37\n                        \n                    \n\n\n            \n                \n                        Event listener for mouseenter event.\nShows the tooltip if tooltipOverlap is true.\nUpdates the tooltip position based on the mouse coordinates.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseLeave\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave')\n                \n            \n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:51\n                        \n                    \n\n\n            \n                \n                        Event listener for mouseleave event.\nClears the timeout for showing the tooltip.\nHides the tooltip.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseMove\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseMove(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mousemove', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:61\n                        \n                    \n\n\n            \n                \n                        Event listener for mousemove event.\nUpdates the tooltip position based on the mouse coordinates.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showTooltip\n                        \n                    \n                \n            \n            \n                \n                        \n                    showTooltip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:68\n                        \n                    \n\n\n            \n                \n                        Shows the tooltip if it's not already displayed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        textOverlap\n                        \n                    \n                \n            \n            \n                \n                        \n                    textOverlap(htmlElement: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:133\n                        \n                    \n\n\n            \n                \n                        Checks if the text in the element overlaps.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                htmlElement\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HTML element to check for text overlap.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                A boolean indicating whether text overlaps in the element.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateTooltipPosition\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTooltipPosition(x: number, y: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:101\n                        \n                    \n\n\n            \n                \n                        Updates the position of the tooltip based on the mouse coordinates.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the mouse.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the mouse.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/libraries/directives/tooltip.directive.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tooltipElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/libraries/directives/tooltip.directive.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Input, Renderer2 } from '@angular/core';\n\n/**\n * Directive for displaying a tooltip on an element.\n */\n@Directive({\n  selector: '[tooltip]',\n  standalone: true,\n})\nexport class TooltipDirective {\n  /**\n   * The text to display in the tooltip.\n   */\n  @Input() tooltipText: string = '';\n\n  /**\n   * Determines whether the tooltip can overlap with other elements.\n   */\n  @Input() tooltipShow: boolean = false;\n\n  /**\n   * The delay in milliseconds before showing the tooltip.\n   */\n  @Input() tooltipDelay: number = 0;\n\n  private tooltipElement: HTMLElement | null = null;\n  private showTimeout: any;\n\n  constructor(private renderer: Renderer2) {}\n\n  /**\n   * Event listener for mouseenter event.\n   * Shows the tooltip if tooltipOverlap is true.\n   * Updates the tooltip position based on the mouse coordinates.\n   * @param event The mouse event.\n   */\n  @HostListener('mouseenter', ['$event']) onMouseEnter(event: MouseEvent) {\n    if (this.textOverlap(event.target as HTMLElement) || this.tooltipShow) {\n      this.showTimeout = setTimeout(() => {\n        this.showTooltip();\n        this.updateTooltipPosition(event.clientX, event.clientY);\n      }, this.tooltipDelay);\n    }\n  }\n\n  /**\n   * Event listener for mouseleave event.\n   * Clears the timeout for showing the tooltip.\n   * Hides the tooltip.\n   */\n  @HostListener('mouseleave') onMouseLeave() {\n    clearTimeout(this.showTimeout);\n    this.hideTooltip();\n  }\n\n  /**\n   * Event listener for mousemove event.\n   * Updates the tooltip position based on the mouse coordinates.\n   * @param event The mouse event.\n   */\n  @HostListener('mousemove', ['$event']) onMouseMove(event: MouseEvent) {\n    this.updateTooltipPosition(event.clientX, event.clientY);\n  }\n\n  /**\n   * Shows the tooltip if it's not already displayed.\n   */\n  private showTooltip() {\n    if (!this.tooltipElement) {\n      this.createTooltip();\n    }\n  }\n\n  /**\n   * Hides the tooltip.\n   */\n  private hideTooltip() {\n    if (this.tooltipElement) {\n      this.renderer.removeChild(document.body, this.tooltipElement);\n      this.tooltipElement = null;\n    }\n  }\n\n  /**\n   * Creates the tooltip element and appends it to the body.\n   */\n  private createTooltip() {\n    this.tooltipElement = this.renderer.createElement('div');\n    this.renderer.addClass(this.tooltipElement, 'custom-tooltip');\n    if (this.tooltipElement) {\n      this.tooltipElement.innerHTML = this.tooltipText;\n    }\n    this.renderer.appendChild(document.body, this.tooltipElement);\n  }\n\n  /**\n   * Updates the position of the tooltip based on the mouse coordinates.\n   * @param x The x-coordinate of the mouse.\n   * @param y The y-coordinate of the mouse.\n   */\n  private updateTooltipPosition(x: number, y: number) {\n    if (this.tooltipElement) {\n      const tooltipWidth = this.tooltipElement.offsetWidth;\n      const tooltipHeight = this.tooltipElement.offsetHeight;\n\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n\n      const scrollX = window.scrollX || document.documentElement.scrollLeft;\n      const scrollY = window.scrollY || document.documentElement.scrollTop;\n\n      let top = y + scrollY - tooltipHeight - 10;\n      let left = x + scrollX + 10;\n\n      if (top  windowWidth) {\n        left = x + scrollX - tooltipWidth - 10;\n      }\n\n      this.renderer.setStyle(this.tooltipElement, 'top', `${top}px`);\n      this.renderer.setStyle(this.tooltipElement, 'left', `${left}px`);\n    }\n  }\n\n  /**\n   * Checks if the text in the element overlaps.\n   * @param htmlElement The HTML element to check for text overlap.\n   * @returns A boolean indicating whether text overlaps in the element.\n   */\n  private textOverlap(htmlElement: HTMLElement): boolean {\n    if (htmlElement)\n      return htmlElement.scrollWidth > htmlElement.offsetWidth;\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modules/user/store/user.effects.ts\n        \n\n\n            \n                Description\n            \n            \n                Effects for managing user-related actions.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action$: Actions, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/modules/user/store/user.effects.ts:13\n                            \n                        \n\n                \n                    \n                            Initializes the UserEffects instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        action$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Observable stream of actions dispatched in the application.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router instance for navigation.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The user service for managing user state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.action$.pipe(\n      ofType(login),\n      switchMap(({ user }) =>\n        this.userService.login(user).pipe(\n          map((user: UserModel) => {\n            // Dispatch loginSuccess action with the logged-in user\n            return loginSuccess({ user });\n          })\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/store/user.effects.ts:30\n                        \n                    \n\n            \n                \n                    Effect triggered when a login action is dispatched.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { Router } from '@angular/router';\nimport { switchMap, map } from 'rxjs/operators';\nimport { UserModel } from '../models/user.model';\nimport { UserService } from '../service/user.service';\nimport { login, loginSuccess } from './user.actions';\n\n/**\n * Effects for managing user-related actions.\n */\n@Injectable()\nexport class UserEffects {\n  /**\n   * Initializes the UserEffects instance.\n   * @param {Actions} action$ Observable stream of actions dispatched in the application.\n   * @param {Router} router The router instance for navigation.\n   * @param {UserService} userService The user service for managing user state.\n   */\n  constructor(\n    private action$: Actions,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  /**\n   * Effect triggered when a login action is dispatched.\n   * @type {Observable}\n   */\n  public login$ = createEffect(() =>\n    this.action$.pipe(\n      ofType(login),\n      switchMap(({ user }) =>\n        this.userService.login(user).pipe(\n          map((user: UserModel) => {\n            // Dispatch loginSuccess action with the logged-in user\n            return loginSuccess({ user });\n          })\n        )\n      )\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modules/user/store/user.facade.ts\n        \n\n\n            \n                Description\n            \n            \n                Facade service for managing user-related state and actions.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/modules/user/store/user.facade.ts:18\n                            \n                        \n\n                \n                    \n                            Initializes the UserFacade instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The NgRx store for managing application state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: UserModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/modules/user/store/user.facade.ts:31\n                        \n                    \n\n\n            \n                \n                        Dispatches a login action to authenticate the user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user object containing information from the authentication provider.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.select(user$).pipe(filter(Boolean))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/store/user.facade.ts:18\n                        \n                    \n\n            \n                \n                    Observable stream of the current user information.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { UserModel } from '../models/user.model';\nimport { login } from './user.actions';\nimport { user$ } from './user.selectors';\n\n/**\n * Facade service for managing user-related state and actions.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserFacade {\n  /**\n   * Observable stream of the current user information.\n   * @type {Observable}\n   */\n  public user$: Observable = this.store.select(user$).pipe(filter(Boolean));\n\n  /**\n   * Initializes the UserFacade instance.\n   * @param {Store} store The NgRx store for managing application state.\n   */\n  constructor(private store: Store) {}\n\n  /**\n   * Dispatches a login action to authenticate the user.\n   * @param {UserModel} user The user object containing information from the authentication provider.\n   * @returns {void}\n   */\n  public login(user: UserModel): void {\n    this.store.dispatch(login({ user }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserLoginSystemComponent.html":{"url":"components/UserLoginSystemComponent.html","title":"component - UserLoginSystemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserLoginSystemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/modules/user/user-login-system/user-login-system.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UserFacade\n                \n            \n\n\n            \n                selector\n                app-user-login-system\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UI_USER_LOGIN\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./user-login-system.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-login-system.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                document\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Public\n                                user$\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:63\n                            \n                        \n\n                \n                    \n                            Initializes the AuthenticationManager instance.\nAutomatically called when an instance of AuthenticationManager is created.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Initializes the authentication process.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:57\n                        \n                    \n\n            \n                \n                    The authentication service for handling user authentication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:39\n                        \n                    \n\n            \n                \n                    Subject used for destroying subscriptions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                \n                    \n                        Default value : inject(DOCUMENT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:51\n                        \n                    \n\n            \n                \n                    The document object representing the DOM document.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:45\n                        \n                    \n\n            \n                \n                    The router instance for navigation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : this.authService.user$.pipe(\n    takeUntil(this.destroy$)\n  ).subscribe((user) => {\n    if (user) {\n      try {\n        this.authService.getAccessTokenSilently().pipe(\n          takeUntil(this.destroy$)\n        ).subscribe(\n          token => {\n            // Store access token in local storage\n            localStorage.setItem('token', token);\n            // Set user information\n            this.userService.setUserInfo(user);\n            // Redirect to the DEAS module\n            this.router.navigateByUrl(`${APP.DEAS}`);\n          },\n        );\n      } catch (error) {\n        // Remove token from local storage\n        localStorage.removeItem('token');\n        // Handle authentication error\n        this.userService.setUserError(error as Auth0Error);\n      }\n    }\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:77\n                        \n                    \n\n            \n                \n                    Subscribes to user authentication changes and performs necessary actions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:63\n                        \n                    \n\n            \n                \n                    The user service for managing user state.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { Subject,Subscription,takeUntil } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { UserFacade } from '../store/user.facade';\nimport { CommonModule } from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { Auth0Error } from '../models/user.model';\nimport { UserService } from '../service/user.service';\nimport { APP } from '../../../../shared/routes/route.model';\nimport { LoaderComponent } from '../../../../libraries/components/loader/loader.component';\n\n/**\n * Array of components used in the Deas component.\n * @type {Array}\n */\nconst UI_USER_LOGIN = [\n  LoaderComponent\n];\n\n@Component({\n  selector: 'app-user-login-system',\n  standalone: true,\n  imports: [\n    ...UI_USER_LOGIN,\n    CommonModule\n  ],\n  templateUrl: './user-login-system.component.html',\n  styleUrls: ['./user-login-system.component.scss'],\n  providers: [\n    UserFacade\n  ]\n})\nexport class UserLoginSystemComponent {\n  /**\n   * Subject used for destroying subscriptions.\n   * @type {Subject}\n   */\n  private destroy$: Subject = new Subject();\n\n  /**\n   * The router instance for navigation.\n   * @type {Router}\n   */\n  private router: Router = inject(Router);\n\n  /**\n   * The document object representing the DOM document.\n   * @type {Document}\n   */\n  public document: Document = inject(DOCUMENT);\n\n  /**\n   * The authentication service for handling user authentication.\n   * @type {AuthService}\n   */\n  public authService: AuthService = inject(AuthService);\n\n  /**\n   * The user service for managing user state.\n   * @type {UserService}\n   */\n  private userService: UserService = inject(UserService);\n\n  /**\n   * Initializes the AuthenticationManager instance.\n   * Automatically called when an instance of AuthenticationManager is created.\n   */\n  constructor() {\n    this.initialize();\n  }\n\n  /**\n   * Subscribes to user authentication changes and performs necessary actions.\n   * @type {Subscription}\n   */\n  public user$: Subscription = this.authService.user$.pipe(\n    takeUntil(this.destroy$)\n  ).subscribe((user) => {\n    if (user) {\n      try {\n        this.authService.getAccessTokenSilently().pipe(\n          takeUntil(this.destroy$)\n        ).subscribe(\n          token => {\n            // Store access token in local storage\n            localStorage.setItem('token', token);\n            // Set user information\n            this.userService.setUserInfo(user);\n            // Redirect to the DEAS module\n            this.router.navigateByUrl(`${APP.DEAS}`);\n          },\n        );\n      } catch (error) {\n        // Remove token from local storage\n        localStorage.removeItem('token');\n        // Handle authentication error\n        this.userService.setUserError(error as Auth0Error);\n      }\n    }\n  });\n\n  /**\n   * Initializes the authentication process.\n   * @returns {void}\n   */\n  private initialize(): void {\n    this.authService.isAuthenticated$.subscribe(isAuthenticated => {\n      // Redirect to login page if user is not authenticated\n      if (!isAuthenticated)\n        this.authService.loginWithRedirect();\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./user-login-system.component.scss\n                \n                \n:host {\n  width: 100% !important;\n  height: 100vh !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserLoginSystemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserModel.html":{"url":"interfaces/UserModel.html","title":"interface - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modules/user/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            email_verified\n                                        \n                                \n                                \n                                        \n                                            family_name\n                                        \n                                \n                                \n                                        \n                                            given_name\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nickname\n                                        \n                                \n                                \n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's email address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email_verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email_verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the user's email address has been verified.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        family_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's family name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        given_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        given_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's given name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's full name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's nickname.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the user's picture.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's unique identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date and time when the user's profile was last updated.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface UserModel {\n  /**\n   * The user's given name.\n   * @type {string}\n   */\n  given_name: string;\n\n  /**\n   * The user's family name.\n   * @type {string}\n   */\n  family_name: string;\n\n  /**\n   * The user's nickname.\n   * @type {string}\n   */\n  nickname: string;\n\n  /**\n   * The user's full name.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * The URL of the user's picture.\n   * @type {string}\n   */\n  picture: string;\n\n  /**\n   * The date and time when the user's profile was last updated.\n   * @type {string}\n   */\n  updated_at: string;\n\n  /**\n   * The user's email address.\n   * @type {string}\n   */\n  email: string;\n\n  /**\n   * Indicates whether the user's email address has been verified.\n   * @type {boolean}\n   */\n  email_verified: boolean;\n\n  /**\n   * The user's unique identifier.\n   * @type {string}\n   */\n  sub: string;\n}\n\n/**\n * Interface representing an error response from Auth0.\n */\nexport interface Auth0Error {\n  /**\n   * The type of error.\n   * @type {string}\n   */\n  error: string;\n\n  /**\n   * Additional description of the error.\n   * @type {string | undefined}\n   */\n  error_description?: string;\n\n  /**\n   * A message describing the error.\n   * @type {string | undefined}\n   */\n  message?: string;\n}\n\n/**\n * Type representing possible error types from Auth0.\n */\nexport type Auth0ErrorType = 'login_required' | 'consent_required' | 'interaction_required';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modules/user/service/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Private\n                                document\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                userFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                setUserError\n                            \n                            \n                                    Public\n                                setUserInfo\n                            \n                            \n                                    Public\n                                setUserLogOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: UserModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/modules/user/service/user.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Logs in a user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user to be logged in.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the logged-in user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setUserError\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserError(error: Auth0Error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/modules/user/service/user.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Handles user authentication error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            Auth0Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The error object returned from the authentication service.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setUserInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserInfo(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/modules/user/service/user.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Sets user information after successful login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user object containing information from the authentication provider.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setUserLogOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserLogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/modules/user/service/user.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Logs out the current user.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/service/user.service.ts:35\n                        \n                    \n\n            \n                \n                    The authentication service for handling user authentication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                \n                    \n                        Default value : inject(DOCUMENT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/service/user.service.ts:41\n                        \n                    \n\n            \n                \n                    The document object representing the DOM document.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/service/user.service.ts:23\n                        \n                    \n\n            \n                \n                    The HttpClient instance for making HTTP requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserFacade\n\n                    \n                \n                \n                    \n                        Default value : inject(UserFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/service/user.service.ts:29\n                        \n                    \n\n            \n                \n                    The user facade service for managing user state.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, map, of, tap } from \"rxjs\";\nimport { Auth0Error, UserModel } from \"../models/user.model\";\nimport { AuthService, User } from \"@auth0/auth0-angular\";\nimport { UserFacade } from \"../store/user.facade\";\nimport { DOCUMENT } from \"@angular/common\";\nexport type ApiResponse = {\n  type: 'success' | 'error',\n  handler: string ,\n  value: T\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n\n/**\n * The HttpClient instance for making HTTP requests.\n * @type {HttpClient}\n */\n  private http: HttpClient = inject(HttpClient);\n\n/**\n * The user facade service for managing user state.\n * @type {UserFacade}\n */\n  private userFacade: UserFacade = inject(UserFacade);\n\n/**\n * The authentication service for handling user authentication.\n * @type {AuthService}\n */\n  public authService: AuthService = inject(AuthService);\n\n/**\n * The document object representing the DOM document.\n * @type {Document}\n */\n  private document: Document = inject(DOCUMENT);\n\n/**\n * Logs in a user.\n * @param {UserModel} user The user to be logged in.\n * @returns {Observable} An observable of the logged-in user.\n */\n  public login(user: UserModel): Observable {\n    return of(user);\n  }\n\n\n  /**\n * Sets user information after successful login.\n * @param {User} user The user object containing information from the authentication provider.\n * @returns {void}\n */\npublic setUserInfo(user: User): void {\n  const userInfo: UserModel = {\n    given_name: user.given_name ?? '',\n    family_name: user.family_name ?? '',\n    nickname: user.nickname ?? '',\n    name: user.name ?? '',\n    picture: user.picture ?? '',\n    updated_at: user.updated_at ?? '',\n    email: user.email ?? '',\n    email_verified: user.email_verified ?? false,\n    sub: user.sub ?? ''\n  };\n  this.userFacade.login(userInfo);\n}\n\n/**\n * Logs out the current user.\n * @returns {void}\n */\npublic setUserLogOut(): void {\n  localStorage.removeItem('token');\n  this.authService.logout({ logoutParams: { returnTo: this.document.location.origin } });\n}\n\n/**\n * Handles user authentication error.\n * @param {Auth0Error} error The error object returned from the authentication service.\n * @returns {void}\n */\npublic setUserError(error: Auth0Error): void {\n  // Redirects user to login page if there's an authentication error\n  this.authService.loginWithRedirect();\n  // Logs the error to the console\n  console.error('Auth_0 error:::', error);\n  // TODO: Add error page in case we need a dedicated UI\n}\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modules/user/store/user.reducer.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the user state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserModel | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserModel | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { UserModel } from '../models/user.model';\nimport { loginSuccess } from './user.actions';\n\n/**\n * Key used to access the user authentication feature state within the store.\n * @type {string}\n */\nexport const authFeatureKey = 'auth';\n\n/**\n * Interface representing the user state.\n */\nexport interface UserState {\n  user: UserModel | null;\n}\n\n/**\n * Initial state for the user feature.\n * @type {UserState}\n */\nconst initialState: UserState = {\n  user: null,\n};\n\n/**\n * Reducer function to handle user-related actions and update the user state accordingly.\n * @type {Reducer}\n */\nexport const userReducer = createReducer(\n  initialState,\n  on(loginSuccess, (state, { user }) => ({ ...state, user })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth0-guard.ts\n            \n            injectable\n            Auth0_Guard\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/api.interceptor.ts\n            \n            function\n            modifyReq\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/api.interceptor.ts\n            \n            function\n            modifyUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/api.interceptor.ts\n            \n            variable\n            apiInterceptor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/models/user.model.ts\n            \n            interface\n            Auth0Error\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/models/user.model.ts\n            \n            interface\n            UserModel\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.actions.ts\n            \n            variable\n            login\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.actions.ts\n            \n            variable\n            loginSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.effects.ts\n            \n            injectable\n            UserEffects\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.reducer.ts\n            \n            interface\n            UserState\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.reducer.ts\n            \n            variable\n            authFeatureKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.reducer.ts\n            \n            variable\n            initialState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.reducer.ts\n            \n            variable\n            userReducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.selectors.ts\n            \n            variable\n            getUserFeature\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.selectors.ts\n            \n            variable\n            user$\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/user-login-system/user-login-system.component.ts\n            \n            component\n            UserLoginSystemComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/user-login-system/user-login-system.component.ts\n            \n            variable\n            UI_USER_LOGIN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/providers/auth0.providers.ts\n            \n            variable\n            auth0Providers\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/libraries/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/libraries/components/card/card.component.ts\n            \n            variable\n            CARD_DIRECTIVES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/libraries/components/chip-set/chip-set.component.ts\n            \n            component\n            ChipsetComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/libraries/components/chip-set/chip-set.component.ts\n            \n            variable\n            UI_CHIPSET\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/libraries/components/chip/chip.component.ts\n            \n            component\n            ChipComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/libraries/components/cluster/cluster.component.ts\n            \n            component\n            ClusterComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/libraries/components/cluster/cluster.component.ts\n            \n            variable\n            CLUSTER_DIRECTIVES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/libraries/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/libraries/components/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/libraries/components/modal/modal.component.ts\n            \n            variable\n            UI_MODAL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/libraries/directives/tooltip.directive.ts\n            \n            directive\n            TooltipDirective\n            \n                83 %\n                (15/18)\n            \n        \n        \n            \n                \n                src/app/libraries/models/card.model.ts\n            \n            interface\n            CardConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/libraries/models/card.model.ts\n            \n            interface\n            CardFooter\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/libraries/models/card.model.ts\n            \n            interface\n            CardHeader\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/libraries/models/chip.model.ts\n            \n            interface\n            ChipConfig\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/libraries/models/chipset.model.ts\n            \n            interface\n            ChipsetConfig\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/libraries/models/chipset.model.ts\n            \n            interface\n            ChipsetContent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/libraries/models/chipset.model.ts\n            \n            interface\n            ChipsetHeader\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/libraries/models/cluster.model.ts\n            \n            interface\n            ClusterConfig\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/libraries/models/mitre-attack.model.ts\n            \n            interface\n            MitreAttackConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/libraries/models/mitre-attack.model.ts\n            \n            interface\n            MitreAttackFooter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/libraries/models/mitre-attack.model.ts\n            \n            interface\n            MitreAttackHeader\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/libraries/models/mitre-attack.model.ts\n            \n            interface\n            MitreAttackInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/libraries/models/mitre-attack.model.ts\n            \n            interface\n            MitreCells\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/libraries/models/mitre-attack.model.ts\n            \n            interface\n            MitreCellsContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/libraries/models/modal.model.ts\n            \n            interface\n            ModalConfig\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/libraries/models/modal.model.ts\n            \n            interface\n            ModalContent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/deas/deas.component.ts\n            \n            component\n            DeasComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/deas.component.ts\n            \n            variable\n            MODULES_CORE_DEAS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/hub.component.ts\n            \n            component\n            HubComponent\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/hub.component.ts\n            \n            variable\n            DIRECTIVES_HUB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/hub.component.ts\n            \n            variable\n            MODULES_HUB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/hub.component.ts\n            \n            variable\n            UI_KIT_HUB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/services/hub.service.ts\n            \n            injectable\n            HubService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.actions.ts\n            \n            variable\n            getMitreData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.actions.ts\n            \n            variable\n            getMitreDataSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.effects.ts\n            \n            injectable\n            HubEffects\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.facade.ts\n            \n            injectable\n            HubFacade\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.reducer.ts\n            \n            interface\n            HubState\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.reducer.ts\n            \n            variable\n            HubListFeatureKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.reducer.ts\n            \n            variable\n            hubReducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.reducer.ts\n            \n            variable\n            initialState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.selectors.ts\n            \n            variable\n            hubFeature\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.selectors.ts\n            \n            variable\n            mitreData$\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/mitre-attack/mitre-attack.component.ts\n            \n            component\n            MitreAttackComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/modules/deas/mitre-attack/mitre-attack.component.ts\n            \n            variable\n            UI_MITRE_ATTACK\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/mitre-attack/services/mitre-attack.service.ts\n            \n            injectable\n            MitreAttackService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/constants/endpoints.ts\n            \n            variable\n            ENDPOINTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/constants/endpoints.ts\n            \n            variable\n            VERSIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/constants/groupHackers.model.ts\n            \n            variable\n            HackersMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/constants/image.path.ts\n            \n            variable\n            IMAGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/model/mitre.model.ts\n            \n            interface\n            Definition\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/shared/model/mitre.model.ts\n            \n            interface\n            ExternalReference\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/model/mitre.model.ts\n            \n            interface\n            KillChainPhase\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/shared/model/mitre.model.ts\n            \n            interface\n            MitreAttackData\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/model/mitre.model.ts\n            \n            interface\n            MitreAttackInfo\n            \n                2 %\n                (1/46)\n            \n        \n        \n            \n                \n                src/app/shared/routes/route.model.ts\n            \n            variable\n            APP\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/routes/route.model.ts\n            \n            variable\n            APP_CALLBACK\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/routes/route.model.ts\n            \n            variable\n            ROUTE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.test.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @auth0/auth0-angular : ^2.2.3\n        \n            @ng-bootstrap/ng-bootstrap : ^16.0.0\n        \n            @ngrx/effects : ^17.2.0\n        \n            @ngrx/store : ^17.2.0\n        \n            @ngrx/store-devtools : ^17.2.0\n        \n            @popperjs/core : ^2.11.8\n        \n            angular-highcharts : ^16.0.0\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CardAction   (src/.../card.model.ts)\n                        \n                        \n                            CardIcon   (src/.../card.model.ts)\n                        \n                        \n                            HackerType   (src/.../groupHackers.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/libraries/models/card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CardAction\n                    \n                \n                    \n                        \n                            Enum representing different actions for a card component.\n\n                        \n                    \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 SETTINGS\n                            \n                        \n                        \n                            \n                                Value : settings\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CardIcon\n                    \n                \n                    \n                        \n                            Enum representing different icons for a card component.\n\n                        \n                    \n                        \n                            \n                                 info\n                            \n                        \n                        \n                            \n                                Value : icon-info\n                            \n                        \n                        \n                            \n                                 settings\n                            \n                        \n                        \n                            \n                                Value : icon-settings\n                            \n                        \n                        \n                            \n                                 vrius\n                            \n                        \n                        \n                            \n                                Value : icon-virus\n                            \n                        \n            \n        \n\n    src/app/shared/constants/groupHackers.model.ts\n    \n        \n            \n                \n                    \n                        \n                        HackerType\n                    \n                \n                        \n                            \n                                 APT28\n                            \n                        \n                        \n                            \n                                Value : APT28\n                            \n                        \n                        \n                            \n                                 APT29\n                            \n                        \n                        \n                            \n                                Value : APT29\n                            \n                        \n                        \n                            \n                                 GENERIC\n                            \n                        \n                        \n                            \n                                Value : GENERIC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            modifyReq   (src/.../api.interceptor.ts)\n                        \n                        \n                            modifyUrl   (src/.../api.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/interceptors/api.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        modifyReq\n                        \n                    \n                \n            \n            \n                \nmodifyReq(request: HttpRequest, token: string)\n                \n            \n\n\n\n\n            \n                \n                        Modifies the request by adding authorization token to headers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HTTP request to be modified.\n\n                                            \n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The authorization token.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpRequest<>\n\n                        \n                            \n                                The modified HTTP request.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyUrl\n                        \n                    \n                \n            \n            \n                \nmodifyUrl(url: string)\n                \n            \n\n\n\n\n            \n                \n                        Modifies the URL of the request if necessary.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The original URL of the request.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The modified URL.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDeasDemo\nAn application that organizes and displays the tactics, techniques, and subtechniques of the Mitre ATT&CK framework, including usage relationships with various malicious actors (e.g., APT28). This application allows filtering and visualization of data based on specific threat actor groups, making threat analysis easier.\nDemo References\n(https://attack.mitre.org/)\n(https://attack.mitre.org/groups/)\n(https://mitre-attack.github.io/attack-navigator//#layerURL=https%3A%2F%2Fattack.mitre.org%2Fgroups%2FG0007%2FG0007-enterprise-layer.json)\nJSON data\nhttps://github.com/mitre/cti/blob/master/enterprise-attack/enterprise-attack.json\nFigma Output\nhttps://www.figma.com/proto/526imlMQDt7KkcfgAeKcd5/DEAS---AI-SOC-FW?page-id=0%3A1&node-id=977-49407&viewport=-9649%2C-10203%2C0.3&t=l5l2apWZhioSA6RT-1&scaling=scale-down&starting-point-node-id=722%3A60720\nDeasDemo Project\nThis project was generated with Angular CLI version 17.\nOpen API Mocker\nTo install the open-api-mocker package globally, run the following command:\nnpm i -g open-api-mocker\nOpen API Start Mock Server\nTo start the mock server run the server-start script:\nnpm run server start\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Christian Castro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    25 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiResponse   (src/.../user.service.ts)\n                        \n                        \n                            Auth0ErrorType   (src/.../user.model.ts)\n                        \n                        \n                            ExtendedMitreAttackInfo   (src/.../hub.models.ts)\n                        \n                        \n                            MitreType   (src/.../mitre.model.ts)\n                        \n                        \n                            RelationshipType   (src/.../mitre.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/modules/user/service/user.service.ts\n    \n    \n        \n            \n                \n                    \n                    ApiResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/modules/user/models/user.model.ts\n    \n    \n        \n            \n                \n                    \n                    Auth0ErrorType\n                \n            \n            \n                \n                    Type representing possible error types from Auth0.\n\n                \n            \n            \n                \n                            \"login_required\" | \"consent_required\" | \"interaction_required\"\n\n                \n            \n        \n    \n    src/app/modules/deas/hub/models/hub.models.ts\n    \n    \n        \n            \n                \n                    \n                    ExtendedMitreAttackInfo\n                \n            \n            \n                \n                    Represents extended information for a Mitre Attack.\nExtends the base MitreAttackInfo type.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/shared/model/mitre.model.ts\n    \n    \n        \n            \n                \n                    \n                    MitreType\n                \n            \n            \n                \n                    Type for Mitre Attack data type.\n\n                \n            \n            \n                \n                        \"bundle\" | \"marking-definition\" | \"definition\" | \"x-mitre-matrix\" | \"x-mitre-tactic\" | \"course-of-action\" | \"tool\" | \"attack-pattern\" | \"relationship\" | \"malware\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RelationshipType\n                \n            \n            \n                \n                    Type for Relationship type in Mitre Attack data.\n\n                \n            \n            \n                \n                        \"mitigates\" | \"uses\" | \"detects\" | \"subtechnique-of\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiInterceptor   (src/.../api.interceptor.ts)\n                        \n                        \n                            APP   (src/.../route.model.ts)\n                        \n                        \n                            APP_CALLBACK   (src/.../route.model.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            auth0Providers   (src/.../auth0.providers.ts)\n                        \n                        \n                            authFeatureKey   (src/.../user.reducer.ts)\n                        \n                        \n                            CARD_DIRECTIVES   (src/.../card.component.ts)\n                        \n                        \n                            CLUSTER_DIRECTIVES   (src/.../cluster.component.ts)\n                        \n                        \n                            DIRECTIVES_HUB   (src/.../hub.component.ts)\n                        \n                        \n                            ENDPOINTS   (src/.../endpoints.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            getMitreData   (src/.../hub.actions.ts)\n                        \n                        \n                            getMitreDataSuccess   (src/.../hub.actions.ts)\n                        \n                        \n                            getUserFeature   (src/.../user.selectors.ts)\n                        \n                        \n                            HackersMock   (src/.../groupHackers.model.ts)\n                        \n                        \n                            hubFeature   (src/.../hub.selectors.ts)\n                        \n                        \n                            HubListFeatureKey   (src/.../hub.reducer.ts)\n                        \n                        \n                            hubReducer   (src/.../hub.reducer.ts)\n                        \n                        \n                            IMAGE   (src/.../image.path.ts)\n                        \n                        \n                            initialState   (src/.../user.reducer.ts)\n                        \n                        \n                            initialState   (src/.../hub.reducer.ts)\n                        \n                        \n                            login   (src/.../user.actions.ts)\n                        \n                        \n                            loginSuccess   (src/.../user.actions.ts)\n                        \n                        \n                            mitreData$   (src/.../hub.selectors.ts)\n                        \n                        \n                            MODULES_CORE_DEAS   (src/.../deas.component.ts)\n                        \n                        \n                            MODULES_HUB   (src/.../hub.component.ts)\n                        \n                        \n                            ROUTE   (src/.../route.model.ts)\n                        \n                        \n                            UI_CHIPSET   (src/.../chip-set.component.ts)\n                        \n                        \n                            UI_KIT_HUB   (src/.../hub.component.ts)\n                        \n                        \n                            UI_MITRE_ATTACK   (src/.../mitre-attack.component.ts)\n                        \n                        \n                            UI_MODAL   (src/.../modal.component.ts)\n                        \n                        \n                            UI_USER_LOGIN   (src/.../user-login-system.component.ts)\n                        \n                        \n                            user$   (src/.../user.selectors.ts)\n                        \n                        \n                            userReducer   (src/.../user.reducer.ts)\n                        \n                        \n                            VERSIONS   (src/.../endpoints.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/interceptors/api.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  request: HttpRequest,\n  next: HttpHandlerFn\n): Observable> => {\n  const userFacade = inject(UserFacade);\n  const authService = inject(AuthService);\n\n  return authService.getAccessTokenSilently().pipe(\n    switchMap((token) => {\n      if (!token) {\n        return throwError(() => new Error('Auth0 Token not present'));\n      }\n      return next(modifyReq(request, token));\n    }),\n    catchError((err) => {\n      // Handle errors\n      if (err.error) {\n        return throwError(() => new Error('network error'));\n      }\n      return throwError(() => err);\n    })\n  );\n}\n                    \n                \n\n            \n                \n                    Interceptor for API requests to add authorization token.\n\n                \n            \n\n        \n    \n\n    src/app/shared/routes/route.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Domain for the main application.\n   * @type {string}\n   */\n  DEAS: 'deas',\n\n  /**\n   * Domain for testing purposes.\n   * @type {string}\n   */\n  TEST: 'test',\n}\n                    \n                \n\n            \n                \n                    Constants related to the application routes and domains.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        APP_CALLBACK\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Callback domain for OAuth.\n   * @type {string}\n   */\n  AUTH0: 'oauth/callback',\n}\n                    \n                \n\n            \n                \n                    Constants related to application callback domains.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Route for user authentication.\n   * @type {string}\n   */\n  USER_AUTH: 'user-auth',\n\n  /**\n   * Route for the Hub feature.\n   * @type {string}\n   */\n  HUB: 'hub',\n}\n                    \n                \n\n            \n                \n                    Constants related to application routes.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    /**\n     * Provides authentication services using Auth0.\n     * @type {Provider[]}\n     */\n    auth0Providers,\n\n    /**\n     * Configures the application's routes.\n     * @type {Provider}\n     */\n    provideRouter(routes),\n\n    /**\n     * Provides HTTP client services for making HTTP requests.\n     * @type {Provider}\n     */\n    provideHttpClient(),\n\n    // Uncomment the following line to provide HTTP client with an API interceptor.\n    // provideHttpClient(withInterceptors([apiInterceptor])),\n\n    /**\n     * Configures the application's state management using NgRx store.\n     * @type {Provider}\n     */\n    provideStore({ auth: userReducer, hub: hubReducer }),\n\n    /**\n     * Configures the effects for the application's state management.\n     * @type {Provider}\n     */\n    provideEffects([UserEffects, HubEffects]),\n\n    /**\n     * Configures the Redux DevTools for debugging the application's state.\n     * @type {Provider}\n     */\n    provideStoreDevtools(),\n\n    /**\n     * Provides animation services for the application.\n     * @type {Provider}\n     */\n    provideAnimations(),\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuration object for the application.\n\n                \n            \n\n        \n    \n\n    src/app/core/providers/auth0.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        auth0Providers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : importProvidersFrom(\n  AuthModule.forRoot({\n    domain: environment.auth0.domain,\n    clientId: environment.auth0.clientId,\n    authorizationParams: {\n      redirect_uri: `${environment.deployUrl}/${environment.auth0.redirect_uri}`\n    },\n  })\n)\n                    \n                \n\n            \n                \n                    Providers for configuring Auth0 authentication.\n\n                \n            \n\n        \n    \n\n    src/app/core/modules/user/store/user.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth'\n                    \n                \n\n            \n                \n                    Key used to access the user authentication feature state within the store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: null,\n}\n                    \n                \n\n            \n                \n                    Initial state for the user feature.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(loginSuccess, (state, { user }) => ({ ...state, user })),\n)\n                    \n                \n\n            \n                \n                    Reducer function to handle user-related actions and update the user state accordingly.\n\n                \n            \n\n        \n    \n\n    src/app/libraries/components/card/card.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CARD_DIRECTIVES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  TooltipDirective\n]\n                    \n                \n\n            \n                \n                    Array of modules used in the Card component.\n\n                \n            \n\n        \n    \n\n    src/app/libraries/components/cluster/cluster.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CLUSTER_DIRECTIVES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  TooltipDirective\n]\n                    \n                \n\n            \n                \n                    Array containing cluster directives.\n\n                \n            \n\n        \n    \n\n    src/app/modules/deas/hub/hub.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DIRECTIVES_HUB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  TooltipDirective\n]\n                    \n                \n\n            \n                \n                    Array of directives used in the Hub component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MODULES_HUB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  RouterModule,\n  CommonModule\n]\n                    \n                \n\n            \n                \n                    Array of modules used in the hub component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UI_KIT_HUB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  MitreAttackComponent,\n  LoaderComponent,\n  CardComponent,\n  ClusterComponent\n]\n                    \n                \n\n            \n                \n                    Array containing components related to the UI kit hub.\n\n                \n            \n\n        \n    \n\n    src/app/shared/constants/endpoints.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Endpoint for Mitre API.\n   */\n  MITRE: `${VERSIONS.V1}/mitre`,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VERSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Version 1 of the API.\n   */\n  V1: 'v1',\n}\n                    \n                \n\n            \n                \n                    Constant containing API version endpoints.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Specifies whether the application is in production mode.\n   * @type {boolean}\n   */\n  production: true,\n\n  /**\n   * The base URL for deployment.\n   * @type {string}\n   */\n  deployUrl: '',\n\n  /**\n   * The base URL for the API.\n   * @type {string}\n   */\n  apiUrl: '',\n\n  /**\n   * Configuration for Auth0 authentication.\n   * @type {Object}\n   * @namespace Auth0Config\n   */\n  auth0: {\n    /**\n     * The Auth0 domain.\n     * @type {string}\n     */\n    domain: '',\n\n    /**\n     * The Auth0 client ID.\n     * @type {string}\n     */\n    clientId: '',\n\n    /**\n     * The redirect URI after authentication.\n     * @type {string}\n     */\n    redirect_uri: 'oauth/callback',\n  }\n}\n                    \n                \n\n            \n                \n                    Configuration for the Angular application environment.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Specifies whether the application is in production mode.\n   * @type {boolean}\n   */\n  production: false,\n\n  /**\n   * The base URL for deployment.\n   * @type {string}\n   */\n  deployUrl: '',\n\n  /**\n   * The base URL for the API.\n   * @type {string}\n   */\n  apiUrl: '',\n\n  /**\n   * Configuration for Auth0 authentication.\n   * @type {Object}\n   * @namespace Auth0Config\n   */\n  auth0: {\n    /**\n     * The Auth0 domain.\n     * @type {string}\n     */\n    domain: 'dev-756oxaa4sgzh74rf.us.auth0.com',\n\n    /**\n     * The Auth0 client ID.\n     * @type {string}\n     */\n    clientId: 'Jm23xL7WtU0ozm8Sb8lITLFyMWs38a70',\n\n    /**\n     * The redirect URI after authentication.\n     * @type {string}\n     */\n    redirect_uri: 'oauth/callback',\n  }\n}\n                    \n                \n\n            \n                \n                    Configuration for the Angular application environment.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Specifies whether the application is in production mode.\n   * @type {boolean}\n   */\n  production: false,\n\n  /**\n   * The base URL for deployment.\n   * @type {string}\n   */\n  deployUrl: 'http://localhost:4200',\n\n  /**\n   * The base URL for the API.\n   * @type {string}\n   */\n  apiUrl: 'http://localhost:1234',\n\n  /**\n   * Configuration for Auth0 authentication.\n   * @type {Object}\n   * @namespace Auth0Config\n   */\n  auth0: {\n    /**\n     * The Auth0 domain.\n     * @type {string}\n     */\n    domain: 'dev-756oxaa4sgzh74rf.us.auth0.com',\n\n    /**\n     * The Auth0 client ID.\n     * @type {string}\n     */\n    clientId: 'Jm23xL7WtU0ozm8Sb8lITLFyMWs38a70',\n\n    /**\n     * The redirect URI after authentication.\n     * @type {string}\n     */\n    redirect_uri: 'oauth/callback',\n  }\n}\n                    \n                \n\n            \n                \n                    Configuration for the Angular application environment.\n\n                \n            \n\n        \n    \n\n    src/app/modules/deas/hub/store/hub.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getMitreData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Get Mitre Data] Get Mitre Data',\n  props()\n)\n                    \n                \n\n            \n                \n                    Action to initiate the retrieval of Mitre data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMitreDataSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Get Mitre Data Success] Get Mitre Data success',\n  props()\n)\n                    \n                \n\n            \n                \n                    Action dispatched when Mitre data retrieval is successful.\n\n                \n            \n\n        \n    \n\n    src/app/core/modules/user/store/user.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUserFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(authFeatureKey)\n                    \n                \n\n            \n                \n                    Selector function to retrieve the user feature state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(getUserFeature, ({ user }) => user)\n                    \n                \n\n            \n                \n                    Selector function to retrieve the current user from the user feature state.\n\n                \n            \n\n        \n    \n\n    src/app/shared/constants/groupHackers.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HackersMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  [HackerType.APT28] : {\n    title: 'Mitre Attack',\n    name: 'APT28',\n    external_id: 'G0007',\n    aliases:\n    {\n      header:[\n        {\n          label: 'Nome',\n          size:'col-6 col-md-4 col-lg-1'\n        },\n        {\n          label: 'ID Esterno',\n          size:'col-6 col-md-4 col-lg-1'\n\n        },\n        {\n          label: 'Alias',\n          size:'col-6 col-md-4 col-lg-10'\n        }\n      ],\n      content:[\n        {\n          size:'col-6 col-md-4 col-lg-1',\n          chips:[\n            {\n              label: 'APT28',\n              isDark: true,\n            }\n          ]\n        },\n        {\n          size:'col-6 col-md-4 col-lg-1',\n          chips:[\n            {\n              label: 'G0007',\n              isDark: true,\n            }\n          ]\n        },\n        {\n          size:'col-6 col-md-4 col-lg-10',\n          class: 'd-lg-flex gap-12',\n          chips:[\n            {\n              label: 'Iron Twilight-1',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-2',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-3',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-4',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-5',\n              class: 'my-2 my-lg-0'\n            }\n          ]\n        },\n\n      ]\n    },\n    description: \" APT28  is a threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) 85th Main Special Service Center (GTsSS) military unit 26165.(Citation: NSA/FBI Drovorub August 2020)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021) This group has been active since at least 2004.(Citation: DOJ GRU Indictment Jul 2018)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Crowdstrike DNC June 2016)(Citation: FireEye APT28)(Citation: SecureWorks TG-4127)(Citation: FireEye  APT28 January 2017)(Citation: GRIZZLY STEPPE JAR)(Citation: Sofacy DealersChoice)(Citation: Palo Alto Sofacy 06-2018)(Citation: Symantec APT28 Oct 2018)(Citation: ESET Zebrocy May 2019) APT28 reportedly compromised the Hillary Clinton campaign, the Democratic National Committee, and the Democratic Congressional Campaign Committee in 2016 in an attempt to interfere with the U.S. presidential election. (Citation: Crowdstrike DNC June 2016) In 2018, the US indicted five GRU Unit 26165 officers associated with APT28 for cyber operations (including close-access operations) conducted between 2014 and 2018 against the World Anti-Doping Agency (WADA), the US Anti-Doping Agency, a US nuclear facility, the Organization for the Prohibition of Chemical Weapons (OPCW), the Spiez Swiss Chemicals Laboratory, and other organizations.(Citation: US District Court Indictment GRU Oct 2018) Some of these were conducted with the assistance of GRU Unit 74455, which is also referred to as Sandworm Team.\",\n    link: 'https://attack.mitre.org/groups/G0007/',\n    ipAdresss: '139.5.177.205'\n  },\n\n  [HackerType.APT29]: {\n    title: 'Mitre Attack',\n    name: 'APT29',\n    external_id: 'G0008',\n    aliases:\n    {\n      header:[\n        {\n          label: 'Nome',\n          size:'col-6 col-md-4 col-lg-1'\n        },\n        {\n          label: 'ID Esterno',\n          size:'col-6 col-md-4 col-lg-1'\n\n        },\n        {\n          label: 'Alias',\n          size:'col-6 col-md-4 col-lg-10'\n        }\n      ],\n      content:[\n        {\n          size:'col-6 col-md-4 col-lg-1',\n          chips:[\n            {\n              label: 'APT29',\n              isDark: true,\n            }\n          ]\n        },\n        {\n          size:'col-6 col-md-4 col-lg-1',\n          chips:[\n            {\n              label: 'G0008',\n              isDark: true,\n            }\n          ]\n        },\n        {\n          size:'col-6 col-md-4 col-lg-10',\n          class: 'd-lg-flex gap-12',\n          chips:[\n            {\n              label: 'Iron Twilight-1',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-2',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-3',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-4',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-5',\n              class: 'my-2 my-lg-0'\n            }\n          ]\n        },\n\n      ]\n    },\n    description: \"APT29 is threat group that has been attributed to Russia's Foreign Intelligence Service (SVR).[1][2] They have operated since at least 2008, often targeting government networks in Europe and NATO member countries, research institutes, and think tanks. APT29 reportedly compromised the Democratic National Committee starting in the summer of 2015.[3][4][5][6]. In April 2021, the US and UK governments attributed the SolarWinds Compromise to the SVR; public statements included citations to APT29, Cozy Bear, and The Dukes.[7][8] Industry reporting also referred to the actors involved in this campaign as UNC2452, NOBELIUM, StellarParticle, Dark Halo, and SolarStorm.[9][10][11][12][13][14]\",\n    link: 'https://attack.mitre.org/groups/G0007/',\n    ipAdresss: '139.5.177.205'\n  },\n [HackerType.GENERIC]:{\n    title: 'Mitre Attack',\n    name: 'GENERIC',\n    external_id: 'G0000',\n    aliases:\n    {\n      header:[\n        {\n          label: 'Nome',\n          size:'col-6 col-md-4 col-lg-1'\n        },\n        {\n          label: 'ID Esterno',\n          size:'col-6 col-md-4 col-lg-1'\n\n        },\n        {\n          label: 'Alias',\n          size:'col-6 col-md-4 col-lg-10'\n        }\n      ],\n      content:[\n        {\n          size:'col-6 col-md-4 col-lg-1',\n          chips:[\n            {\n              label: 'GENERIC',\n              isDark: true,\n            }\n          ]\n        },\n        {\n          size:'col-6 col-md-4 col-lg-1',\n          chips:[\n            {\n              label: 'G0000',\n              isDark: true,\n            }\n          ]\n        },\n        {\n          size:'col-6 col-md-4 col-lg-10',\n          class: 'd-lg-flex gap-12',\n          chips:[\n            {\n              label: 'Generic-1',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Generic-2',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Generic-3',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Generic-4',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Generic-5',\n              class: 'my-2 my-lg-0'\n            }\n          ]\n        },\n\n      ]\n    },\n    description: \" GENERIC  Lorem ipsum data Lorem ipsum data  Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data .\",\n    link: '#',\n    ipAdresss: '139.5.174.205'\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/deas/hub/store/hub.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hubFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(HubListFeatureKey)\n                    \n                \n\n            \n                \n                    Selector to retrieve the Hub feature state from the NgRx store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mitreData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  hubFeature,\n  ({ data }) => data\n)\n                    \n                \n\n            \n                \n                    Selector to retrieve the Mitre data from the Hub feature state.\n\n                \n            \n\n        \n    \n\n    src/app/modules/deas/hub/store/hub.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HubListFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'hub'\n                    \n                \n\n            \n                \n                    The key for the Hub feature state within the NgRx store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hubReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(getMitreData, (state, { filter }) => ({ ...state, data: initialState.data, filter: filter })),\n  on(getMitreDataSuccess, (state, { mitreAttackData, filter }) => ({ ...state, data: mitreAttackData, filter: filter })),\n)\n                    \n                \n\n            \n                \n                    Reducer function for the Hub feature.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HubState\n\n                    \n                \n                \n                    \n                        Default value : {\n  data: null,\n  filter: HackerType.APT28 // Default hacker type filter\n}\n                    \n                \n\n            \n                \n                    Initial state for the Hub feature.\n\n                \n            \n\n        \n    \n\n    src/app/shared/constants/image.path.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IMAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  CARD_POLYGON: 'assets/images/card/polygon.svg'\n}\n                    \n                \n\n            \n                \n                    Constant containing image paths.\n\n                \n            \n\n        \n    \n\n    src/app/core/modules/user/store/user.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth 0 User] Login',\n  props()\n)\n                    \n                \n\n            \n                \n                    Action to initiate the user login process.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth 0 User] Login Success',\n  props()\n)\n                    \n                \n\n            \n                \n                    Action dispatched when user login is successful.\n\n                \n            \n\n        \n    \n\n    src/app/modules/deas/deas.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MODULES_CORE_DEAS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  RouterModule,\n  CommonModule\n]\n                    \n                \n\n            \n                \n                    Array of modules used in the Deas component.\n\n                \n            \n\n        \n    \n\n    src/app/libraries/components/chip-set/chip-set.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UI_CHIPSET\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ChipComponent\n]\n                    \n                \n\n            \n                \n                    Array containing UI chipset components.\n\n                \n            \n\n        \n    \n\n    src/app/modules/deas/mitre-attack/mitre-attack.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UI_MITRE_ATTACK\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ChipComponent,\n  CardComponent,\n  ChipsetComponent,\n  ClusterComponent,\n  LoaderComponent,\n]\n                    \n                \n\n            \n                \n                    Array containing components related to the UI kit Mitre Attack Component.\n\n                \n            \n\n        \n    \n\n    src/app/libraries/components/modal/modal.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UI_MODAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  CardComponent\n]\n                    \n                \n\n            \n                \n                    Array containing UI modal components.\n\n                \n            \n\n        \n    \n\n    src/app/core/modules/user/user-login-system/user-login-system.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UI_USER_LOGIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  LoaderComponent\n]\n                    \n                \n\n            \n                \n                    Array of components used in the Deas component.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
