var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.561,1,1.468]],["body/components/AppComponent.html",[0,1.04,1,2.633,2,2.272,3,0.26,4,0.26,5,1.985,6,1.88,7,1.985,8,0.26,9,3.898,10,0.682,11,3.721,12,3.44,13,1.88,14,2.97,15,2.958,16,2.395,17,2.158,18,2.529,19,4.432,20,2.529,21,5.782,22,2.674,23,5.782,24,1.079,25,0.019,26,1.2,27,2.521,28,0.288,29,0.607,30,1.985,31,2.395,32,2.395,33,1.611,34,2.93,35,1.985,36,1.068,37,1.985,38,1.694,39,1.985,40,1.694,41,1.985,42,1.694,43,1.2,44,1.985,45,1.694,46,1.985,47,1.784,48,1.985,49,1.784,50,1.985,51,1.694,52,1.985,53,1.611,54,1.037,55,1.985,56,1.694,57,1.985,58,1.784,59,1.323,60,1.532,61,1.985,62,1.784,63,1.611,64,1.88,65,1.985,66,0.014,67,0.014]],["title/interfaces/Auth0Error.html",[68,0.107,69,2.222]],["body/interfaces/Auth0Error.html",[3,0.223,4,0.223,8,0.223,10,0.887,25,0.019,28,0.375,36,1.06,66,0.013,67,0.013,68,0.18,69,3.11,70,0.846,71,2.71,72,2.095,73,4.385,74,4.49,75,3.785,76,0.2,77,0.398,78,1.514,79,5.421,80,5.824,81,1.359,82,0.388,83,4.49,84,4.49,85,1.907,86,5.464,87,3.342,88,2.98,89,3.342,90,2.98,91,4.004,92,3.342,93,2.026,94,4.004,95,3.342,96,3.342,97,3.342,98,3.342,99,3.342,100,2.98,101,4.522,102,4.49,103,2.98,104,2.026,105,3.342,106,2.417,107,2.98,108,3.342,109,2.98,110,2.98,111,4.49,112,2.98,113,2.71,114,2.98,115,2.98,116,2.98,117,2.98]],["title/injectables/Auth0_Guard.html",[118,1.2,119,2.861]],["body/injectables/Auth0_Guard.html",[3,0.228,4,0.228,8,0.228,10,0.598,11,2.21,24,1.273,25,0.019,26,1.052,27,2.21,28,0.253,29,0.532,36,0.668,59,1.856,66,0.013,67,0.013,75,3.828,76,0.204,77,0.404,78,0.955,82,0.341,104,3.317,118,1.705,119,4.065,120,1.95,121,5.47,122,3.418,123,2.016,124,5.971,125,2.761,126,5.591,127,2.454,128,5.971,129,3.979,130,6.635,131,3.345,132,6.635,133,1.919,134,3.979,135,4.558,136,6.369,137,5.227,138,1.648,139,2.086,140,3.156,141,4.065,142,4.436,143,1.883,144,1.097,145,3.696,146,3.979,147,3.157,148,2.321,149,4.558,150,3.979,151,2.764,152,4.065,153,2.072,154,3.979,155,3.048,156,1.95,157,2.772,158,2.367,159,2.072,160,3.979,161,3.418,162,2.367,163,3.979,164,3.979,165,3.418,166,3.418,167,2.198,168,2.229,169,2.772,170,3.979,171,2.601,172,5.307,173,3.979]],["title/components/CardComponent.html",[0,0.561,38,1.394]],["body/components/CardComponent.html",[0,1.073,1,1.532,2,2.057,3,0.224,4,0.224,5,1.704,6,1.614,7,1.704,8,0.224,10,0.586,13,1.614,14,2.913,15,2.897,16,2.168,17,2.205,18,2.289,20,2.289,22,2.42,24,1.102,25,0.019,26,1.031,28,0.247,29,0.521,30,1.704,31,2.168,32,2.168,33,1.383,34,2.762,35,1.704,36,0.992,37,1.704,38,2.358,39,1.704,40,1.455,41,1.704,42,1.455,43,1.031,44,1.704,45,1.455,46,1.704,47,1.532,48,1.704,49,1.532,50,1.704,51,1.455,52,1.704,53,1.383,54,0.89,55,1.704,56,1.455,57,1.704,58,1.532,59,1.136,60,1.316,61,1.704,62,1.532,63,2.097,64,1.614,65,1.704,66,0.013,67,0.013,76,0.2,77,0.399,82,0.269,123,1.995,133,1.682,174,2.985,175,3.355,176,3.081,177,4.525,178,5.233,179,5.233,180,3.031,181,3.113,182,2.714,183,5.233,184,1.995,185,2.164,186,3.897,187,3.347,188,2.42,189,2.318,190,2.164,191,1.383,192,2.714,193,5.233,194,5.233,195,5.233,196,5.233,197,5.233,198,5.233,199,5.233,200,3.645,201,5.233]],["title/interfaces/CardConfig.html",[68,0.107,180,1.634]],["body/interfaces/CardConfig.html",[0,0.993,3,0.379,4,0.225,8,0.225,10,0.59,25,0.019,28,0.42,29,0.704,66,0.013,67,0.013,68,0.169,70,0.854,72,1.867,76,0.202,77,0.401,78,1.262,81,1.25,82,0.377,144,1.087,176,3.272,180,2.301,184,2.344,202,2.518,203,3.368,204,2.563,205,4.235,206,4.235,207,1.939,208,2.182,209,3.13,210,3.529,211,2.003,212,3.93,213,4.132,214,3.009,215,3.009,216,2.18,217,4.413,218,3.664,219,1.817,220,3.803,221,2.736,222,4.413,223,2.736,224,2.736]],["title/interfaces/CardFooter.html",[68,0.107,205,2.395]],["body/interfaces/CardFooter.html",[0,0.979,3,0.374,4,0.216,8,0.216,10,0.566,25,0.019,28,0.413,29,0.684,66,0.013,67,0.013,68,0.166,70,0.818,72,1.814,76,0.193,77,0.39,78,1.562,81,1.269,82,0.381,144,1.057,176,3.279,180,1.647,184,2.198,202,2.414,203,3.37,204,2.383,205,3.992,206,3.722,207,2.139,208,2.091,209,3.995,210,3.874,211,2.36,212,4.087,213,4.678,214,3.916,215,3.916,216,2.118,217,4.338,218,3.561,219,1.741,220,3.722,221,2.623,222,4.338,223,2.623,224,2.623,225,3.042]],["title/interfaces/CardHeader.html",[68,0.107,206,2.395]],["body/interfaces/CardHeader.html",[0,0.985,3,0.376,4,0.22,8,0.22,10,0.577,25,0.019,28,0.416,29,0.904,66,0.013,67,0.013,68,0.167,70,0.834,72,1.837,76,0.197,77,0.395,78,1.572,81,1.309,82,0.378,144,1.396,176,3.275,180,1.678,184,2.212,202,2.459,203,3.192,204,2.551,205,3.758,206,4.023,207,2.148,208,2.876,209,3.08,210,3.487,211,1.979,212,3.899,213,4.083,214,2.938,215,2.938,216,2.145,217,4.371,218,3.606,219,1.774,220,3.758,221,2.672,222,4.371,223,2.672,224,2.672]],["title/components/ChipComponent.html",[0,0.561,40,1.394]],["body/components/ChipComponent.html",[0,1.062,1,1.658,2,2.168,3,0.242,4,0.242,5,1.845,6,1.748,7,1.845,8,0.242,13,1.748,14,2.943,15,2.93,16,2.285,17,2.294,18,1.845,20,2.412,22,2.551,24,1.029,25,0.019,26,1.116,28,0.268,29,0.565,30,1.845,31,2.285,32,2.285,33,1.497,34,2.85,35,1.845,36,1.032,37,1.845,38,1.575,39,1.845,40,2.433,41,1.845,42,1.575,43,1.869,44,1.845,45,1.575,46,1.845,47,1.658,48,1.845,49,1.658,50,1.845,51,1.575,52,1.845,53,1.497,54,0.963,55,1.845,56,1.575,57,1.845,58,1.658,59,1.229,60,1.424,61,1.845,62,1.658,63,1.497,64,1.748,65,1.845,66,0.014,67,0.014,72,1.497,76,0.217,77,0.42,82,0.217,123,2.075,133,1.772,181,3.281,182,2.938,184,2.075,185,2.343,192,2.938,226,3.623,227,5.516,228,5.516,229,3.681,230,5.516,231,4.219,232,5.516,233,5.516,234,5.516]],["title/interfaces/ChipConfig.html",[68,0.107,229,1.945]],["body/interfaces/ChipConfig.html",[3,0.258,4,0.258,8,0.258,25,0.019,28,0.286,29,0.972,43,1.955,66,0.014,67,0.014,68,0.128,70,0.977,76,0.231,77,0.438,78,1.823,81,1.345,82,0.38,104,2.994,106,3.088,141,4.403,207,2.159,208,3.708,209,4.321,229,2.994,235,3.863,236,6.677,237,5.114,238,5.748,239,4.937,240,5.748]],["title/components/ChipsetComponent.html",[0,0.561,42,1.394]],["body/components/ChipsetComponent.html",[0,1.044,1,1.44,2,2.25,3,0.21,4,0.21,5,1.602,6,1.518,7,1.602,8,0.21,10,0.551,13,1.518,14,2.888,15,2.871,16,2.079,17,2.137,18,2.195,20,2.195,22,2.321,24,1.149,25,0.019,26,0.969,28,0.233,29,0.49,30,1.602,31,2.079,32,2.079,33,1.3,34,2.693,35,1.602,36,0.961,37,1.602,38,1.368,39,1.602,40,2.408,41,1.602,42,2.298,43,1.863,44,1.602,45,1.368,46,1.602,47,1.44,48,1.602,49,1.44,50,1.602,51,1.368,52,1.602,53,1.3,54,0.837,55,1.602,56,1.368,57,1.602,58,1.44,59,1.068,60,1.237,61,1.602,62,1.44,63,1.3,64,1.518,65,1.602,66,0.012,67,0.012,72,1.781,76,0.188,77,0.382,82,0.258,123,1.932,133,1.613,181,2.986,182,2.552,184,1.932,185,2.035,188,1.694,191,1.3,192,2.552,200,4.639,204,1.781,241,4.385,242,3.987,243,2.806,244,3.947,245,3.218,246,4.385,247,2.981,248,5.019,249,5.019,250,4.058,251,5.019,252,5.289,253,3.664,254,3.664,255,1.796,256,1.908,257,2.18,258,3.844,259,5.019,260,5.019,261,5.019,262,5.019,263,5.019,264,5.019,265,5.019,266,5.019,267,5.019,268,5.019,269,5.019]],["title/interfaces/ChipsetConfig.html",[68,0.107,250,2.222]],["body/interfaces/ChipsetConfig.html",[3,0.244,4,0.244,8,0.244,24,0.794,25,0.019,28,0.392,29,0.875,43,1.963,66,0.014,67,0.014,68,0.176,70,0.925,76,0.219,77,0.423,78,1.331,81,1.297,82,0.376,184,2.289,204,2.599,207,1.697,208,3.081,229,3.214,244,4.76,245,3.556,250,3.3,270,2.964,271,2.734,272,4.348,273,3.556,274,4.348,275,3.259,276,4.192,277,4.192]],["title/interfaces/ChipsetContent.html",[68,0.107,272,2.395]],["body/interfaces/ChipsetContent.html",[3,0.234,4,0.234,8,0.234,10,0.613,24,0.761,25,0.019,28,0.384,29,0.952,43,1.972,66,0.013,67,0.013,68,0.173,70,0.886,76,0.209,77,0.411,78,1.605,81,1.32,82,0.376,184,2.32,204,2.439,207,1.651,208,3.357,229,3.484,244,4.78,245,4.406,250,2.426,270,2.841,271,2.714,272,4.123,273,2.615,274,3.875,275,3.124,276,4.562,277,4.562]],["title/interfaces/ChipsetHeader.html",[68,0.107,274,2.395]],["body/interfaces/ChipsetHeader.html",[3,0.236,4,0.236,8,0.236,10,0.618,24,0.767,25,0.019,28,0.385,29,0.954,43,1.974,66,0.013,67,0.013,68,0.173,70,0.894,76,0.211,77,0.413,78,1.609,81,1.332,82,0.377,184,2.264,204,2.584,207,2.108,208,3.371,229,3.161,244,4.785,245,3.477,250,2.447,270,2.864,271,2.571,272,3.891,273,2.636,274,4.137,275,3.15,276,4.57,277,4.137]],["title/components/ClusterComponent.html",[0,0.561,45,1.394]],["body/components/ClusterComponent.html",[0,1.064,1,1.564,2,2.086,3,0.228,4,0.228,5,1.74,6,1.648,7,1.74,8,0.228,10,0.598,13,1.648,14,2.921,15,2.906,16,2.198,17,2.229,18,2.321,20,2.321,22,2.454,24,1.188,25,0.019,26,1.052,28,0.253,29,0.532,30,1.74,31,2.198,32,2.198,33,1.412,34,2.785,35,1.74,36,1.002,37,1.74,38,1.485,39,1.74,40,1.485,41,1.74,42,1.485,43,1.052,44,1.74,45,2.377,46,1.74,47,1.564,48,1.74,49,1.564,50,1.74,51,1.485,52,1.74,53,1.412,54,0.909,55,1.74,56,1.485,57,1.74,58,1.564,59,1.16,60,1.343,61,1.74,62,2.086,63,2.354,64,1.648,65,1.74,66,0.013,67,0.013,72,1.883,76,0.204,77,0.404,82,0.273,123,2.016,133,1.705,181,3.157,182,2.772,184,2.016,185,2.21,187,3.418,188,1.84,191,1.412,192,2.772,247,3.11,255,1.95,256,2.072,258,4.065,278,3.048,279,4.537,280,4.573,281,5.307,282,5.307,283,3.869,284,5.307,285,3.979,286,5.307,287,5.307]],["title/interfaces/ClusterConfig.html",[68,0.107,283,2.075]],["body/interfaces/ClusterConfig.html",[3,0.22,4,0.22,8,0.22,24,0.717,25,0.019,28,0.244,36,1.134,54,0.877,66,0.013,67,0.013,68,0.11,70,0.835,76,0.197,77,0.395,78,1.684,81,1.294,82,0.385,103,4.81,104,3.27,106,3.247,139,1.51,167,1.592,169,4.374,188,2.904,216,2.147,225,3.736,276,4.331,279,4.832,283,3.488,288,3.3,289,4.705,290,5.393,291,3.9,292,5.175,293,4.81,294,4.705,295,3.519,296,3.084,297,3.61,298,5.183,299,5.393,300,3.706,301,3.842,302,4.452,303,1.51,304,1.592,305,3.842]],["title/components/DeasComponent.html",[0,0.561,47,1.468]],["body/components/DeasComponent.html",[0,1.045,1,1.67,2,2.178,3,0.244,4,0.244,5,1.858,6,1.76,7,1.858,8,0.244,10,0.639,13,1.76,14,2.946,15,2.933,16,2.295,17,2.068,18,2.423,19,3.859,20,2.423,22,2.562,24,1.151,25,0.019,26,1.123,27,2.359,28,0.27,29,0.825,30,1.858,31,2.295,32,2.295,33,1.507,34,2.858,35,1.858,36,1.035,37,1.858,38,1.586,39,1.858,40,1.586,41,1.858,42,1.586,43,1.123,44,1.858,45,1.586,46,1.858,47,2.732,48,1.858,49,1.67,50,1.858,51,1.586,52,1.858,53,1.507,54,0.97,55,1.858,56,1.586,57,1.858,58,1.67,59,1.238,60,1.434,61,1.858,62,1.67,63,1.507,64,1.76,65,1.858,66,0.014,67,0.014,82,0.218,153,2.212,175,3.552,188,2.562,189,2.527,190,2.359,191,1.507,247,2.886,255,2.082,306,3.254,307,5.541,308,5.541,309,5.191,310,5.541,311,4.723,312,5.541,313,5.541]],["title/interfaces/Definition.html",[68,0.107,314,2.075]],["body/interfaces/Definition.html",[3,0.212,4,0.212,8,0.212,10,0.865,25,0.019,28,0.434,36,0.622,54,1.613,66,0.013,67,0.013,68,0.204,70,0.805,76,0.19,77,0.385,81,1.376,82,0.363,93,1.928,106,2.994,168,2.494,211,1.25,291,2.808,295,1.928,296,2.203,303,2.736,304,1.534,314,3.867,315,2.203,316,2.562,317,4.308,318,1.534,319,2.579,320,1.624,321,2.579,322,2.579,323,2.579,324,3.241,325,2.374,326,2.579,327,2.579,328,3.007,329,2.374,330,2.579,331,2.579,332,2.579,333,2.579,334,2.579,335,2.579,336,2.579,337,2.579,338,2.579,339,2.579,340,2.579,341,2.579,342,3.007,343,2.579,344,2.579,345,2.579,346,2.579,347,2.579,348,2.579,349,2.579,350,2.579,351,2.579,352,2.579,353,2.579,354,3.241,355,2.579,356,2.579,357,2.579,358,2.203,359,2.579,360,2.579,361,2.579,362,2.579,363,2.579,364,2.579,365,2.579,366,2.374,367,2.579,368,2.374,369,2.579,370,2.579,371,2.374,372,2.579,373,2.579,374,2.374,375,2.374,376,2.808,377,2.374,378,2.203,379,2.374,380,2.374,381,2.203,382,3.241,383,2.374,384,2.374,385,2.374,386,2.203]],["title/interfaces/ExternalReference.html",[68,0.107,328,2.222]],["body/interfaces/ExternalReference.html",[3,0.206,4,0.206,8,0.206,10,0.994,25,0.019,28,0.431,36,0.602,54,1.601,66,0.012,67,0.012,68,0.203,70,0.779,76,0.184,77,0.377,81,1.378,82,0.371,93,3.177,106,2.959,168,2.47,211,1.21,291,2.745,295,1.867,296,2.941,303,2.715,304,1.485,314,3.675,315,2.132,316,2.527,317,2.496,318,1.485,319,2.496,320,1.588,321,2.496,322,2.496,323,2.496,324,3.169,325,2.297,326,2.496,327,2.496,328,3.366,329,2.297,330,2.496,331,2.496,332,2.496,333,2.496,334,2.496,335,2.496,336,2.496,337,2.496,338,2.496,339,2.496,340,2.496,341,2.496,342,2.941,343,2.496,344,2.496,345,2.496,346,2.496,347,2.496,348,2.496,349,2.496,350,2.496,351,2.496,352,2.496,353,2.496,354,3.169,355,2.496,356,2.496,357,2.496,358,2.132,359,2.496,360,2.496,361,2.496,362,2.496,363,2.496,364,2.496,365,2.496,366,3.169,367,4.249,368,3.911,369,2.496,370,2.496,371,2.297,372,2.496,373,2.496,374,2.297,375,2.297,376,2.745,377,2.297,378,2.132,379,2.297,380,2.297,381,2.132,382,3.169,383,2.297,384,2.297,385,2.297,386,2.132]],["title/components/HubComponent.html",[0,0.561,49,1.468]],["body/components/HubComponent.html",[0,0.86,1,0.757,2,1.531,3,0.11,4,0.11,5,0.842,6,0.798,7,0.842,8,0.11,10,0.29,13,0.798,14,2.557,15,2.522,16,1.285,17,1.158,18,1.357,19,2.161,20,1.357,22,1.434,24,1.285,25,0.019,26,0.509,27,1.07,28,0.122,29,0.258,30,0.842,31,1.285,32,1.285,33,0.683,34,1.953,35,0.842,36,0.749,37,0.842,38,1.454,39,0.842,40,0.719,41,0.842,42,0.719,43,0.509,44,0.842,45,1.454,46,0.842,47,0.757,48,0.842,49,1.755,50,0.842,51,1.454,52,0.842,53,1.382,54,1.486,55,0.842,56,0.719,57,0.842,58,0.757,59,1.603,60,0.65,61,0.842,62,1.219,63,1.382,64,0.798,65,0.842,66,0.008,67,0.008,76,0.099,77,0.236,78,0.462,82,0.342,85,0.944,86,2.376,113,2.161,123,2.524,125,3.079,127,1.434,133,2.161,138,0.798,139,1.531,140,2.967,143,2.277,144,1.326,148,1.953,153,1.003,155,1.475,156,0.944,159,2.325,167,0.798,168,2.357,175,1.235,180,0.842,188,2.264,189,1.146,190,1.723,191,1.382,210,1.146,212,1.146,216,2.167,247,1.616,255,0.944,256,1.003,257,1.146,283,2.163,300,2.549,303,2.249,304,1.85,316,1.613,318,1.613,320,0.619,387,1.475,388,2.376,389,3.353,390,3.757,391,2.983,392,2.983,393,2.983,394,3.102,395,3.102,396,4.204,397,2.983,398,4.048,399,2.656,400,3.345,401,2.713,402,2.713,403,3.895,404,3.895,405,3.345,406,2.656,407,3.055,408,4.465,409,4.465,410,2.163,411,3.102,412,2.664,413,1.926,414,2.664,415,3.11,416,3.668,417,1.926,418,3.102,419,3.102,420,3.102,421,1.926,422,2.376,423,3.102,424,3.102,425,1.926,426,2.161,427,1.723,428,3.409,429,1.926,430,2.48,431,2.664,432,2.664,433,3.102,434,2.664,435,1.926,436,2.862,437,3.11,438,1.989,439,2.325,440,2.664,441,1.926,442,2.376,443,3.11,444,3.749,445,3.102,446,3.102,447,2.376,448,2.664,449,3.102,450,1.926,451,2.905,452,1.926,453,3.112,454,2.664,455,1.926,456,3.643,457,2.664,458,1.926,459,3.42,460,1.926,461,3.102,462,2.376,463,1.926,464,3.102,465,1.926,466,2.664,467,1.926,468,2.664,469,1.926,470,1.926,471,1.926,472,1.926,473,1.926,474,1.342,475,1.654,476,1.475,477,1.654,478,1.475,479,1.654,480,1.475,481,1.342,482,1.654,483,1.342,484,1.475,485,1.926,486,1.926,487,1.926,488,1.926,489,3.102,490,2.161,491,3.102,492,2.664,493,3.102,494,2.376,495,4.465,496,3.102,497,3.102]],["title/injectables/HubEffects.html",[118,1.2,498,2.602]],["body/injectables/HubEffects.html",[3,0.199,4,0.199,8,0.199,10,0.725,12,2.871,24,1.221,25,0.019,26,0.916,28,0.22,29,0.743,36,0.581,54,1.495,66,0.012,67,0.012,76,0.178,77,0.368,78,0.831,82,0.285,118,1.551,120,1.697,123,2.21,125,1.601,133,1.785,138,1.434,140,2.779,143,1.713,144,0.998,148,2.628,151,2.514,156,1.697,167,1.999,168,2.557,171,2.365,211,2.313,219,3.259,316,1.999,318,2.712,390,3.894,399,4.14,407,3.338,410,1.923,422,3.697,437,3.362,438,3.094,475,2.974,498,4.186,499,2.974,500,4.603,501,4.826,502,3.853,503,4.826,504,4.826,505,4.559,506,4.392,507,3.462,508,3.462,509,3.094,510,3.362,511,4.559,512,5.428,513,6.01,514,4.826,515,5.428,516,4.826,517,3.462,518,5.162,519,5.162,520,4.603,521,4.603,522,3.697,523,4.826,524,4.826,525,4.826,526,4.826,527,3.87,528,4.826,529,3.462,530,4.826,531,4.826,532,2.974,533,2.652,534,2.652,535,2.652,536,2.412,537,2.652,538,2.412]],["title/injectables/HubFacade.html",[118,1.2,389,2.395]],["body/injectables/HubFacade.html",[3,0.205,4,0.205,8,0.205,10,0.849,11,1.985,24,1.233,25,0.019,26,0.945,28,0.227,29,0.478,36,0.828,54,1.65,66,0.012,67,0.012,68,0.141,76,0.184,77,0.376,78,1.183,82,0.339,118,1.585,120,1.751,123,2.439,127,2.281,133,2.054,138,2.044,139,1.939,140,3.057,143,1.751,144,1.02,148,2.157,151,3.173,162,2.126,167,2.341,168,2.697,211,2.057,216,2.524,300,3.329,303,1.939,318,2.341,389,3.906,390,3.625,398,4.098,401,4.243,402,4.243,407,3.979,410,1.985,416,3.163,436,3.163,437,3.436,438,3.163,439,3.852,456,3.436,474,2.489,483,2.489,502,3.163,505,2.489,506,4.098,509,3.163,510,4.243,520,4.666,522,3.779,537,2.737,538,2.489,539,3.069,540,4.933,541,4.933,542,3.069,543,4.933,544,3.436,545,4.933,546,3.573,547,3.573,548,4.933,549,4.933,550,3.573,551,4.933,552,2.291,553,3.573,554,3.573,555,3.573]],["title/injectables/HubService.html",[118,1.2,399,2.222]],["body/injectables/HubService.html",[3,0.157,4,0.157,8,0.157,11,1.52,24,1.167,25,0.02,26,0.724,28,0.174,29,0.366,36,0.684,54,0.625,66,0.01,67,0.01,76,0.141,77,0.31,78,0.977,81,1.07,82,0.209,118,1.309,120,1.341,123,2.218,125,2.25,127,1.884,133,1.732,138,1.687,139,1.912,140,2.25,143,0.971,144,0.566,153,1.425,156,1.341,162,1.628,168,1.52,171,3.151,191,2.54,294,3.754,295,3.578,300,3.482,303,1.601,318,2.233,320,1.941,376,1.52,378,2.423,381,2.423,386,3.428,399,2.423,468,2.35,474,1.906,506,3.455,556,2.35,557,3.389,558,4.073,559,4.073,560,4.073,561,6.256,562,2.736,563,2.736,564,4.073,565,2.736,566,3.498,567,2.736,568,2.35,569,2.35,570,2.35,571,2.096,572,2.736,573,2.096,574,2.736,575,2.736,576,2.35,577,4.865,578,4.865,579,4.073,580,5.188,581,5.39,582,4.629,583,4.865,584,5.39,585,2.736,586,2.736,587,3.389,588,4.073,589,4.073,590,4.073,591,2.736,592,2.736,593,4.073,594,2.736,595,4.865,596,2.736,597,4.073,598,4.073,599,2.736,600,2.736,601,2.736,602,4.128,603,4.073,604,5.39,605,2.736,606,2.736,607,4.073,608,2.736,609,2.736,610,2.736,611,2.736,612,4.073,613,3.498,614,2.736,615,2.736,616,2.736,617,3.498,618,4.073,619,2.736,620,4.073,621,2.736,622,2.736,623,2.736,624,2.736,625,2.736,626,2.736,627,2.736,628,4.865,629,4.073,630,4.073,631,2.736,632,4.073,633,2.736,634,4.073,635,4.073,636,2.736,637,4.073,638,2.736,639,2.736,640,4.073,641,2.736,642,2.736,643,2.736,644,2.736,645,4.013,646,2.736,647,2.736,648,2.736,649,2.736,650,2.736,651,2.736,652,2.736,653,2.736,654,2.736,655,2.736,656,2.736,657,2.736,658,2.736,659,2.736]],["title/interfaces/HubState.html",[68,0.107,660,2.602]],["body/interfaces/HubState.html",[3,0.236,4,0.236,8,0.236,10,0.617,24,1.203,25,0.019,28,0.385,54,0.938,66,0.013,67,0.013,68,0.184,70,0.892,72,1.923,76,0.211,77,0.413,81,0.727,82,0.354,131,3.596,139,1.614,143,1.457,167,2.245,168,2.66,191,2.152,211,2.047,225,3.223,300,3.359,303,1.614,318,2.672,390,4.24,398,4.134,407,4.043,416,3.473,427,2.28,439,2.138,451,3.582,453,2.443,474,2.86,483,2.86,502,4.501,511,2.86,527,2.86,536,2.86,537,3.145,544,2.86,552,2.632,587,2.86,660,4.796,661,3.145,662,4.15,663,3.145,664,3.145,665,3.145,666,3.774,667,3.526,668,4.15,669,4.106,670,3.145,671,3.526,672,3.526]],["title/interfaces/KillChainPhase.html",[68,0.107,342,2.222]],["body/interfaces/KillChainPhase.html",[3,0.21,4,0.21,8,0.21,10,0.859,25,0.019,28,0.433,36,0.613,54,1.608,66,0.012,67,0.012,68,0.203,70,0.794,76,0.188,77,0.382,81,1.377,82,0.366,93,1.903,106,2.98,168,2.484,211,1.233,291,2.782,295,1.903,296,2.173,303,2.728,304,1.513,314,3.696,315,2.173,316,2.548,317,2.544,318,1.513,319,2.544,320,1.609,321,2.544,322,2.544,323,2.544,324,3.211,325,2.342,326,2.544,327,2.544,328,2.98,329,2.342,330,2.544,331,2.544,332,2.544,333,2.544,334,2.544,335,2.544,336,2.544,337,2.544,338,2.544,339,2.544,340,2.544,341,2.544,342,3.4,343,2.544,344,2.544,345,2.544,346,2.544,347,2.544,348,2.544,349,2.544,350,2.544,351,2.544,352,2.544,353,2.544,354,3.211,355,2.544,356,2.544,357,2.544,358,2.173,359,2.544,360,2.544,361,2.544,362,2.544,363,2.544,364,2.544,365,2.544,366,2.342,367,2.544,368,2.342,369,3.489,370,3.489,371,3.211,372,4.283,373,4.283,374,2.342,375,2.342,376,2.782,377,2.342,378,2.173,379,2.342,380,2.342,381,2.173,382,3.211,383,2.342,384,2.342,385,2.342,386,2.173]],["title/components/LoaderComponent.html",[0,0.561,51,1.394]],["body/components/LoaderComponent.html",[0,1.013,1,1.811,2,2.294,3,0.264,4,0.264,5,2.015,6,1.909,7,2.015,8,0.264,13,1.909,14,2.975,15,2.964,16,2.418,17,2.179,18,2.015,20,2.553,22,2.699,24,0.86,25,0.019,26,1.218,28,0.293,29,0.616,30,2.015,31,2.418,32,2.418,33,1.635,34,2.946,35,2.015,36,1.076,37,2.015,38,1.72,39,2.015,40,1.72,41,2.015,42,1.72,43,1.218,44,2.015,45,1.72,46,2.015,47,1.811,48,2.015,49,1.811,50,2.015,51,2.515,52,2.015,53,1.635,54,1.052,55,2.015,56,1.72,57,2.015,58,1.811,59,1.343,60,1.555,61,2.015,62,1.811,63,1.635,64,1.909,65,2.015,66,0.014,67,0.014,185,2.559,673,3.957,674,6.408,675,5.837,676,5.837,677,4.607,678,4.607]],["title/components/MitreAttackComponent.html",[0,0.561,53,1.326]],["body/components/MitreAttackComponent.html",[0,0.823,1,0.675,2,1.415,3,0.099,4,0.099,5,0.751,6,0.712,7,0.751,8,0.099,10,0.541,13,0.712,14,2.485,15,2.446,16,1.171,17,1.721,18,1.236,20,1.236,22,1.307,24,1.196,25,0.019,26,0.454,28,0.109,29,0.23,30,0.751,31,1.171,32,1.171,33,0.61,34,1.825,35,0.751,36,0.774,37,0.751,38,1.344,39,0.751,40,1.344,41,0.751,42,1.344,43,0.952,44,0.751,45,1.344,46,0.751,47,0.675,48,0.751,49,0.675,50,0.751,51,1.344,52,0.751,53,2.013,54,1.61,55,0.751,56,0.641,57,0.751,58,0.675,59,0.501,60,0.58,61,0.751,62,0.675,63,0.61,64,0.712,65,0.751,66,0.007,67,0.007,76,0.088,77,0.215,78,0.678,82,0.325,123,2.483,125,2.532,127,1.307,131,1.385,133,2.032,138,1.171,139,1.111,140,2.133,143,2.169,144,1.263,148,1.825,151,1.472,153,0.895,155,1.316,156,0.842,167,1.492,168,2.422,171,1.385,175,1.812,176,1.825,180,1.575,184,0.954,188,1.307,190,1.57,191,1.003,200,2.906,207,0.865,209,1.682,216,1.729,229,1.875,237,2.165,242,1.197,247,1.875,255,0.842,256,0.895,257,1.022,279,3.837,283,2.754,289,2.906,292,2.165,293,2.165,300,2.852,303,2.519,304,1.729,316,0.712,320,1.684,389,2.675,390,2.95,396,5.141,397,2.758,398,3.637,399,2.482,400,3.093,407,3.151,412,2.428,414,2.428,415,3.454,416,3.51,426,2.906,427,1.57,428,3.212,430,1.57,431,2.428,432,2.428,434,2.428,436,1.812,437,1.969,438,1.812,439,1.472,440,2.428,442,2.165,443,2.906,444,4.345,447,3.196,448,2.428,451,1.57,453,1.682,454,2.428,456,1.969,457,3.584,459,2.165,476,1.316,477,1.476,478,1.316,479,1.476,480,1.316,481,4.465,483,1.197,484,1.316,492,2.428,522,3.196,582,2.428,602,3.196,613,1.476,617,2.428,679,4.465,680,1.316,681,2.428,682,2.758,683,2.827,684,2.827,685,3.601,686,3.951,687,3.601,688,2.906,689,3.601,690,3.601,691,1.718,692,1.718,693,3.961,694,1.718,695,2.827,696,4.26,697,2.827,698,1.718,699,2.827,700,2.827,701,1.718,702,1.102,703,2.827,704,2.428,705,2.428,706,2.827,707,1.718,708,2.428,709,1.718,710,1.718,711,4.172,712,2.827,713,2.827,714,2.827,715,1.718,716,4.172,717,1.718,718,1.718,719,2.827,720,3.601,721,2.827,722,2.827,723,1.718,724,1.718,725,2.827,726,1.718,727,1.718,728,1.316,729,1.718,730,1.718,731,1.718,732,1.476,733,1.718,734,1.718,735,1.718,736,1.718,737,1.718,738,1.718,739,1.718,740,1.718,741,2.827,742,3.601,743,2.308,744,2.827,745,1.718,746,1.718,747,1.718,748,1.718,749,1.718,750,2.827,751,2.827,752,2.827,753,2.827,754,2.827,755,2.827,756,2.428,757,2.827,758,4.959,759,2.827,760,2.827,761,4.172,762,2.827,763,2.827,764,2.827,765,4.172,766,2.827,767,2.827,768,2.827]],["title/interfaces/MitreAttackConfig.html",[68,0.107,769,1.945]],["body/interfaces/MitreAttackConfig.html",[3,0.408,4,0.286,8,0.286,25,0.019,28,0.46,29,0.667,43,1.317,66,0.015,67,0.015,68,0.207,70,1.083,76,0.256,77,0.467,81,1.259,82,0.341,144,1.03,203,3.203,204,2.458,207,1.524,271,1.859,320,2.226,769,3.192,770,2.767,771,2.767,772,3.608,773,3.608,774,2.304,775,2.963,776,2.963,777,2.594,778,2.963,779,3.192,780,2.963,781,2.963,782,2.963,783,2.963]],["title/interfaces/MitreAttackData.html",[68,0.107,318,1.548]],["body/interfaces/MitreAttackData.html",[3,0.206,4,0.206,8,0.206,10,0.853,25,0.019,28,0.431,36,0.604,54,1.603,66,0.012,67,0.012,68,0.203,70,0.782,76,0.185,77,0.378,81,1.377,82,0.378,93,1.875,106,2.964,168,2.473,211,1.215,291,3.56,295,1.875,296,2.141,303,2.718,304,1.491,314,3.679,315,2.141,316,2.35,317,2.507,318,2.054,319,4.257,320,1.964,321,4.257,322,2.507,323,2.507,324,3.179,325,2.308,326,2.507,327,2.507,328,2.95,329,2.308,330,2.507,331,2.507,332,2.507,333,2.507,334,2.507,335,2.507,336,2.507,337,2.507,338,2.507,339,2.507,340,2.507,341,2.507,342,2.95,343,2.507,344,2.507,345,2.507,346,2.507,347,2.507,348,2.507,349,2.507,350,2.507,351,2.507,352,2.507,353,2.507,354,3.179,355,2.507,356,2.507,357,2.507,358,2.141,359,2.507,360,2.507,361,2.507,362,2.507,363,2.507,364,2.507,365,2.507,366,2.308,367,2.507,368,2.308,369,2.507,370,2.507,371,2.308,372,2.507,373,2.507,374,2.308,375,2.308,376,2.754,377,2.308,378,2.141,379,2.308,380,2.308,381,2.141,382,3.179,383,2.308,384,2.308,385,2.308,386,2.141]],["title/interfaces/MitreAttackFooter.html",[68,0.107,772,1.945]],["body/interfaces/MitreAttackFooter.html",[3,0.356,4,0.292,8,0.292,25,0.019,28,0.462,29,0.682,43,1.347,66,0.015,67,0.015,68,0.208,70,1.107,76,0.262,77,0.474,81,1.267,82,0.319,144,1.053,203,2.356,204,1.808,207,1.559,271,1.902,320,1.997,371,4.299,769,2.654,770,2.83,771,2.83,772,3.492,773,3.237,774,2.356,775,3.031,776,3.031,777,2.654,778,3.031,779,3.237,780,3.031,781,3.031,782,3.031,783,3.031,784,6.705]],["title/interfaces/MitreAttackHeader.html",[68,0.107,773,1.945]],["body/interfaces/MitreAttackHeader.html",[3,0.352,4,0.287,8,0.287,25,0.019,28,0.46,29,0.669,43,1.834,66,0.015,67,0.015,68,0.207,70,1.087,76,0.257,77,0.468,81,1.323,82,0.342,144,1.034,203,2.313,204,1.775,207,1.53,271,1.867,320,1.974,769,2.605,770,2.778,771,2.778,772,3.2,773,3.464,774,3.208,775,4.127,776,2.976,777,2.605,778,2.976,779,3.2,780,2.976,781,2.976,782,2.976,783,2.976]],["title/interfaces/MitreAttackInfo-1.html",[68,0.089,320,1.004,785,2.394]],["body/interfaces/MitreAttackInfo-1.html",[3,0.349,4,0.282,8,0.282,25,0.019,28,0.458,29,0.922,43,1.299,66,0.015,67,0.015,68,0.206,70,1.067,76,0.252,77,0.463,78,1.457,81,1.335,82,0.354,144,1.425,203,2.271,204,1.743,207,2.109,271,1.833,320,2.12,769,2.558,770,2.728,771,2.728,772,3.164,773,3.164,774,2.271,775,2.922,776,4.101,777,2.558,778,2.922,779,3.164,780,2.922,781,2.922,782,2.922,783,2.922]],["title/injectables/MitreAttackService.html",[118,1.2,688,2.602]],["body/injectables/MitreAttackService.html",[0,0.908,3,0.279,4,0.157,8,0.157,10,0.81,11,2.26,17,1.02,24,1.199,25,0.019,26,0.723,28,0.174,29,0.366,36,0.967,53,2.463,54,1.667,56,1.02,66,0.01,67,0.01,76,0.14,77,0.31,78,1.166,82,0.296,118,1.562,120,1.339,123,2.217,125,2.491,127,1.882,133,1.731,138,2.014,139,2.264,143,1.444,144,1.293,148,2.356,153,1.423,162,2.421,167,2.591,171,1.994,176,2.356,180,2.356,184,2.169,191,0.97,203,1.264,204,0.97,207,1.847,209,2.421,210,1.626,211,1.818,212,3.721,213,4.356,216,1.686,220,2.609,271,1.02,276,2.609,279,3.453,283,3.199,289,1.904,290,2.347,291,2.7,292,2.093,293,2.093,294,3.387,295,2.12,296,1.626,300,3.615,302,2.347,303,2.857,304,2.662,316,1.686,320,2.148,430,2.26,443,2.835,451,1.518,478,2.093,480,2.093,482,2.347,679,4.011,686,1.904,688,2.835,693,6.109,732,2.347,743,2.609,756,2.347,774,1.264,786,4.947,787,2.347,788,3.117,789,4.862,790,4.07,791,4.07,792,4.07,793,4.07,794,2.733,795,4.626,796,4.07,797,2.733,798,4.07,799,2.733,800,4.07,801,2.609,802,4.07,803,2.733,804,4.07,805,4.07,806,2.733,807,3.426,808,2.733,809,2.733,810,2.093,811,2.347,812,2.347,813,4.862,814,4.07,815,2.733,816,2.733,817,2.733,818,4.862,819,2.733,820,2.733,821,4.07,822,4.07,823,2.733,824,2.733,825,2.733,826,2.347,827,2.733,828,2.733,829,2.733,830,2.733,831,2.733,832,2.733,833,2.733,834,2.733,835,2.733,836,2.733,837,2.347,838,2.733,839,2.733,840,2.733]],["title/interfaces/MitreCells.html",[68,0.107,777,1.945]],["body/interfaces/MitreCells.html",[3,0.355,4,0.29,8,0.29,25,0.019,28,0.461,29,0.676,43,1.336,66,0.015,67,0.015,68,0.208,70,1.098,76,0.26,77,0.471,81,1.303,82,0.318,144,1.044,203,2.337,204,2.47,207,1.546,271,2.598,320,1.987,769,2.632,770,2.806,771,2.806,772,3.22,773,3.22,774,2.337,775,3.006,776,3.006,777,3.22,778,3.006,779,3.626,780,3.006,781,3.006,782,3.006,783,3.006]],["title/interfaces/MitreCellsContent.html",[68,0.107,779,1.945]],["body/interfaces/MitreCellsContent.html",[3,0.355,4,0.29,8,0.29,25,0.019,28,0.461,29,0.676,43,1.841,66,0.015,67,0.015,68,0.208,70,1.098,76,0.26,77,0.471,78,1.483,81,1.303,82,0.318,144,1.439,203,2.337,204,1.793,207,1.546,271,1.886,320,1.987,769,2.632,770,2.806,771,2.806,772,3.22,773,3.22,774,2.337,775,3.006,776,3.006,777,2.632,778,3.006,779,3.48,780,3.006,781,3.006,782,3.006,783,3.006]],["title/components/ModalComponent.html",[0,0.561,56,1.394]],["body/components/ModalComponent.html",[0,1.026,1,1.444,2,2.253,3,0.211,4,0.211,5,1.607,6,1.523,7,1.607,8,0.211,10,0.552,13,1.523,14,2.889,15,2.872,16,2.084,17,1.877,18,2.199,20,2.199,22,2.326,24,1.15,25,0.019,26,0.972,28,0.233,29,0.492,30,1.607,31,2.084,32,2.084,33,1.304,34,2.696,35,1.607,36,0.962,37,1.607,38,2.41,39,1.607,40,1.372,41,1.607,42,1.372,43,0.972,44,1.607,45,1.372,46,1.607,47,1.444,48,1.607,49,1.444,50,1.607,51,1.372,52,1.607,53,1.304,54,0.839,55,1.607,56,2.301,57,1.607,58,1.444,59,1.071,60,1.241,61,1.607,62,1.444,63,1.304,64,1.523,65,1.607,66,0.012,67,0.012,72,1.785,76,0.189,82,0.294,133,1.181,143,1.304,144,0.76,176,2.199,181,2.992,184,1.698,185,3.184,188,1.7,191,1.304,200,4.294,247,2.986,255,1.801,256,1.914,257,2.186,258,3.852,271,1.877,602,4.722,801,4.376,807,4.061,841,2.815,842,4.391,843,5.029,844,5.029,845,3.675,846,3.675,847,3.675,848,3.675,849,5.029,850,5.029,851,5.029,852,5.029,853,5.029,854,6.165,855,5.029,856,5.029,857,6.165,858,5.029,859,5.029,860,5.029,861,5.029,862,5.029]],["title/interfaces/ModalConfig.html",[68,0.107,807,2.222]],["body/interfaces/ModalConfig.html",[0,0.708,3,0.27,4,0.27,8,0.27,24,0.879,25,0.019,28,0.376,66,0.015,67,0.015,68,0.169,70,1.024,76,0.242,77,0.451,81,1.298,82,0.377,144,1.224,176,2.59,180,3.06,184,1.591,207,1.812,271,2.761,273,3.796,277,3.796,426,4.125,686,4.731,774,3.303,801,4.647,807,3.523,863,3.61,864,4.874,865,4.048]],["title/interfaces/ModalContent.html",[68,0.107,864,2.602]],["body/interfaces/ModalContent.html",[0,0.894,3,0.272,4,0.272,8,0.272,10,0.714,24,0.886,25,0.019,28,0.378,66,0.015,67,0.015,68,0.17,70,1.032,76,0.244,77,0.453,81,1.321,82,0.373,144,1.479,176,2.077,180,2.842,184,2.009,207,2.19,271,2.741,273,3.045,277,4.367,426,3.308,686,3.308,774,2.752,801,4.497,807,2.826,863,3.638,864,4.744,865,4.08]],["title/directives/TooltipDirective.html",[33,1.326,63,1.326]],["body/directives/TooltipDirective.html",[3,0.124,4,0.124,8,0.124,10,0.864,13,0.893,14,1.333,16,1.405,17,1.931,24,0.402,25,0.019,26,0.57,28,0.137,29,0.288,31,1.405,32,2.599,33,1.688,36,0.965,62,0.847,63,1.203,64,3.057,66,0.008,67,0.008,76,0.111,77,0.258,78,1.379,81,0.601,82,0.322,104,2.478,106,2.541,125,3.264,127,1.568,133,2.209,135,2.913,138,2.382,139,2.408,141,2.598,143,1.688,144,0.983,167,2.143,171,1.662,181,2.018,185,2.642,191,1.95,216,2.382,299,5.116,376,3.052,410,1.197,415,4.149,451,2.873,538,1.501,570,2.913,645,2.362,681,2.913,696,5.116,743,2.689,795,2.913,866,1.851,867,4.194,868,4.194,869,4.757,870,4.757,871,3.392,872,4.757,873,3.392,874,4.757,875,3.392,876,3.392,877,4.194,878,4.194,879,4.194,880,3.392,881,5.174,882,5.174,883,5.174,884,2.155,885,4.757,886,3.392,887,3.392,888,2.155,889,3.392,890,3.392,891,5.174,892,2.155,893,4.757,894,3.392,895,2.155,896,5.956,897,3.392,898,3.392,899,6.363,900,3.392,901,6.128,902,5.174,903,4.194,904,5.956,905,6.926,906,5.956,907,3.392,908,4.194,909,4.194,910,5.174,911,3.392,912,2.155,913,3.392,914,3.392,915,2.155,916,3.392,917,5.495,918,4.194,919,3.392,920,3.392,921,3.392,922,3.392,923,2.155,924,3.392,925,3.392,926,3.392,927,3.392,928,6.128,929,2.155,930,3.392,931,4.757,932,2.913,933,3.392,934,5.749,935,2.155,936,4.757,937,2.155,938,2.155,939,2.155,940,2.155,941,2.155,942,2.155,943,2.155,944,3.392,945,3.392,946,2.155,947,2.155,948,2.155,949,5.956,950,2.155,951,2.155,952,2.155,953,2.155,954,2.155,955,2.155,956,2.155,957,2.155,958,2.155,959,3.392,960,2.155,961,3.392,962,2.155,963,3.392,964,2.155,965,2.155,966,2.155,967,4.194,968,2.155,969,2.155,970,3.392,971,2.155,972,2.155,973,4.194,974,3.602,975,4.194,976,3.392,977,2.155,978,2.155,979,2.155,980,2.155]],["title/injectables/UserEffects.html",[118,1.2,981,2.861]],["body/injectables/UserEffects.html",[3,0.22,4,0.22,8,0.22,10,0.779,12,3.084,24,1.289,25,0.019,26,1.016,27,2.134,28,0.244,29,0.514,36,0.645,59,2.13,60,2.281,66,0.013,67,0.013,76,0.197,77,0.395,78,0.922,82,0.266,85,2.875,118,1.666,120,1.883,123,1.98,125,2.713,126,5.558,131,2.54,133,1.666,138,1.592,140,2.713,143,1.363,144,0.794,148,2.267,151,3.27,152,3.97,167,2.43,171,2.54,211,2.331,219,3.291,316,2.147,406,4.233,410,2.879,430,3.488,500,3.97,509,3.323,510,3.61,511,4.374,512,5.038,515,5.038,518,4.452,519,4.452,532,3.3,533,2.943,534,2.943,535,2.943,981,4.81,982,3.3,983,3.842,984,3.842,985,5.183,986,5.183,987,5.183,988,5.183,989,5.183,990,4.567,991,4.452,992,3.842,993,2.463,994,3.3,995,2.943]],["title/injectables/UserFacade.html",[118,1.2,159,1.945]],["body/injectables/UserFacade.html",[3,0.229,4,0.229,8,0.229,10,0.9,11,2.221,12,3.167,24,1.302,25,0.019,26,1.057,28,0.254,29,0.535,36,0.894,59,2.177,60,2.243,66,0.013,67,0.013,76,0.205,77,0.406,78,1.277,82,0.328,85,3.257,118,1.711,120,1.96,123,2.307,127,2.462,131,3.128,133,1.923,138,2.206,139,2.092,140,3.16,143,1.419,144,0.826,147,3.167,148,2.328,151,2.773,156,1.96,159,3.324,162,2.379,167,2.206,211,1.797,216,2.48,219,2.462,256,2.773,304,2.644,316,2.206,407,2.221,410,2.221,430,3.544,436,3.413,439,3.773,453,3.167,509,3.413,510,3.708,520,4.078,535,3.063,538,2.785,542,3.434,544,3.708,552,2.563,702,3.413,993,2.563,995,3.063,996,3.434,997,5.324,998,4.573,999,3.999,1000,5.324,1001,4.078,1002,5.324,1003,3.999,1004,3.999]],["title/components/UserLoginSystemComponent.html",[0,0.561,58,1.468]],["body/components/UserLoginSystemComponent.html",[0,0.748,1,0.919,2,1.738,3,0.134,4,0.134,5,1.023,6,1.832,7,1.023,8,0.134,13,0.969,14,2.671,15,2.671,16,1.498,17,1.35,18,1.582,20,1.582,24,1.219,25,0.019,26,0.619,27,1.299,28,0.149,29,0.313,30,1.023,31,1.498,32,1.498,33,0.83,34,2.175,35,1.023,36,0.742,37,1.023,38,0.873,39,1.023,40,0.873,41,1.023,42,0.873,43,0.619,44,1.023,45,0.873,46,1.023,47,0.919,48,1.023,49,0.919,50,1.023,51,1.65,52,1.023,53,0.83,54,0.534,55,1.023,56,0.873,57,1.023,58,1.955,59,2.11,60,2.469,61,1.933,62,0.919,63,0.83,64,0.969,65,1.023,66,0.009,67,0.009,69,2.63,72,1.283,73,2.959,76,0.12,77,0.276,82,0.345,123,2.122,125,3.068,126,4.814,127,1.672,131,1.772,133,1.968,139,1.421,142,4.129,143,2.018,144,1.175,145,2.519,147,3.82,148,2.175,149,3.106,151,2.961,152,2.77,153,1.218,156,1.147,157,1.629,158,1.392,159,2.303,161,2.009,188,1.672,190,2.455,191,0.83,216,1.832,219,1.672,244,2.318,247,2.303,255,1.772,297,2.519,304,1.498,309,3.386,325,2.318,388,2.77,397,3.386,406,3.527,410,2.455,427,2.009,428,4.129,430,2.009,438,2.318,439,1.884,444,3.386,447,3.81,466,3.106,476,1.792,509,3.189,702,2.318,788,2.77,993,1.5,994,2.009,1005,2.34,1006,4.814,1007,4.814,1008,1.792,1009,3.386,1010,3.617,1011,4.421,1012,3.617,1013,5.613,1014,4.974,1015,3.617,1016,4.974,1017,3.106,1018,3.617,1019,2.34,1020,3.106,1021,2.34,1022,2.34,1023,3.617,1024,3.617,1025,3.106,1026,2.34,1027,2.34,1028,3.617,1029,3.617,1030,3.617,1031,3.617,1032,3.617,1033,4.69,1034,2.77,1035,4.974,1036,4.974,1037,3.617,1038,3.617,1039,3.797,1040,3.617,1041,3.617,1042,3.617,1043,3.106,1044,3.617,1045,2.34,1046,3.617,1047,3.617,1048,3.617,1049,3.106,1050,2.34,1051,2.009,1052,2.34,1053,2.34,1054,1.792,1055,2.34,1056,2.34,1057,2.009,1058,2.34,1059,2.34,1060,2.009,1061,3.617,1062,2.34,1063,2.34]],["title/interfaces/UserModel.html",[68,0.107,85,1.831]],["body/interfaces/UserModel.html",[3,0.203,4,0.203,8,0.203,10,0.738,25,0.019,28,0.357,36,1.189,59,1.034,66,0.012,67,0.012,68,0.173,69,2.111,70,0.771,71,2.471,72,1.997,73,3.924,74,3.047,75,3.147,76,0.182,77,0.374,79,3.047,80,4.216,81,1.365,82,0.389,83,3.047,84,3.047,85,2.406,86,5.705,87,4.216,88,4.652,89,4.216,90,4.652,91,5.052,92,4.216,93,2.556,94,5.052,95,4.216,96,4.216,97,4.216,98,4.216,99,4.216,100,4.652,101,5.278,102,5.216,103,3.76,104,2.556,105,4.216,106,2.809,107,4.652,108,4.216,109,3.76,110,4.652,111,4.216,112,2.717,113,2.471,114,2.717,115,2.717,116,2.717,117,2.717,1064,3.548]],["title/injectables/UserService.html",[118,1.2,406,2.222]],["body/injectables/UserService.html",[3,0.159,4,0.159,6,1.7,8,0.159,10,0.736,11,1.535,24,1.171,25,0.019,26,0.731,28,0.261,29,0.37,36,0.909,59,2.184,60,1.953,66,0.01,67,0.01,69,3.443,72,1.456,73,4.096,76,0.142,77,0.313,78,1.174,81,0.489,82,0.357,85,2.971,88,2.117,90,2.117,91,2.117,94,2.117,100,2.117,101,2.117,107,2.117,110,2.117,118,1.319,120,1.355,123,2.389,125,3.046,127,1.898,131,2.011,133,2.072,138,2.028,139,2.534,140,2.804,142,4.372,143,1.922,144,1.196,145,2.858,147,4.046,148,2.651,151,2.137,153,1.44,156,1.355,157,1.925,158,1.644,159,3.269,162,1.644,167,2.028,171,1.355,191,0.981,216,2.729,255,1.355,256,2.137,257,1.644,304,2.244,405,2.374,406,2.441,422,3.143,430,2.279,436,2.631,453,2.441,462,3.143,490,2.858,521,2.117,534,2.117,557,4.03,566,3.525,568,5.207,569,2.374,702,3.887,743,1.772,788,3.143,826,2.374,991,4.652,993,1.772,998,3.525,1001,3.143,1013,5.841,1025,3.525,1043,2.374,1051,2.374,1054,3.143,1057,2.374,1065,2.117,1066,4.104,1067,4.104,1068,5.416,1069,2.764,1070,5.787,1071,4.104,1072,2.764,1073,4.104,1074,4.104,1075,2.764,1076,4.104,1077,3.525,1078,2.764,1079,2.764,1080,2.764,1081,2.764,1082,3.143,1083,3.525,1084,2.764,1085,2.764,1086,2.764,1087,2.374,1088,2.764,1089,2.764,1090,2.764,1091,2.764,1092,2.764,1093,2.764,1094,2.764,1095,2.764,1096,2.764,1097,2.764,1098,2.764,1099,2.764,1100,2.764,1101,2.764,1102,2.764,1103,2.764,1104,2.764,1105,2.764,1106,2.764,1107,2.764,1108,2.764,1109,2.764,1110,2.117,1111,2.374,1112,2.764]],["title/interfaces/UserState.html",[68,0.107,1113,2.602]],["body/interfaces/UserState.html",[3,0.264,4,0.264,8,0.264,10,0.691,24,1.195,25,0.019,28,0.407,59,2.197,66,0.014,67,0.014,68,0.183,70,0.999,72,2.069,76,0.236,77,0.444,81,0.814,82,0.346,85,3.299,131,3.534,147,2.736,190,2.554,191,2.272,219,2.126,225,2.736,297,3.203,316,1.905,439,2.395,451,3.739,502,3.738,552,2.948,587,3.203,662,4.466,663,3.522,665,3.522,666,4.061,668,4.466,990,3.203,993,2.948,995,3.522,1034,3.522,1113,4.689,1114,3.522,1115,3.522,1116,3.95,1117,3.95,1118,3.95,1119,3.522,1120,3.95]],["title/coverage.html",[1121,4.368]],["body/coverage.html",[0,1.003,1,1.002,8,0.146,9,2.189,15,1.002,25,0.019,33,0.904,38,0.951,40,0.951,42,0.951,45,0.951,47,1.002,49,1.002,51,0.951,53,0.904,56,0.951,58,1.002,59,0.743,60,1.887,63,0.904,66,0.01,67,0.01,68,0.21,69,1.516,71,2.689,82,0.131,85,1.249,109,1.952,118,2.022,119,1.952,121,2.189,122,2.189,137,1.952,159,1.327,174,2.958,177,1.952,180,1.115,202,2.989,205,1.634,206,1.634,225,2.297,226,2.189,229,1.327,235,2.189,241,2.958,242,2.689,243,2.958,246,1.952,250,1.516,270,3.247,272,1.634,274,1.634,278,2.958,280,1.952,283,1.415,288,2.189,306,2.958,311,1.952,314,1.415,315,3.325,318,1.056,320,1.241,328,1.516,342,1.516,387,3.984,389,1.634,391,1.952,392,1.952,393,1.952,399,1.516,401,1.775,402,1.775,406,1.516,427,1.415,481,2.689,498,1.775,499,2.189,505,1.775,506,1.634,527,1.775,536,1.775,539,2.189,556,2.189,571,3.571,573,1.952,645,4.575,660,1.775,661,3.984,664,1.952,666,2.689,670,1.952,673,2.189,679,3.247,680,2.958,682,1.952,688,1.775,728,1.952,769,1.327,770,3.266,771,3.266,772,1.327,773,1.327,777,1.327,779,1.327,786,2.189,787,2.189,807,1.516,841,2.958,842,1.952,863,2.958,864,1.775,866,2.189,981,1.952,982,2.189,990,1.775,996,2.189,1006,2.958,1007,2.958,1008,2.958,1009,1.952,1060,6.606,1065,1.952,1113,1.775,1114,3.984,1115,1.952,1119,1.952,1121,2.189,1122,2.189,1123,2.189,1124,7.58,1125,2.189,1126,7.562,1127,2.189,1128,3.861,1129,3.861,1130,3.571,1131,2.189,1132,2.189,1133,2.189,1134,5.881,1135,2.549,1136,4.662,1137,3.861,1138,3.316,1139,5.881,1140,3.861,1141,3.861,1142,3.316,1143,2.189,1144,2.189,1145,2.189,1146,3.861,1147,3.861,1148,4.662,1149,2.549,1150,3.861,1151,2.549,1152,3.861,1153,2.549,1154,2.549,1155,2.549,1156,3.861,1157,4.662,1158,3.861,1159,2.549,1160,4.467,1161,2.549,1162,3.861,1163,3.861,1164,4.004,1165,2.189,1166,2.549,1167,3.316,1168,2.189,1169,1.952,1170,2.189,1171,2.189,1172,3.861,1173,3.861,1174,2.189,1175,2.549,1176,4.004,1177,2.189,1178,2.189,1179,2.189,1180,2.189,1181,2.549,1182,2.549]],["title/dependencies.html",[1183,2.394,1184,3.856]],["body/dependencies.html",[25,0.019,26,1.373,27,2.884,66,0.016,67,0.016,156,2.545,157,3.616,158,3.74,255,2.545,533,3.977,552,4.03,810,3.977,811,4.46,812,5.399,1184,4.46,1185,5.192,1186,7.466,1187,5.192,1188,5.192,1189,6.286,1190,6.286,1191,5.192,1192,5.192,1193,6.286,1194,6.761,1195,4.46,1196,5.192,1197,5.192,1198,5.192,1199,5.192,1200,5.192,1201,5.192,1202,5.192,1203,5.192,1204,5.192]],["title/miscellaneous/enumerations.html",[1205,1.628,1206,3.856]],["body/miscellaneous/enumerations.html",[0,0.953,3,0.405,25,0.019,66,0.016,67,0.016,72,2.251,76,0.271,144,1.534,176,2.774,202,3.379,210,3.774,212,3.774,217,4.418,218,4.418,219,2.437,220,4.362,221,3.671,222,4.918,223,3.671,224,3.671,398,4.066,494,4.858,1169,4.037,1205,2.745,1206,4.527,1207,6.343,1208,4.527,1209,4.858,1210,5.448]],["title/miscellaneous/functions.html",[1205,1.628,1211,3.856]],["body/miscellaneous/functions.html",[10,0.949,25,0.018,36,1.059,66,0.016,67,0.016,76,0.268,78,1.514,81,1.276,82,0.324,93,3.667,138,2.614,139,2.48,329,4.346,557,4.395,1033,5.393,1049,4.488,1130,4.002,1131,5.42,1132,5.42,1205,2.721,1211,4.488,1212,5.42,1213,5.225,1214,5.823,1215,6.31,1216,6.291,1217,5.225,1218,5.42,1219,5.225,1220,5.225,1221,5.225]],["title/index.html",[76,0.161,1222,2.685,1223,2.685]],["body/index.html",[0,0.906,4,0.233,12,3.587,25,0.013,36,0.681,54,0.927,66,0.013,67,0.013,158,3.587,168,2.007,294,2.827,366,2.602,415,2.827,427,2.254,442,3.108,490,2.827,576,3.486,580,3.486,704,3.486,705,3.486,708,4.618,810,5.362,932,3.486,1017,3.486,1054,3.108,1082,3.108,1110,3.108,1111,3.486,1183,4.118,1209,3.108,1224,5.377,1225,4.058,1226,4.058,1227,4.058,1228,4.058,1229,3.108,1230,4.058,1231,4.058,1232,4.058,1233,3.486,1234,4.058,1235,4.058,1236,3.486,1237,4.058,1238,4.618,1239,4.058,1240,4.058,1241,4.058,1242,4.058,1243,4.058,1244,4.058,1245,4.058,1246,4.058,1247,4.058,1248,4.058,1249,4.058,1250,4.058,1251,4.058,1252,4.058,1253,4.058,1254,4.058,1255,4.058,1256,4.058,1257,4.058,1258,4.058,1259,4.058,1260,4.058,1261,4.058,1262,4.058,1263,4.058,1264,4.058,1265,4.058,1266,4.058,1267,4.058,1268,4.058,1269,4.058,1270,6.03,1271,4.058,1272,6.03,1273,3.108,1274,4.058,1275,6.419,1276,5.513,1277,6.03,1278,4.058,1279,4.058,1280,7.109,1281,3.108,1282,6.03,1283,5.377,1284,4.058,1285,6.419,1286,6.863,1287,4.058,1288,4.058,1289,4.058,1290,3.486,1291,4.058,1292,3.486,1293,4.058,1294,4.058,1295,3.486,1296,4.058,1297,4.058,1298,6.03,1299,5.179,1300,4.058,1301,6.419,1302,4.058,1303,4.058,1304,4.058,1305,4.058,1306,5.377,1307,4.618,1308,6.419,1309,3.486,1310,5.377,1311,5.377,1312,4.058,1313,6.863,1314,4.058,1315,4.058,1316,4.058,1317,4.058,1318,4.058,1319,3.486,1320,4.058,1321,4.058,1322,6.03,1323,4.058,1324,4.058,1325,3.108,1326,4.058]],["title/license.html",[1222,2.685,1223,2.685,1327,2.685]],["body/license.html",[25,0.015,66,0.015,67,0.015,104,2.558,169,3.421,211,1.658,428,3.421,490,3.421,899,4.218,1122,4.218,1229,4.654,1281,3.762,1295,4.218,1299,5.218,1327,4.218,1328,4.912,1329,6.597,1330,4.912,1331,4.912,1332,4.912,1333,4.912,1334,6.076,1335,4.912,1336,4.912,1337,4.912,1338,4.912,1339,4.912,1340,4.912,1341,6.076,1342,7.449,1343,4.912,1344,6.597,1345,4.912,1346,4.912,1347,4.912,1348,4.912,1349,4.912,1350,4.912,1351,4.912,1352,4.912,1353,4.912,1354,4.912,1355,6.076,1356,4.912,1357,4.912,1358,4.912,1359,4.912,1360,4.912,1361,6.076,1362,6.076,1363,4.218,1364,4.912,1365,4.912,1366,4.912,1367,4.912,1368,4.912,1369,4.912,1370,4.912,1371,4.912,1372,4.912,1373,4.912,1374,4.912,1375,4.912,1376,4.912,1377,4.912,1378,4.912,1379,4.912,1380,4.912,1381,4.912,1382,4.912,1383,4.912,1384,4.912,1385,4.912,1386,4.912,1387,4.912,1388,4.912,1389,4.912]],["title/modules.html",[189,3.025]],["body/modules.html",[25,0.017,66,0.017,67,0.017,189,3.582]],["title/overview.html",[1325,3.895]],["body/overview.html",[2,2.321,25,0.017,33,2.095,66,0.017,67,0.017,70,1.283,120,2.894,785,4.523,1325,4.523,1390,5.905,1391,5.905,1392,5.905]],["title/properties.html",[77,0.342,1183,2.394]],["body/properties.html",[25,0.018,66,0.017,67,0.017,77,0.455,1273,4.578,1393,5.977]],["title/miscellaneous/typealiases.html",[1205,1.628,1394,4.489]],["body/miscellaneous/typealiases.html",[25,0.019,54,1.621,66,0.015,67,0.015,71,3.449,72,1.757,73,2.946,75,3.174,76,0.254,82,0.38,112,3.792,113,3.449,114,4.677,115,3.792,116,3.792,117,3.792,168,2.279,175,3.174,211,1.671,295,2.579,300,3.18,303,2.717,304,2.051,314,3.391,315,2.946,320,1.591,324,3.914,354,3.914,358,2.946,374,3.174,375,3.174,376,3.391,377,3.174,378,2.946,379,3.174,380,3.174,381,2.946,382,3.914,383,3.174,384,3.174,385,3.174,386,2.946,459,3.792,1065,3.792,1087,5.244,1205,2.579,1395,4.951,1396,4.951,1397,4.951,1398,6.106,1399,4.951,1400,4.951,1401,4.951,1402,4.252]],["title/miscellaneous/variables.html",[1205,1.628,1403,3.856]],["body/miscellaneous/variables.html",[0,0.558,2,1.319,10,0.364,12,3.014,14,1.319,15,0.706,17,1.501,19,1.251,25,0.019,29,0.771,36,0.407,38,0.904,40,0.671,42,0.378,45,0.671,51,0.904,53,0.359,54,1.354,59,1.728,60,1.525,62,0.706,63,0.859,66,0.004,67,0.004,73,0.602,75,3.502,76,0.052,81,1.075,82,0.367,93,1.934,104,1.261,106,1.12,123,0.342,131,2.867,137,2.246,140,0.468,142,0.705,143,2.421,144,1.405,145,0.705,147,2.809,148,0.786,158,1.441,159,0.527,165,2.08,166,1.543,168,2.518,169,0.705,171,1.645,174,0.776,176,0.443,177,1.376,184,1.357,188,2.184,189,1.441,190,2.063,191,0.638,204,0.859,207,1.983,211,1.254,219,0.468,225,1.744,237,2.845,239,0.87,241,0.776,242,0.705,243,1.376,245,2.896,246,1.376,247,0.936,252,0.87,256,2.094,257,1.744,271,0.904,278,0.776,279,0.649,280,1.376,289,0.705,291,2.063,297,1.251,303,1.152,306,0.776,309,2.246,311,1.376,316,1.539,318,1.215,358,1.441,368,1.553,387,0.776,388,1.376,390,3.179,391,1.376,392,1.376,393,1.376,401,1.251,402,1.251,407,2.813,416,0.649,427,0.998,439,1.527,443,1.251,451,0.998,453,0.602,456,1.687,462,0.776,481,0.705,484,1.376,494,3.283,498,0.705,500,0.776,502,3.143,505,1.251,506,1.152,511,1.687,521,2.57,527,1.251,536,1.251,544,1.687,557,1.687,571,3.46,573,1.855,587,1.251,645,3.951,660,0.705,661,0.776,662,1.376,663,1.376,664,1.376,665,1.376,666,2.587,667,1.543,668,1.376,670,1.855,671,0.87,672,0.87,679,0.705,680,1.376,682,1.376,702,3.426,728,1.376,743,1.152,774,1.12,785,4.268,801,0.649,837,5.744,841,0.776,842,1.376,974,3.19,990,1.251,1001,3.079,1006,0.776,1007,0.776,1008,1.376,1009,1.376,1020,0.87,1033,2.246,1034,1.376,1039,2.08,1077,2.08,1082,0.776,1083,1.543,1110,0.776,1113,0.705,1114,0.776,1115,1.376,1116,2.882,1117,0.87,1118,0.87,1119,1.855,1120,0.87,1123,0.87,1125,0.87,1127,1.543,1130,0.776,1133,1.543,1138,0.87,1142,0.87,1143,1.543,1144,0.87,1145,2.08,1160,0.87,1164,0.87,1165,2.518,1167,0.87,1168,1.543,1169,0.776,1170,0.87,1171,2.08,1174,4.951,1176,0.87,1177,1.543,1178,0.87,1179,0.87,1180,0.87,1195,0.87,1205,0.527,1208,0.87,1209,3.079,1210,2.882,1212,0.87,1214,0.87,1216,0.87,1218,0.87,1229,0.776,1233,0.87,1236,1.543,1238,1.543,1273,1.376,1276,3.681,1281,0.776,1290,1.543,1292,0.87,1307,2.08,1309,1.543,1319,0.87,1363,0.87,1402,3.19,1403,0.87,1404,2.422,1405,1.013,1406,1.013,1407,2.422,1408,1.013,1409,1.013,1410,2.422,1411,1.797,1412,1.013,1413,1.013,1414,1.013,1415,2.932,1416,1.797,1417,2.422,1418,2.422,1419,1.013,1420,1.797,1421,1.013,1422,1.013,1423,1.013,1424,1.013,1425,1.013,1426,1.013,1427,1.013,1428,1.013,1429,1.013,1430,1.013,1431,1.013,1432,2.422,1433,1.013,1434,1.013,1435,1.013,1436,1.013,1437,1.013,1438,1.013,1439,1.013,1440,1.013,1441,1.797,1442,4.722,1443,2.422,1444,1.013,1445,2.422,1446,1.797,1447,1.797,1448,1.013,1449,2.932,1450,1.013,1451,1.013,1452,2.422,1453,2.932,1454,2.932,1455,1.013,1456,3.356,1457,1.013,1458,1.013,1459,1.013,1460,1.013,1461,1.013,1462,1.797,1463,1.013,1464,1.013,1465,1.013,1466,1.013,1467,1.013,1468,1.013,1469,1.013,1470,1.013,1471,1.013,1472,1.013,1473,2.932,1474,1.013,1475,1.013,1476,2.932,1477,1.013,1478,1.013,1479,1.013,1480,1.013,1481,1.797,1482,1.797,1483,2.422,1484,3.714,1485,2.422,1486,2.422,1487,2.422,1488,2.422,1489,2.422,1490,2.422,1491,2.422,1492,1.797,1493,1.797,1494,1.013,1495,3.356,1496,3.356,1497,2.422,1498,1.013,1499,1.797,1500,1.013,1501,3.356,1502,1.013,1503,1.797,1504,2.422,1505,5.765,1506,5.765,1507,6.688,1508,5.765,1509,6.002,1510,2.422,1511,2.422,1512,2.422,1513,2.422,1514,2.422,1515,2.422,1516,4.722,1517,4.722,1518,2.422,1519,2.422,1520,2.422,1521,2.422,1522,1.797,1523,1.013,1524,1.013,1525,1.797,1526,1.013,1527,4.021,1528,1.013,1529,1.013,1530,1.013,1531,1.013,1532,1.013,1533,1.013,1534,1.013,1535,1.013,1536,1.013,1537,1.013,1538,1.013,1539,1.013,1540,1.013,1541,1.013,1542,2.932,1543,1.013,1544,1.797,1545,1.013,1546,1.013,1547,2.422,1548,1.797,1549,2.932,1550,1.013,1551,1.013,1552,1.797,1553,1.797,1554,1.797,1555,1.013,1556,1.797,1557,1.013,1558,1.013,1559,1.013,1560,1.013,1561,1.013,1562,1.013,1563,1.013,1564,1.013,1565,1.013,1566,1.797,1567,1.013,1568,1.013,1569,1.013,1570,1.013,1571,1.013,1572,1.797,1573,1.013,1574,1.013,1575,1.013,1576,1.797,1577,1.797,1578,1.013,1579,1.013,1580,2.422,1581,1.797,1582,2.422,1583,1.013,1584,1.797,1585,1.013,1586,1.013,1587,1.013,1588,1.013,1589,1.013,1590,1.013,1591,2.422,1592,1.013,1593,1.013,1594,1.013,1595,1.013,1596,1.013,1597,1.013,1598,1.797,1599,1.013,1600,1.013,1601,1.013,1602,1.013,1603,1.797,1604,1.797,1605,1.797,1606,1.013,1607,1.013,1608,1.013,1609,1.013,1610,1.013,1611,1.013,1612,1.013,1613,1.013,1614,1.013,1615,1.013,1616,1.013,1617,1.013,1618,1.013,1619,1.013,1620,1.013,1621,1.013,1622,1.013,1623,1.797,1624,1.013,1625,1.013,1626,2.422,1627,1.797,1628,2.422,1629,1.797,1630,1.013,1631,1.797,1632,1.013,1633,1.013,1634,1.013,1635,1.013,1636,1.013,1637,1.013,1638,1.013,1639,1.013,1640,1.013,1641,1.013,1642,1.013,1643,1.013,1644,1.013,1645,1.013,1646,1.013,1647,1.013,1648,1.013,1649,1.013,1650,1.013,1651,1.013,1652,1.013,1653,1.013,1654,1.013,1655,1.013,1656,1.013,1657,1.013,1658,1.013,1659,1.013,1660,1.013,1661,1.013,1662,1.013,1663,1.013,1664,1.013,1665,1.013,1666,1.013,1667,1.013,1668,1.013,1669,1.797,1670,5.85,1671,5.85,1672,1.013,1673,1.013,1674,1.797,1675,1.013,1676,1.013,1677,1.013]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":645,"title":{},"body":{"injectables/HubService.html":{},"directives/TooltipDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1393,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":785,"title":{"interfaces/MitreAttackInfo-1.html":{}},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["1&scaling=scale",{"_index":1265,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["1/46",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1173,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":974,"title":{},"body":{"directives/TooltipDirective.html":{},"miscellaneous/variables.html":{}}}],["10/10",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1060,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"coverage.html":{}}}],["100vh",{"_index":1063,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["10203%2c0.3&t=l5l2apwzhiosa6rt",{"_index":1264,"title":{},"body":{"index.html":{}}}],["11",{"_index":1390,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["139.5.174.205",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["139.5.177.205",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15/15",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["15/18",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["16.0.0",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["16/18",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1274,"title":{},"body":{"index.html":{}}}],["17.2.0",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["2.11.8",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["2.2.3",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["2004.(citation",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2008",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2014",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2015.[3][4][5][6",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2016",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2016)(citation",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2017)(citation",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2018",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2018)(citation",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2019",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2020)(citation",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2021",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2024",{"_index":1331,"title":{},"body":{"license.html":{}}}],["25",{"_index":1392,"title":{},"body":{"overview.html":{}}}],["26165",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26165.(citation",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":496,"title":{},"body":{"components/HubComponent.html":{}}}],["29",{"_index":497,"title":{},"body":{"components/HubComponent.html":{}}}],["3",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/3",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4/4",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["4127)(citation",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49407&viewport",{"_index":1262,"title":{},"body":{"index.html":{}}}],["5",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.3.3",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6/6",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":819,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["7.8.0",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["74455",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["756oxaa4sgzh74rf.us.auth0.com",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1391,"title":{},"body":{"overview.html":{}}}],["8/9",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["85th",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["9/10",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1154,"title":{},"body":{"coverage.html":{}}}],["9649%2c",{"_index":1263,"title":{},"body":{"index.html":{}}}],["_cluster",{"_index":741,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["_cluster.id",{"_index":739,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["above",{"_index":1360,"title":{},"body":{"license.html":{}}}],["access",{"_index":1034,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["accordingly",{"_index":1118,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":211,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":219,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"injectables/HubEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["actiontype",{"_index":213,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"injectables/MitreAttackService.html":{}}}],["activate",{"_index":136,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["activatedroutesnapshot",{"_index":130,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["active",{"_index":289,"title":{},"body":{"interfaces/ClusterConfig.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/variables.html":{}}}],["actor",{"_index":705,"title":{},"body":{"components/MitreAttackComponent.html":{},"index.html":{}}}],["actorname",{"_index":561,"title":{},"body":{"injectables/HubService.html":{}}}],["actors",{"_index":1233,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["actual_component",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["add",{"_index":1110,"title":{},"body":{"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["adding",{"_index":1217,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additional",{"_index":83,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["address",{"_index":102,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["advisory",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["against",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agency",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ai",{"_index":1257,"title":{},"body":{"index.html":{}}}],["alias",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":358,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["allows",{"_index":1235,"title":{},"body":{"index.html":{}}}],["already",{"_index":925,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["alto",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["analysis",{"_index":1240,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1353,"title":{},"body":{"license.html":{}}}],["angular",{"_index":158,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":255,"title":{},"body":{"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":569,"title":{},"body":{"injectables/HubService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0_Guard.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"injectables/UserEffects.html":{},"components/UserLoginSystemComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anti",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":1276,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["apiinterceptor",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiresponse",{"_index":1087,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["apiurl",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app.component.html",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["app_callback",{"_index":1177,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1127,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appends",{"_index":913,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["application",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/HubEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application's",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applying",{"_index":669,"title":{},"body":{"interfaces/HubState.html":{}}}],["april",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apt",{"_index":495,"title":{},"body":{"components/HubComponent.html":{}}}],["apt28",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apt28)(citation",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apt29",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arguments",{"_index":898,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["arising",{"_index":1387,"title":{},"body":{"license.html":{}}}],["array",{"_index":188,"title":{},"body":{"components/CardComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["ars",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifacts",{"_index":1302,"title":{},"body":{"index.html":{}}}],["assets/images/card/polygon.svg",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assistance",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":169,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/ClusterConfig.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":492,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["att&ck",{"_index":1227,"title":{},"body":{"index.html":{}}}],["attacco",{"_index":765,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack",{"_index":303,"title":{},"body":{"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["attack'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["attack.component",{"_index":482,"title":{},"body":{"components/HubComponent.html":{},"injectables/MitreAttackService.html":{}}}],["attack.component.html",{"_index":683,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.scss",{"_index":684,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts",{"_index":680,"title":{},"body":{"components/MitreAttackComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["attack.component.ts:102",{"_index":727,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:108",{"_index":707,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:119",{"_index":723,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:134",{"_index":715,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:145",{"_index":691,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:154",{"_index":694,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:53",{"_index":717,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:59",{"_index":718,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:65",{"_index":726,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:71",{"_index":710,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:77",{"_index":724,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:84",{"_index":698,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:90",{"_index":709,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.component.ts:96",{"_index":701,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.github.io/attack",{"_index":1246,"title":{},"body":{"index.html":{}}}],["attack.json",{"_index":1253,"title":{},"body":{"index.html":{}}}],["attack.model.ts",{"_index":771,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["attack.service",{"_index":736,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attack.service.ts",{"_index":787,"title":{},"body":{"injectables/MitreAttackService.html":{},"coverage.html":{}}}],["attack.service.ts:24",{"_index":803,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["attack.service.ts:32",{"_index":794,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["attack.service.ts:52",{"_index":797,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["attack.service.ts:79",{"_index":799,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["attack/enterprise",{"_index":1252,"title":{},"body":{"index.html":{}}}],["attack/mitre",{"_index":481,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["attack/services/mitre",{"_index":786,"title":{},"body":{"injectables/MitreAttackService.html":{},"coverage.html":{}}}],["attackhacker",{"_index":685,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attackhacker.ipadresss",{"_index":755,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attackhacker.title",{"_index":752,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attacks",{"_index":700,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attaco",{"_index":759,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["attempt",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attributed",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["august",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":1116,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["auth0",{"_index":75,"title":{},"body":{"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["auth0/auth0",{"_index":157,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["auth0_guard",{"_index":119,"title":{"injectables/Auth0_Guard.html":{}},"body":{"injectables/Auth0_Guard.html":{},"coverage.html":{}}}],["auth0config",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth0error",{"_index":69,"title":{"interfaces/Auth0Error.html":{}},"body":{"interfaces/Auth0Error.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["auth0errortype",{"_index":114,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["auth0providers",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth0service",{"_index":124,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["authenticate",{"_index":1000,"title":{},"body":{"injectables/UserFacade.html":{}}}],["authenticated",{"_index":1055,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["authenticating",{"_index":164,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["authentication",{"_index":147,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["authenticationmanager",{"_index":1016,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["authfeaturekey",{"_index":1115,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmodule.forroot",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorization",{"_index":1218,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["authorizationparams",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1378,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":142,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["authservice.getaccesstokensilently().pipe",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatically",{"_index":1017,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"index.html":{}}}],["base",{"_index":1402,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":415,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"directives/TooltipDirective.html":{},"index.html":{}}}],["bear",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["before",{"_index":890,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["behaviorsubject",{"_index":1085,"title":{},"body":{"injectables/UserService.html":{}}}],["being",{"_index":699,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["between",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":914,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["boolean",{"_index":106,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/ChipConfig.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"directives/TooltipDirective.html":{},"interfaces/UserModel.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":812,"title":{},"body":{"injectables/MitreAttackService.html":{},"dependencies.html":{}}}],["bootstrap/ng",{"_index":811,"title":{},"body":{"injectables/MitreAttackService.html":{},"dependencies.html":{}}}],["break",{"_index":840,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["browser",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["brute",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":1301,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":374,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["c",{"_index":1330,"title":{},"body":{"license.html":{}}}],["callback",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["called",{"_index":1018,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["campaign",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivate",{"_index":128,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["canactivate(undefined",{"_index":129,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["capabilities",{"_index":1320,"title":{},"body":{"index.html":{}}}],["card",{"_index":176,"title":{},"body":{"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["card'},{'name",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["card.component.html",{"_index":178,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":179,"title":{},"body":{"components/CardComponent.html":{}}}],["card.model",{"_index":865,"title":{},"body":{"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{}}}],["card/card.component",{"_index":847,"title":{},"body":{"components/ModalComponent.html":{}}}],["card_directives",{"_index":177,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["card_polygon",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cardaction",{"_index":212,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/HubComponent.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/enumerations.html":{}}}],["cardaction.info",{"_index":821,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["cardaction.settings",{"_index":824,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["cardcomponent",{"_index":38,"title":{"components/CardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardconfig",{"_index":180,"title":{"interfaces/CardConfig.html":{}},"body":{"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"coverage.html":{}}}],["cardconfig().footer",{"_index":199,"title":{},"body":{"components/CardComponent.html":{}}}],["cardconfig().header.label",{"_index":195,"title":{},"body":{"components/CardComponent.html":{}}}],["cardconfig().header.value",{"_index":196,"title":{},"body":{"components/CardComponent.html":{}}}],["cardfooter",{"_index":205,"title":{"interfaces/CardFooter.html":{}},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"coverage.html":{}}}],["cardheader",{"_index":206,"title":{"interfaces/CardHeader.html":{}},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"coverage.html":{}}}],["cardicon",{"_index":210,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/HubComponent.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/enumerations.html":{}}}],["cardicon.info",{"_index":820,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["cardicon.settings",{"_index":823,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["cards",{"_index":686,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{}}}],["case",{"_index":826,"title":{},"body":{"injectables/MitreAttackService.html":{},"injectables/UserService.html":{}}}],["castro",{"_index":1333,"title":{},"body":{"license.html":{}}}],["catch",{"_index":1041,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["catcherror((err",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cells",{"_index":776,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["center",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["centered",{"_index":838,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["chain",{"_index":370,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["change",{"_index":1294,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1047,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["charge",{"_index":1338,"title":{},"body":{"license.html":{}}}],["che",{"_index":653,"title":{},"body":{"injectables/HubService.html":{}}}],["check",{"_index":932,"title":{},"body":{"directives/TooltipDirective.html":{},"index.html":{}}}],["checks",{"_index":930,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["chemical",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chemicals",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["chip",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["chip'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["chip.component.html",{"_index":227,"title":{},"body":{"components/ChipComponent.html":{}}}],["chip.component.scss",{"_index":228,"title":{},"body":{"components/ChipComponent.html":{}}}],["chip.model",{"_index":275,"title":{},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{}}}],["chip/chip.component",{"_index":254,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["chip?:any",{"_index":781,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["chipcomponent",{"_index":40,"title":{"components/ChipComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chipconfig",{"_index":229,"title":{"interfaces/ChipConfig.html":{}},"body":{"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/MitreAttackComponent.html":{},"coverage.html":{}}}],["chipconfig().label",{"_index":234,"title":{},"body":{"components/ChipComponent.html":{}}}],["chips",{"_index":245,"title":{},"body":{"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"miscellaneous/variables.html":{}}}],["chipset",{"_index":252,"title":{},"body":{"components/ChipsetComponent.html":{},"miscellaneous/variables.html":{}}}],["chipsetcomponent",{"_index":42,"title":{"components/ChipsetComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["chipsetconfig",{"_index":250,"title":{"interfaces/ChipsetConfig.html":{}},"body":{"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"coverage.html":{}}}],["chipsetconfig().content",{"_index":266,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["chipsetconfig().header",{"_index":262,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["chipsetcontent",{"_index":272,"title":{"interfaces/ChipsetContent.html":{}},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"coverage.html":{}}}],["chipsetheader",{"_index":274,"title":{"interfaces/ChipsetHeader.html":{}},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"coverage.html":{}}}],["choice",{"_index":1316,"title":{},"body":{"index.html":{}}}],["christian",{"_index":1332,"title":{},"body":{"license.html":{}}}],["ci",{"_index":861,"title":{},"body":{"components/ModalComponent.html":{}}}],["circle",{"_index":223,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"miscellaneous/enumerations.html":{}}}],["citation",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["citations",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["claim",{"_index":1381,"title":{},"body":{"license.html":{}}}],["class",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["classicon",{"_index":236,"title":{},"body":{"interfaces/ChipConfig.html":{}}}],["clears",{"_index":908,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["cleartimeout(this.showtimeout",{"_index":947,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["cli",{"_index":1272,"title":{},"body":{"index.html":{}}}],["client",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clientid",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clinton",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["close",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster",{"_index":279,"title":{},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/variables.html":{}}}],["cluster'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["cluster.active",{"_index":742,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["cluster.component.html",{"_index":281,"title":{},"body":{"components/ClusterComponent.html":{}}}],["cluster.component.scss",{"_index":282,"title":{},"body":{"components/ClusterComponent.html":{}}}],["cluster.id",{"_index":740,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["cluster.techniques.map((technique",{"_index":748,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["cluster.techniques?.length",{"_index":746,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["cluster_directives",{"_index":280,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clustercomponent",{"_index":45,"title":{"components/ClusterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clusterconfig",{"_index":283,"title":{"interfaces/ClusterConfig.html":{}},"body":{"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"coverage.html":{}}}],["clusterconfig().name",{"_index":287,"title":{},"body":{"components/ClusterComponent.html":{}}}],["clusters",{"_index":396,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["code",{"_index":1296,"title":{},"body":{"index.html":{}}}],["col",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["command",{"_index":1282,"title":{},"body":{"index.html":{}}}],["committee",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":247,"title":{},"body":{"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component_template",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["compromise",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compromised",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["con",{"_index":616,"title":{},"body":{"injectables/HubService.html":{}}}],["conditions",{"_index":1359,"title":{},"body":{"license.html":{}}}],["conducted",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":184,"title":{},"body":{"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":426,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{}}}],["configures",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuring",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["congressional",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":1388,"title":{},"body":{"license.html":{}}}],["consent_required",{"_index":116,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["console",{"_index":1107,"title":{},"body":{"injectables/UserService.html":{}}}],["console.error('auth_0",{"_index":1108,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('interceptor",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log(this.tooltiptext",{"_index":957,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["const",{"_index":191,"title":{},"body":{"components/CardComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["constant",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constants",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":410,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{}}}],["constructor(action",{"_index":983,"title":{},"body":{"injectables/UserEffects.html":{}}}],["constructor(actions",{"_index":507,"title":{},"body":{"injectables/HubEffects.html":{}}}],["constructor(private",{"_index":538,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"directives/TooltipDirective.html":{},"injectables/UserFacade.html":{}}}],["constructor(renderer",{"_index":884,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["constructor(store",{"_index":542,"title":{},"body":{"injectables/HubFacade.html":{},"injectables/UserFacade.html":{}}}],["containing",{"_index":256,"title":{},"body":{"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["content",{"_index":271,"title":{},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"miscellaneous/variables.html":{}}}],["content.label",{"_index":855,"title":{},"body":{"components/ModalComponent.html":{}}}],["content.value",{"_index":854,"title":{},"body":{"components/ModalComponent.html":{}}}],["contract",{"_index":1384,"title":{},"body":{"license.html":{}}}],["coordinate",{"_index":936,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["coordinates",{"_index":906,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["copies",{"_index":1355,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1341,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1329,"title":{},"body":{"license.html":{}}}],["core/modules/user/models/user.model",{"_index":471,"title":{},"body":{"components/HubComponent.html":{}}}],["core/modules/user/service/user.service",{"_index":469,"title":{},"body":{"components/HubComponent.html":{}}}],["core/modules/user/store/user.facade",{"_index":472,"title":{},"body":{"components/HubComponent.html":{}}}],["countries",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["course",{"_index":379,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["court",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":1121,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cozy",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creare",{"_index":581,"title":{},"body":{"injectables/HubService.html":{}}}],["createaction",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[get",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":325,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"components/UserLoginSystemComponent.html":{}}}],["created_by_ref",{"_index":326,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["createeffect",{"_index":512,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{}}}],["createfeatureselector(authfeaturekey",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector(hublistfeaturekey",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createmitrecluster",{"_index":790,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["createmitrecluster(mitreattackinfo",{"_index":793,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["createmitretechniques",{"_index":791,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["createmitretechniques(mitreattackinfo",{"_index":796,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["createreducer",{"_index":662,"title":{},"body":{"interfaces/HubState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":795,"title":{},"body":{"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{}}}],["createselector",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(getuserfeature",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtooltip",{"_index":869,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["crowdstrike",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":208,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{}}}],["cta",{"_index":201,"title":{},"body":{"components/CardComponent.html":{}}}],["current",{"_index":453,"title":{},"body":{"components/HubComponent.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["custom",{"_index":954,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["cyber",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cybersecurity",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1382,"title":{},"body":{"license.html":{}}}],["dark",{"_index":239,"title":{},"body":{"interfaces/ChipConfig.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":168,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["data.map(item",{"_index":627,"title":{},"body":{"injectables/HubService.html":{}}}],["data.objects.filter(mitreinfo",{"_index":577,"title":{},"body":{"injectables/HubService.html":{}}}],["data.objects.find(e",{"_index":599,"title":{},"body":{"injectables/HubService.html":{}}}],["data.objects.foreach((mitreinfo",{"_index":588,"title":{},"body":{"injectables/HubService.html":{}}}],["date",{"_index":95,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["deal",{"_index":1343,"title":{},"body":{"license.html":{}}}],["dealerschoice)(citation",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dealings",{"_index":1389,"title":{},"body":{"license.html":{}}}],["deas",{"_index":309,"title":{},"body":{"components/DeasComponent.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["deas'},{'name",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["deas.component.html",{"_index":312,"title":{},"body":{"components/DeasComponent.html":{}}}],["deas.component.scss",{"_index":313,"title":{},"body":{"components/DeasComponent.html":{}}}],["deascomponent",{"_index":47,"title":{"components/DeasComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{}}}],["deasdemo",{"_index":1224,"title":{},"body":{"index.html":{}}}],["debugging",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":918,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["dedicated",{"_index":1112,"title":{},"body":{"injectables/UserService.html":{}}}],["default",{"_index":143,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":133,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["definition",{"_index":314,"title":{"interfaces/Definition.html":{}},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["definition_type",{"_index":365,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["delay",{"_index":570,"title":{},"body":{"injectables/HubService.html":{},"directives/TooltipDirective.html":{}}}],["delle",{"_index":584,"title":{},"body":{"injectables/HubService.html":{}}}],["demo",{"_index":1242,"title":{},"body":{"index.html":{}}}],["democratic",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":1184,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deployment",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deployurl",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["describing",{"_index":84,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["descrizione",{"_index":756,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["destroy",{"_index":397,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["destroying",{"_index":1023,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["destroys",{"_index":420,"title":{},"body":{"components/HubComponent.html":{}}}],["destruction",{"_index":431,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["detects",{"_index":385,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["determines",{"_index":135,"title":{},"body":{"injectables/Auth0_Guard.html":{},"directives/TooltipDirective.html":{}}}],["dev",{"_index":1290,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":1288,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1195,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["di",{"_index":758,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["different",{"_index":218,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"miscellaneous/enumerations.html":{}}}],["directive",{"_index":33,"title":{"directives/TooltipDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["directives/tooltip.directive",{"_index":187,"title":{},"body":{"components/CardComponent.html":{},"components/ClusterComponent.html":{}}}],["directives_hub",{"_index":392,"title":{},"body":{"components/HubComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1300,"title":{},"body":{"index.html":{}}}],["directorate",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directory",{"_index":1305,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":989,"title":{},"body":{"injectables/UserEffects.html":{}}}],["dispatched",{"_index":511,"title":{},"body":{"injectables/HubEffects.html":{},"interfaces/HubState.html":{},"injectables/UserEffects.html":{},"miscellaneous/variables.html":{}}}],["dispatches",{"_index":520,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/UserFacade.html":{}}}],["display",{"_index":897,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["displayed",{"_index":926,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["displaying",{"_index":681,"title":{},"body":{"components/MitreAttackComponent.html":{},"directives/TooltipDirective.html":{}}}],["displays",{"_index":1226,"title":{},"body":{"index.html":{}}}],["disponibile",{"_index":768,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["dist",{"_index":1304,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1351,"title":{},"body":{"license.html":{}}}],["district",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dnc",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document",{"_index":1013,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["document.documentelement.scrollleft",{"_index":969,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["document.documentelement.scrolltop",{"_index":972,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["documentation",{"_index":1122,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doj",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["domain",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["domains",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doping",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["down&starting",{"_index":1266,"title":{},"body":{"index.html":{}}}],["drovorub",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dukes.[7][8",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dynamic",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":603,"title":{},"body":{"injectables/HubService.html":{}}}],["e.g",{"_index":1234,"title":{},"body":{"index.html":{}}}],["e.id",{"_index":600,"title":{},"body":{"injectables/HubService.html":{}}}],["e2e",{"_index":1314,"title":{},"body":{"index.html":{}}}],["easier",{"_index":1241,"title":{},"body":{"index.html":{}}}],["effect",{"_index":518,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{}}}],["effects",{"_index":500,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{},"miscellaneous/variables.html":{}}}],["election",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{}}}],["elementi",{"_index":652,"title":{},"body":{"injectables/HubService.html":{}}}],["elements",{"_index":894,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["email",{"_index":101,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["email_verified",{"_index":107,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["end",{"_index":1313,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["endpoints",{"_index":573,"title":{},"body":{"injectables/HubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["enterprise",{"_index":1248,"title":{},"body":{"index.html":{}}}],["entit",{"_index":595,"title":{},"body":{"injectables/HubService.html":{}}}],["entity",{"_index":598,"title":{},"body":{"injectables/HubService.html":{}}}],["enum",{"_index":217,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"miscellaneous/enumerations.html":{}}}],["enumeration",{"_index":433,"title":{},"body":{"components/HubComponent.html":{}}}],["enumerations",{"_index":1206,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":571,"title":{},"body":{"injectables/HubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.auth0.clientid",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.auth0.domain",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.deployurl}/${environment.auth0.redirect_uri",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":572,"title":{},"body":{"injectables/HubService.html":{}}}],["err",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err.error",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error",{"_index":73,"title":{},"body":{"interfaces/Auth0Error.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["error('auth0",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error('network",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error_description",{"_index":79,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["errors",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eset",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esterno",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["europe",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":899,"title":{},"body":{"directives/TooltipDirective.html":{},"license.html":{}}}],["event.clienty",{"_index":945,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["execute",{"_index":1310,"title":{},"body":{"index.html":{}}}],["executed",{"_index":214,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{}}}],["export",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["express",{"_index":1369,"title":{},"body":{"license.html":{}}}],["extended",{"_index":459,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/typealiases.html":{}}}],["extendedmitreattackinfo",{"_index":300,"title":{},"body":{"interfaces/ClusterConfig.html":{},"components/HubComponent.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/typealiases.html":{}}}],["extendedmitredata",{"_index":618,"title":{},"body":{"injectables/HubService.html":{}}}],["extends",{"_index":1401,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["external",{"_index":296,"title":{},"body":{"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{}}}],["external_id",{"_index":368,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/variables.html":{}}}],["external_references",{"_index":327,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["externalid",{"_index":290,"title":{},"body":{"interfaces/ClusterConfig.html":{},"injectables/MitreAttackService.html":{}}}],["externalreference",{"_index":328,"title":{"interfaces/ExternalReference.html":{}},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"coverage.html":{}}}],["fa",{"_index":222,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"miscellaneous/enumerations.html":{}}}],["facade",{"_index":436,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{}}}],["facility",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":743,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":89,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["family_name",{"_index":90,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["fase",{"_index":761,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["fasi",{"_index":757,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["feature",{"_index":502,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":548,"title":{},"body":{"injectables/HubFacade.html":{}}}],["fetching",{"_index":504,"title":{},"body":{"injectables/HubEffects.html":{}}}],["figma",{"_index":1254,"title":{},"body":{"index.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["files",{"_index":1295,"title":{},"body":{"index.html":{},"license.html":{}}}],["filtedatasubscription",{"_index":687,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["filter",{"_index":407,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/UserFacade.html":{},"miscellaneous/variables.html":{}}}],["filter(boolean",{"_index":446,"title":{},"body":{"components/HubComponent.html":{}}}],["filter(hackertype",{"_index":412,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["filter(item",{"_index":648,"title":{},"body":{"injectables/HubService.html":{}}}],["filter(technique",{"_index":643,"title":{},"body":{"injectables/HubService.html":{}}}],["filterbyactorrecursive",{"_index":558,"title":{},"body":{"injectables/HubService.html":{}}}],["filterbyactorrecursive(data",{"_index":560,"title":{},"body":{"injectables/HubService.html":{}}}],["filtered",{"_index":522,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{}}}],["filteredsubtechniques",{"_index":637,"title":{},"body":{"injectables/HubService.html":{}}}],["filtereduses",{"_index":640,"title":{},"body":{"injectables/HubService.html":{}}}],["filtering",{"_index":1236,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["filtermitredata",{"_index":505,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filtermitredatasuccess",{"_index":536,"title":{},"body":{"injectables/HubEffects.html":{},"interfaces/HubState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["filters",{"_index":414,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["filtra",{"_index":628,"title":{},"body":{"injectables/HubService.html":{}}}],["filtremitredata",{"_index":541,"title":{},"body":{"injectables/HubFacade.html":{}}}],["filtremitredata(mitreattackdata",{"_index":545,"title":{},"body":{"injectables/HubFacade.html":{}}}],["fireeye",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":1317,"title":{},"body":{"index.html":{}}}],["first_seen",{"_index":359,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["fitness",{"_index":1374,"title":{},"body":{"license.html":{}}}],["five",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flag",{"_index":238,"title":{},"body":{"interfaces/ChipConfig.html":{}}}],["flex",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["following",{"_index":1281,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":203,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["for(card",{"_index":858,"title":{},"body":{"components/ModalComponent.html":{}}}],["for(chip",{"_index":268,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["for(content",{"_index":851,"title":{},"body":{"components/ModalComponent.html":{}}}],["for(cta",{"_index":198,"title":{},"body":{"components/CardComponent.html":{}}}],["for(header",{"_index":261,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["for(row",{"_index":265,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["force",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foreign",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":1228,"title":{},"body":{"index.html":{}}}],["free",{"_index":1337,"title":{},"body":{"license.html":{}}}],["full",{"_index":92,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["function",{"_index":225,"title":{},"body":{"interfaces/CardFooter.html":{},"interfaces/ClusterConfig.html":{},"interfaces/HubState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1211,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1358,"title":{},"body":{"license.html":{}}}],["further",{"_index":1321,"title":{},"body":{"index.html":{}}}],["fw?page",{"_index":1259,"title":{},"body":{"index.html":{}}}],["g",{"_index":1284,"title":{},"body":{"index.html":{}}}],["g0000",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["g0007",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["g0008",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gear",{"_index":224,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"miscellaneous/enumerations.html":{}}}],["general",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["generate",{"_index":1298,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1271,"title":{},"body":{"index.html":{}}}],["generic",{"_index":494,"title":{},"body":{"components/HubComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["getmitredata",{"_index":506,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmitredatasuccess",{"_index":527,"title":{},"body":{"injectables/HubEffects.html":{},"interfaces/HubState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":1222,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuserfeature",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["given",{"_index":87,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["given_name",{"_index":88,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["gli",{"_index":651,"title":{},"body":{"injectables/HubService.html":{}}}],["globally",{"_index":1279,"title":{},"body":{"index.html":{}}}],["go",{"_index":1324,"title":{},"body":{"index.html":{}}}],["government",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["governments",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":1336,"title":{},"body":{"license.html":{}}}],["grizzly",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["groups",{"_index":1239,"title":{},"body":{"index.html":{}}}],["gru",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gtsss",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guard",{"_index":163,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["guard.ts",{"_index":122,"title":{},"body":{"injectables/Auth0_Guard.html":{},"coverage.html":{}}}],["guard.ts:20",{"_index":150,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["guard.ts:26",{"_index":146,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["guard.ts:34",{"_index":134,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["hacker",{"_index":416,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["hackersmock",{"_index":728,"title":{},"body":{"components/MitreAttackComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hackersmock.generic",{"_index":697,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["hackersmock[filter",{"_index":714,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["hackertype",{"_index":398,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/enumerations.html":{}}}],["hackertype.apt28",{"_index":667,"title":{},"body":{"interfaces/HubState.html":{},"miscellaneous/variables.html":{}}}],["hackertype.apt29",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hackertype.generic",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["halo",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handle",{"_index":297,"title":{},"body":{"interfaces/ClusterConfig.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["handler",{"_index":1088,"title":{},"body":{"injectables/UserService.html":{}}}],["handles",{"_index":422,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/UserService.html":{}}}],["handling",{"_index":788,"title":{},"body":{"injectables/MitreAttackService.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["hanno",{"_index":654,"title":{},"body":{"injectables/HubService.html":{}}}],["header",{"_index":204,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"miscellaneous/variables.html":{}}}],["header.label",{"_index":263,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["header:string",{"_index":778,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["headers",{"_index":1219,"title":{},"body":{"miscellaneous/functions.html":{}}}],["height",{"_index":1062,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["help",{"_index":1322,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1335,"title":{},"body":{"license.html":{}}}],["hides",{"_index":910,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hidetooltip",{"_index":870,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hierarchy",{"_index":461,"title":{},"body":{"components/HubComponent.html":{}}}],["highcharts",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["hillary",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holders",{"_index":1379,"title":{},"body":{"license.html":{}}}],["hook",{"_index":419,"title":{},"body":{"components/HubComponent.html":{}}}],["host",{"_index":1058,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["hostlistener",{"_index":938,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostlistener('mouseenter",{"_index":919,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostlistener('mouseleave",{"_index":920,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostlistener('mousemove",{"_index":922,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["hostlisteners",{"_index":880,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["html",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{}}}],["htmlelement",{"_index":928,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["htmlelement.offsetwidth",{"_index":980,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["htmlelement.scrollwidth",{"_index":979,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["http",{"_index":557,"title":{},"body":{"injectables/HubService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:1234",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1292,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":568,"title":{},"body":{"injectables/HubService.html":{},"injectables/UserService.html":{}}}],["httphandlerfn",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httprequest",{"_index":1214,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["https://attack.mitre.org",{"_index":1243,"title":{},"body":{"index.html":{}}}],["https://attack.mitre.org/groups",{"_index":1244,"title":{},"body":{"index.html":{}}}],["https://attack.mitre.org/groups/g0007",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/mitre/cti/blob/master/enterprise",{"_index":1251,"title":{},"body":{"index.html":{}}}],["https://mitre",{"_index":1245,"title":{},"body":{"index.html":{}}}],["https://www.figma.com/proto/526imlmqdt7kkcfgaekcd5/deas",{"_index":1256,"title":{},"body":{"index.html":{}}}],["hub",{"_index":390,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["hub'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["hub.actions",{"_index":537,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{}}}],["hub.component.html",{"_index":394,"title":{},"body":{"components/HubComponent.html":{}}}],["hub.component.scss",{"_index":395,"title":{},"body":{"components/HubComponent.html":{}}}],["hub.selectors",{"_index":553,"title":{},"body":{"injectables/HubFacade.html":{}}}],["hub/models/hub.models",{"_index":732,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["hub/services/hub.service",{"_index":733,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["hub/store/hub.facade",{"_index":734,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["hubcomponent",{"_index":49,"title":{"components/HubComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{}}}],["hubeffects",{"_index":498,"title":{"injectables/HubEffects.html":{}},"body":{"injectables/HubEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hubfacade",{"_index":389,"title":{"injectables/HubFacade.html":{}},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"coverage.html":{}}}],["hubfeature",{"_index":1165,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["hublistfeaturekey",{"_index":664,"title":{},"body":{"interfaces/HubState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hubreducer",{"_index":670,"title":{},"body":{"interfaces/HubState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hubservice",{"_index":399,"title":{"injectables/HubService.html":{}},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"coverage.html":{}}}],["hubstate",{"_index":660,"title":{"interfaces/HubState.html":{}},"body":{"interfaces/HubState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":209,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["icons",{"_index":221,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"miscellaneous/enumerations.html":{}}}],["id",{"_index":291,"title":{},"body":{"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/variables.html":{}}}],["id=0%3a1&node",{"_index":1260,"title":{},"body":{"index.html":{}}}],["id=722%3a60720",{"_index":1269,"title":{},"body":{"index.html":{}}}],["id=977",{"_index":1261,"title":{},"body":{"index.html":{}}}],["identified",{"_index":703,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["identifier",{"_index":109,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"coverage.html":{}}}],["identity_class",{"_index":364,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["if(attackhacker",{"_index":751,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["if(cardconfig",{"_index":193,"title":{},"body":{"components/CardComponent.html":{}}}],["if(cardconfig().footer",{"_index":197,"title":{},"body":{"components/CardComponent.html":{}}}],["if(cardconfig().header",{"_index":194,"title":{},"body":{"components/CardComponent.html":{}}}],["if(cards.length",{"_index":766,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["if(chipconfig",{"_index":232,"title":{},"body":{"components/ChipComponent.html":{}}}],["if(chipconfig().icon",{"_index":233,"title":{},"body":{"components/ChipComponent.html":{}}}],["if(chipsetconfig",{"_index":259,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["if(chipsetconfig().content",{"_index":264,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["if(chipsetconfig().header",{"_index":260,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["if(clusterconfig",{"_index":286,"title":{},"body":{"components/ClusterComponent.html":{}}}],["if(clusters.length",{"_index":764,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["if(content.label",{"_index":853,"title":{},"body":{"components/ModalComponent.html":{}}}],["if(mitreattackinfo",{"_index":750,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["if(mitredatafilter",{"_index":491,"title":{},"body":{"components/HubComponent.html":{}}}],["if(modalconfig.cards.length",{"_index":856,"title":{},"body":{"components/ModalComponent.html":{}}}],["if(modalconfig.content.length",{"_index":850,"title":{},"body":{"components/ModalComponent.html":{}}}],["image",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":1318,"title":{},"body":{"index.html":{}}}],["implied",{"_index":1370,"title":{},"body":{"license.html":{}}}],["import",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["important",{"_index":1061,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["importprovidersfrom",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["included",{"_index":1363,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["includi",{"_index":649,"title":{},"body":{"injectables/HubService.html":{}}}],["including",{"_index":1229,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":76,"title":{"index.html":{}},"body":{"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":103,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/ClusterConfig.html":{},"interfaces/UserModel.html":{}}}],["indicating",{"_index":141,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/ChipConfig.html":{},"directives/TooltipDirective.html":{}}}],["indicted",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indictment",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indirizzo",{"_index":753,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["industry",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":304,"title":{},"body":{"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/typealiases.html":{}}}],["informazioni",{"_index":827,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["initial",{"_index":665,"title":{},"body":{"interfaces/HubState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["initialize",{"_index":1014,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["initializes",{"_index":509,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{}}}],["initialstate",{"_index":666,"title":{},"body":{"interfaces/HubState.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":153,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["inject(authservice",{"_index":145,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["inject(document",{"_index":1025,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["inject(httpclient",{"_index":566,"title":{},"body":{"injectables/HubService.html":{},"injectables/UserService.html":{}}}],["inject(hubfacade",{"_index":434,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["inject(hubservice",{"_index":440,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["inject(mitreattackservice",{"_index":725,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["inject(ngbmodal",{"_index":802,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["inject(router",{"_index":149,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/UserLoginSystemComponent.html":{}}}],["inject(userfacade",{"_index":462,"title":{},"body":{"components/HubComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["inject(userservice",{"_index":466,"title":{},"body":{"components/HubComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["injectable",{"_index":118,"title":{"injectables/Auth0_Guard.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{}},"body":{"injectables/Auth0_Guard.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":120,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injected",{"_index":804,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["input",{"_index":185,"title":{},"body":{"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{}}}],["input.required",{"_index":192,"title":{},"body":{"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{}}}],["inputs",{"_index":181,"title":{},"body":{"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{}}}],["install",{"_index":1278,"title":{},"body":{"index.html":{}}}],["instance",{"_index":151,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["institutes",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intelligence",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interacted",{"_index":215,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{}}}],["interacting",{"_index":437,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{}}}],["interaction",{"_index":424,"title":{},"body":{"components/HubComponent.html":{}}}],["interaction_required",{"_index":117,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["interceptor",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":68,"title":{"interfaces/Auth0Error.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"interfaces/UserModel.html":{},"interfaces/UserState.html":{}},"body":{"interfaces/Auth0Error.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"interfaces/UserModel.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["interfaces",{"_index":70,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"interfaces/UserModel.html":{},"interfaces/UserState.html":{},"overview.html":{}}}],["interfere",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["involved",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ip",{"_index":754,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["ipadresss",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ipsum",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iron",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isauthenticated",{"_index":1056,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["isdark",{"_index":237,"title":{},"body":{"interfaces/ChipConfig.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["it's",{"_index":924,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["item",{"_index":647,"title":{},"body":{"injectables/HubService.html":{}}}],["item.subtechniques",{"_index":630,"title":{},"body":{"injectables/HubService.html":{}}}],["item.subtechniques.length",{"_index":657,"title":{},"body":{"injectables/HubService.html":{}}}],["item.techniques",{"_index":635,"title":{},"body":{"injectables/HubService.html":{}}}],["item.techniques.length",{"_index":659,"title":{},"body":{"injectables/HubService.html":{}}}],["item.techniques.map(technique",{"_index":636,"title":{},"body":{"injectables/HubService.html":{}}}],["item.uses",{"_index":632,"title":{},"body":{"injectables/HubService.html":{}}}],["item.uses.filter(use",{"_index":633,"title":{},"body":{"injectables/HubService.html":{}}}],["item.uses.length",{"_index":658,"title":{},"body":{"injectables/HubService.html":{}}}],["january",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jar)(citation",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jm23xl7wtu0ozm8sb8litlfymws38a70",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json",{"_index":1250,"title":{},"body":{"index.html":{}}}],["jul",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["july",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["june",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":1312,"title":{},"body":{"index.html":{}}}],["kcp.phase_name",{"_index":624,"title":{},"body":{"injectables/HubService.html":{}}}],["key",{"_index":587,"title":{},"body":{"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["kill",{"_index":369,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["kill_chain_name",{"_index":372,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["kill_chain_phases",{"_index":341,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["killchainphase",{"_index":342,"title":{"interfaces/KillChainPhase.html":{}},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"coverage.html":{}}}],["kind",{"_index":1368,"title":{},"body":{"license.html":{}}}],["kit",{"_index":484,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":207,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"miscellaneous/variables.html":{}}}],["labels",{"_index":338,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["laboratory",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":98,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["last_seen",{"_index":360,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["layer.json",{"_index":1249,"title":{},"body":{"index.html":{}}}],["le",{"_index":617,"title":{},"body":{"injectables/HubService.html":{},"components/MitreAttackComponent.html":{}}}],["left",{"_index":975,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["left}px",{"_index":978,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["legend",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["lg",{"_index":837,"title":{},"body":{"injectables/MitreAttackService.html":{},"miscellaneous/variables.html":{}}}],["liability",{"_index":1383,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1380,"title":{},"body":{"license.html":{}}}],["libraries/components/card/card.component",{"_index":477,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["libraries/components/chip",{"_index":730,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["libraries/components/chip/chip.component",{"_index":729,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["libraries/components/cluster/cluster.component",{"_index":479,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["libraries/components/loader/loader.component",{"_index":476,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["libraries/components/modal/modal.component",{"_index":806,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["libraries/directives/tooltip.directive",{"_index":473,"title":{},"body":{"components/HubComponent.html":{}}}],["libraries/models/card.model",{"_index":478,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["libraries/models/cluster.model",{"_index":480,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["libraries/models/modal.model",{"_index":808,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["license",{"_index":1327,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":418,"title":{},"body":{"components/HubComponent.html":{}}}],["limitation",{"_index":1346,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1371,"title":{},"body":{"license.html":{}}}],["line",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["link",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lista",{"_index":614,"title":{},"body":{"injectables/HubService.html":{}}}],["listener",{"_index":901,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["literal",{"_index":1399,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["loader",{"_index":674,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["loader.component.html",{"_index":675,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":676,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadercomponent",{"_index":51,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1035,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["localstorage.getitem('token')?.length",{"_index":170,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["localstorage.removeitem('token",{"_index":1043,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.setitem('token",{"_index":1037,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["log",{"_index":489,"title":{},"body":{"components/HubComponent.html":{}}}],["logged",{"_index":991,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["login",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login(user",{"_index":998,"title":{},"body":{"injectables/UserFacade.html":{},"injectables/UserService.html":{}}}],["login_required",{"_index":115,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["loginsuccess",{"_index":990,"title":{},"body":{"injectables/UserEffects.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logout",{"_index":423,"title":{},"body":{"components/HubComponent.html":{}}}],["logoutparams",{"_index":1102,"title":{},"body":{"injectables/UserService.html":{}}}],["logs",{"_index":1070,"title":{},"body":{"injectables/UserService.html":{}}}],["lorem",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["making",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["malicious",{"_index":704,"title":{},"body":{"components/MitreAttackComponent.html":{},"index.html":{}}}],["malware",{"_index":383,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["management",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["managing",{"_index":430,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["map",{"_index":534,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{}}}],["map((response",{"_index":526,"title":{},"body":{"injectables/HubEffects.html":{}}}],["map((subtechnique",{"_index":609,"title":{},"body":{"injectables/HubService.html":{}}}],["map((technique",{"_index":626,"title":{},"body":{"injectables/HubService.html":{}}}],["map((user",{"_index":988,"title":{},"body":{"injectables/UserEffects.html":{}}}],["mapmitredata",{"_index":559,"title":{},"body":{"injectables/HubService.html":{}}}],["mapmitredata(data",{"_index":564,"title":{},"body":{"injectables/HubService.html":{}}}],["mappa",{"_index":583,"title":{},"body":{"injectables/HubService.html":{}}}],["marking",{"_index":375,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matrix",{"_index":377,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["md",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["member",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":1373,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1349,"title":{},"body":{"license.html":{}}}],["message",{"_index":80,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{}}}],["methods",{"_index":127,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["military",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["milliseconds",{"_index":889,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["miscellaneous",{"_index":1205,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1328,"title":{},"body":{"license.html":{}}}],["mitigates",{"_index":384,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["mitradatasubscription",{"_index":400,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["mitre",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mitreattackcomponent",{"_index":53,"title":{"components/MitreAttackComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mitreattackconfig",{"_index":769,"title":{"interfaces/MitreAttackConfig.html":{}},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["mitreattackdata",{"_index":318,"title":{"interfaces/MitreAttackData.html":{}},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mitreattackfooter",{"_index":772,"title":{"interfaces/MitreAttackFooter.html":{}},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["mitreattackheader",{"_index":773,"title":{"interfaces/MitreAttackHeader.html":{}},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["mitreattackinfo",{"_index":320,"title":{"interfaces/MitreAttackInfo-1.html":{}},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["mitreattackinfo.description",{"_index":828,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo.external_references[0].external_id",{"_index":818,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo.id",{"_index":814,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo.name",{"_index":813,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo.subtechniques.map(subtechnique",{"_index":833,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo.techniques",{"_index":816,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo.uses",{"_index":817,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo?.subtechniques",{"_index":832,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo?.uses",{"_index":829,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackinfo?.uses[0]?.description",{"_index":830,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitreattackservice",{"_index":688,"title":{"injectables/MitreAttackService.html":{}},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"coverage.html":{}}}],["mitrecells",{"_index":777,"title":{"interfaces/MitreCells.html":{}},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["mitrecellscontent",{"_index":779,"title":{"interfaces/MitreCellsContent.html":{}},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["mitrecomponent",{"_index":693,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["mitrecomponent.selectmitrecluster(mitreinfo",{"_index":815,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mitredata",{"_index":401,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mitredatafilter",{"_index":402,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mitredatafiltered",{"_index":689,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["mitredatainfo",{"_index":403,"title":{},"body":{"components/HubComponent.html":{}}}],["mitrefilter",{"_index":493,"title":{},"body":{"components/HubComponent.html":{}}}],["mitreherarchydata",{"_index":404,"title":{},"body":{"components/HubComponent.html":{}}}],["mitreinfo",{"_index":302,"title":{},"body":{"interfaces/ClusterConfig.html":{},"injectables/MitreAttackService.html":{}}}],["mitreinfo.relationship_type",{"_index":589,"title":{},"body":{"injectables/HubService.html":{}}}],["mitreinfo.source_ref",{"_index":593,"title":{},"body":{"injectables/HubService.html":{}}}],["mitreinfo.type",{"_index":578,"title":{},"body":{"injectables/HubService.html":{}}}],["mitreinfo.x_mitre_is_subtechnique",{"_index":579,"title":{},"body":{"injectables/HubService.html":{}}}],["mitretype",{"_index":324,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["mock",{"_index":708,"title":{},"body":{"components/MitreAttackComponent.html":{},"index.html":{}}}],["mocker",{"_index":1277,"title":{},"body":{"index.html":{}}}],["modal",{"_index":801,"title":{},"body":{"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"miscellaneous/variables.html":{}}}],["modal'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["modal.component.html",{"_index":843,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal.component.scss",{"_index":844,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":56,"title":{"components/ModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{}}}],["modalconfig",{"_index":807,"title":{"interfaces/ModalConfig.html":{}},"body":{"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"coverage.html":{}}}],["modalconfig.cards",{"_index":859,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.content",{"_index":852,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.title",{"_index":849,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig:modalconfig",{"_index":848,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcontent",{"_index":864,"title":{"interfaces/ModalContent.html":{}},"body":{"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"coverage.html":{}}}],["modalref",{"_index":835,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["modalref.componentinstance.modalconfig",{"_index":839,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["modals",{"_index":805,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["modalservice",{"_index":789,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["mode",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model",{"_index":1064,"title":{},"body":{"interfaces/UserModel.html":{}}}],["models/card.model",{"_index":186,"title":{},"body":{"components/CardComponent.html":{}}}],["models/chip.model",{"_index":231,"title":{},"body":{"components/ChipComponent.html":{}}}],["models/chipset.model",{"_index":253,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["models/cluster.model",{"_index":285,"title":{},"body":{"components/ClusterComponent.html":{}}}],["models/hub.models",{"_index":474,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{}}}],["models/modal.model",{"_index":846,"title":{},"body":{"components/ModalComponent.html":{}}}],["models/user.model",{"_index":993,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{}}}],["modified",{"_index":329,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/functions.html":{}}}],["modifies",{"_index":1215,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modify",{"_index":1348,"title":{},"body":{"license.html":{}}}],["modifyreq",{"_index":1131,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["modifyreq(request",{"_index":1213,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modifyurl",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["modifyurl(url",{"_index":1220,"title":{},"body":{"miscellaneous/functions.html":{}}}],["module",{"_index":438,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["modules",{"_index":189,"title":{"modules.html":{}},"body":{"components/CardComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["modules/deas/hub/models/hub.models",{"_index":301,"title":{},"body":{"interfaces/ClusterConfig.html":{}}}],["modules/user/store/user.facade",{"_index":160,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["modules_core_deas",{"_index":311,"title":{},"body":{"components/DeasComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["modules_hub",{"_index":391,"title":{},"body":{"components/HubComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1323,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":905,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["mouseenter",{"_index":881,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["mouseevent",{"_index":917,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["mouseleave",{"_index":882,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["mousemove",{"_index":883,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["n/a",{"_index":831,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["namespace",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["national",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nato",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["navigate",{"_index":1291,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":152,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/UserEffects.html":{},"components/UserLoginSystemComponent.html":{}}}],["navigationend",{"_index":154,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["navigator//#layerurl=https%3a%2f%2fattack.mitre.org%2fgroups%2fg0007%2fg0007",{"_index":1247,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":1049,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":1111,"title":{},"body":{"injectables/UserService.html":{},"index.html":{}}}],["nessuna",{"_index":767,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["networks",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":427,"title":{},"body":{"components/HubComponent.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(modifyreq(request",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":810,"title":{},"body":{"injectables/MitreAttackService.html":{},"dependencies.html":{},"index.html":{}}}],["ngbmodal",{"_index":809,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["ngondestroy",{"_index":408,"title":{},"body":{"components/HubComponent.html":{}}}],["ngrx",{"_index":544,"title":{},"body":{"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"injectables/UserFacade.html":{},"miscellaneous/variables.html":{}}}],["ngrx/effects",{"_index":533,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":552,"title":{},"body":{"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"injectables/UserFacade.html":{},"interfaces/UserState.html":{},"dependencies.html":{}}}],["nickname",{"_index":91,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["nobelium",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node",{"_index":1268,"title":{},"body":{"index.html":{}}}],["nome",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":860,"title":{},"body":{"components/ModalComponent.html":{}}}],["noninfringement",{"_index":1377,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1361,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1283,"title":{},"body":{"index.html":{}}}],["nsa/fbi",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nuclear",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["null",{"_index":451,"title":{},"body":{"components/HubComponent.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":299,"title":{},"body":{"interfaces/ClusterConfig.html":{},"directives/TooltipDirective.html":{}}}],["o",{"_index":655,"title":{},"body":{"injectables/HubService.html":{}}}],["oauth",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauth/callback",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":702,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object_marking_refs",{"_index":323,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["objects",{"_index":319,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["observable",{"_index":140,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["observables",{"_index":432,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["obtaining",{"_index":1340,"title":{},"body":{"license.html":{}}}],["oct",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(filtermitredatasuccess",{"_index":516,"title":{},"body":{"injectables/HubEffects.html":{}}}],["of(true",{"_index":172,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["of(user",{"_index":1090,"title":{},"body":{"injectables/UserService.html":{}}}],["officers",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oftype",{"_index":532,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{}}}],["oftype(filtermitredata",{"_index":514,"title":{},"body":{"injectables/HubEffects.html":{}}}],["oftype(getmitredata",{"_index":523,"title":{},"body":{"injectables/HubEffects.html":{}}}],["oftype(login",{"_index":986,"title":{},"body":{"injectables/UserEffects.html":{}}}],["on(filtermitredatasuccess",{"_index":672,"title":{},"body":{"interfaces/HubState.html":{},"miscellaneous/variables.html":{}}}],["on(getmitredatasuccess",{"_index":671,"title":{},"body":{"interfaces/HubState.html":{},"miscellaneous/variables.html":{}}}],["on(loginsuccess",{"_index":1120,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["onlogout",{"_index":409,"title":{},"body":{"components/HubComponent.html":{}}}],["onmouseenter",{"_index":871,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["onmouseenter(event",{"_index":916,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["onmouseleave",{"_index":872,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["onmousemove",{"_index":873,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["onmousemove(event",{"_index":921,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["opaque",{"_index":292,"title":{},"body":{"interfaces/ClusterConfig.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["opcw",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":1275,"title":{},"body":{"index.html":{}}}],["openmitremodal",{"_index":792,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["openmitremodal(actiontype",{"_index":798,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["opens",{"_index":800,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["operated",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operations",{"_index":443,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":78,"title":{},"body":{"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ClusterConfig.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCellsContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["organization",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizations.(citation",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizes",{"_index":1225,"title":{},"body":{"index.html":{}}}],["original",{"_index":1221,"title":{},"body":{"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1386,"title":{},"body":{"license.html":{}}}],["out",{"_index":490,"title":{},"body":{"components/HubComponent.html":{},"injectables/UserService.html":{},"index.html":{},"license.html":{}}}],["output",{"_index":1255,"title":{},"body":{"index.html":{}}}],["overlap",{"_index":893,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["overlaps",{"_index":931,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["overview",{"_index":1325,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":1183,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":1054,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["palo",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":167,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/ClusterConfig.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":138,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1375,"title":{},"body":{"license.html":{}}}],["paths",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pattern",{"_index":381,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["per",{"_index":762,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["performs",{"_index":1048,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["permission",{"_index":1334,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1356,"title":{},"body":{"license.html":{}}}],["person",{"_index":1339,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1357,"title":{},"body":{"license.html":{}}}],["phase",{"_index":371,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{}}}],["phase:any",{"_index":782,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["phase_name",{"_index":373,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["picture",{"_index":94,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["pipe",{"_index":525,"title":{},"body":{"injectables/HubEffects.html":{}}}],["pipe(filter(boolean",{"_index":711,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["platform",{"_index":1315,"title":{},"body":{"index.html":{}}}],["point",{"_index":1267,"title":{},"body":{"index.html":{}}}],["popperjs/core",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["portions",{"_index":1365,"title":{},"body":{"license.html":{}}}],["position",{"_index":904,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["possible",{"_index":112,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["present",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["presidential",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":125,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["process",{"_index":1020,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":97,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["prohibition",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":1270,"title":{},"body":{"index.html":{}}}],["properties",{"_index":77,"title":{"properties.html":{}},"body":{"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"properties.html":{}}}],["props",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1366,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":162,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"injectables/MitreAttackService.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{}}}],["provideeffects([usereffects",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptors([apiinterceptor",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":1001,"title":{},"body":{"injectables/UserFacade.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":388,"title":{},"body":{"components/HubComponent.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":456,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/variables.html":{}}}],["providestore",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestoredevtools",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":123,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["publish",{"_index":1350,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1376,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["received",{"_index":716,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["redirect",{"_index":1039,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["redirect_uri",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirects",{"_index":1105,"title":{},"body":{"injectables/UserService.html":{}}}],["reducer",{"_index":668,"title":{},"body":{"interfaces/HubState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["redux",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":1326,"title":{},"body":{"index.html":{}}}],["references",{"_index":366,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"index.html":{}}}],["referred",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["related",{"_index":316,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["relationship",{"_index":382,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["relationship_type",{"_index":353,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["relationships",{"_index":1231,"title":{},"body":{"index.html":{}}}],["relationshiptype",{"_index":354,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["relazioni",{"_index":585,"title":{},"body":{"injectables/HubService.html":{}}}],["reload",{"_index":1293,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1042,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["renderer",{"_index":887,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["renderer2",{"_index":885,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["rendering",{"_index":308,"title":{},"body":{"components/DeasComponent.html":{}}}],["reportedly",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reporting",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["representing",{"_index":72,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"interfaces/HubState.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["represents",{"_index":175,"title":{},"body":{"components/CardComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"miscellaneous/typealiases.html":{}}}],["reprresents",{"_index":677,"title":{},"body":{"components/LoaderComponent.html":{}}}],["request",{"_index":1216,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["requests",{"_index":1083,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":182,"title":{},"body":{"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{}}}],["research",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":74,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["responsible",{"_index":307,"title":{},"body":{"components/DeasComponent.html":{}}}],["restriction",{"_index":1345,"title":{},"body":{"license.html":{}}}],["results",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieval",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retrieved",{"_index":531,"title":{},"body":{"injectables/HubEffects.html":{}}}],["retrieves",{"_index":530,"title":{},"body":{"injectables/HubEffects.html":{}}}],["return",{"_index":171,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/HubEffects.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":1073,"title":{},"body":{"injectables/UserService.html":{}}}],["returns",{"_index":139,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/ClusterConfig.html":{},"components/HubComponent.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["returnto",{"_index":1103,"title":{},"body":{"injectables/UserService.html":{}}}],["revoked",{"_index":335,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["ricorsivamente",{"_index":629,"title":{},"body":{"injectables/HubService.html":{}}}],["rights",{"_index":1347,"title":{},"body":{"license.html":{}}}],["root",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0_Guard.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"injectables/MitreAttackService.html":{},"injectables/UserFacade.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["route",{"_index":137,"title":{},"body":{"injectables/Auth0_Guard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":126,"title":{},"body":{"injectables/Auth0_Guard.html":{},"injectables/UserEffects.html":{},"components/UserLoginSystemComponent.html":{}}}],["routermodule",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"miscellaneous/variables.html":{}}}],["routerstatesnapshot",{"_index":132,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["routes",{"_index":165,"title":{},"body":{"injectables/Auth0_Guard.html":{},"miscellaneous/variables.html":{}}}],["row",{"_index":267,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["row.chips",{"_index":269,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["run",{"_index":1280,"title":{},"body":{"index.html":{}}}],["running",{"_index":1306,"title":{},"body":{"index.html":{}}}],["russia's",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":156,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":535,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{}}}],["sandworm",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scaffolding",{"_index":1297,"title":{},"body":{"index.html":{}}}],["script",{"_index":1287,"title":{},"body":{"index.html":{}}}],["scrollx",{"_index":967,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["scrolly",{"_index":970,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["section",{"_index":277,"title":{},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{}}}],["sections",{"_index":273,"title":{},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{}}}],["secureworks",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":293,"title":{},"body":{"interfaces/ClusterConfig.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{}}}],["selected",{"_index":305,"title":{},"body":{"interfaces/ClusterConfig.html":{}}}],["selection",{"_index":298,"title":{},"body":{"interfaces/ClusterConfig.html":{}}}],["selectmitrecluster",{"_index":690,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["selectmitrecluster(cluster",{"_index":692,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["selects",{"_index":695,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["seleziona",{"_index":760,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["sell",{"_index":1354,"title":{},"body":{"license.html":{}}}],["serve",{"_index":1289,"title":{},"body":{"index.html":{}}}],["server",{"_index":1286,"title":{},"body":{"index.html":{}}}],["service",{"_index":148,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["service/user.service",{"_index":994,"title":{},"body":{"injectables/UserEffects.html":{},"components/UserLoginSystemComponent.html":{}}}],["services",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services/hub.service",{"_index":475,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubEffects.html":{}}}],["services/mitre",{"_index":735,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["set",{"_index":244,"title":{},"body":{"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/UserLoginSystemComponent.html":{}}}],["set'},{'name",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["set.component",{"_index":731,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["set.component.html",{"_index":248,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["set.component.ts",{"_index":243,"title":{},"body":{"components/ChipsetComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["set.component.ts:32",{"_index":251,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["set.scss",{"_index":249,"title":{},"body":{"components/ChipsetComponent.html":{}}}],["set/chip",{"_index":242,"title":{},"body":{"components/ChipsetComponent.html":{},"components/MitreAttackComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sets",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{}}}],["settimeout",{"_index":942,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["settings",{"_index":220,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/enumerations.html":{}}}],["setusererror",{"_index":1066,"title":{},"body":{"injectables/UserService.html":{}}}],["setusererror(error",{"_index":1071,"title":{},"body":{"injectables/UserService.html":{}}}],["setuserinfo",{"_index":1067,"title":{},"body":{"injectables/UserService.html":{}}}],["setuserinfo(user",{"_index":1074,"title":{},"body":{"injectables/UserService.html":{}}}],["setuserlogout",{"_index":1068,"title":{},"body":{"injectables/UserService.html":{}}}],["shall",{"_index":1362,"title":{},"body":{"license.html":{}}}],["shared/constants/endpoints",{"_index":574,"title":{},"body":{"injectables/HubService.html":{}}}],["shared/constants/grouphackers.model",{"_index":483,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{}}}],["shared/model/mitre.model",{"_index":468,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubService.html":{}}}],["shared/routes/route.model",{"_index":161,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/UserLoginSystemComponent.html":{}}}],["showing",{"_index":891,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["shows",{"_index":902,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["showtimeout",{"_index":867,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["showtooltip",{"_index":874,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["side",{"_index":501,"title":{},"body":{"injectables/HubEffects.html":{}}}],["simplified",{"_index":540,"title":{},"body":{"injectables/HubFacade.html":{}}}],["size",{"_index":276,"title":{},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ClusterConfig.html":{},"injectables/MitreAttackService.html":{}}}],["size:'col",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["soc",{"_index":1258,"title":{},"body":{"index.html":{}}}],["sofacy",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1342,"title":{},"body":{"license.html":{}}}],["solarstorm.[9][10][11][12][13][14",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solarwinds",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["solo",{"_index":650,"title":{},"body":{"injectables/HubService.html":{}}}],["someactive",{"_index":744,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["sono",{"_index":862,"title":{},"body":{"components/ModalComponent.html":{}}}],["sotto",{"_index":857,"title":{},"body":{"components/ModalComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"index.html":{}}}],["source_name",{"_index":367,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["source_ref",{"_index":355,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["spec_version",{"_index":321,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["special",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":442,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"index.html":{}}}],["specifies",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spiez",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spinner",{"_index":678,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/.../api.interceptor.ts",{"_index":1212,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth0.providers.ts",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card.component.ts",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card.model.ts",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../chip",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cluster.component.ts",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../deas.component.ts",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../endpoints.ts",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.test.ts",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../grouphackers.model.ts",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../hub.actions.ts",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../hub.component.ts",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../hub.models.ts",{"_index":1397,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../hub.reducer.ts",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../hub.selectors.ts",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../image.path.ts",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mitre",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mitre.model.ts",{"_index":1398,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../modal.component.ts",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../route.model.ts",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.actions.ts",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.model.ts",{"_index":1396,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.reducer.ts",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.selectors.ts",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.service.ts",{"_index":1395,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.config.ts",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/auth0",{"_index":121,"title":{},"body":{"injectables/Auth0_Guard.html":{},"coverage.html":{}}}],["src/app/core/interceptors/api.interceptor.ts",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/modules/user/models/user.model.ts",{"_index":71,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/modules/user/service/user.service.ts",{"_index":1065,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/modules/user/service/user.service.ts:23",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:29",{"_index":1084,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:35",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:41",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:48",{"_index":1069,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:58",{"_index":1075,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:77",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/service/user.service.ts:87",{"_index":1072,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/modules/user/store/user.actions.ts",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/modules/user/store/user.effects.ts",{"_index":982,"title":{},"body":{"injectables/UserEffects.html":{},"coverage.html":{}}}],["src/app/core/modules/user/store/user.effects.ts:13",{"_index":984,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/core/modules/user/store/user.effects.ts:30",{"_index":992,"title":{},"body":{"injectables/UserEffects.html":{}}}],["src/app/core/modules/user/store/user.facade.ts",{"_index":996,"title":{},"body":{"injectables/UserFacade.html":{},"coverage.html":{}}}],["src/app/core/modules/user/store/user.facade.ts:18",{"_index":997,"title":{},"body":{"injectables/UserFacade.html":{}}}],["src/app/core/modules/user/store/user.facade.ts:31",{"_index":999,"title":{},"body":{"injectables/UserFacade.html":{}}}],["src/app/core/modules/user/store/user.reducer.ts",{"_index":1114,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/modules/user/store/user.selectors.ts",{"_index":1142,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/modules/user/user",{"_index":1006,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/providers/auth0.providers.ts",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/libraries/components/card/card.component.ts",{"_index":174,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/libraries/components/card/card.component.ts:31",{"_index":183,"title":{},"body":{"components/CardComponent.html":{}}}],["src/app/libraries/components/chip",{"_index":241,"title":{},"body":{"components/ChipsetComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/libraries/components/chip/chip.component.ts",{"_index":226,"title":{},"body":{"components/ChipComponent.html":{},"coverage.html":{}}}],["src/app/libraries/components/chip/chip.component.ts:20",{"_index":230,"title":{},"body":{"components/ChipComponent.html":{}}}],["src/app/libraries/components/cluster/cluster.component.ts",{"_index":278,"title":{},"body":{"components/ClusterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/libraries/components/cluster/cluster.component.ts:32",{"_index":284,"title":{},"body":{"components/ClusterComponent.html":{}}}],["src/app/libraries/components/loader/loader.component.ts",{"_index":673,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/libraries/components/modal/modal.component.ts",{"_index":841,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/libraries/components/modal/modal.component.ts:33",{"_index":845,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts",{"_index":866,"title":{},"body":{"directives/TooltipDirective.html":{},"coverage.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:102",{"_index":935,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:134",{"_index":929,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:14",{"_index":895,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:19",{"_index":892,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:24",{"_index":888,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:26",{"_index":937,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:27",{"_index":886,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:37",{"_index":900,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:51",{"_index":907,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:61",{"_index":911,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:68",{"_index":923,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:77",{"_index":915,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/directives/tooltip.directive.ts:87",{"_index":912,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["src/app/libraries/models/card.model.ts",{"_index":202,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/libraries/models/chip.model.ts",{"_index":235,"title":{},"body":{"interfaces/ChipConfig.html":{},"coverage.html":{}}}],["src/app/libraries/models/chipset.model.ts",{"_index":270,"title":{},"body":{"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"coverage.html":{}}}],["src/app/libraries/models/cluster.model.ts",{"_index":288,"title":{},"body":{"interfaces/ClusterConfig.html":{},"coverage.html":{}}}],["src/app/libraries/models/mitre",{"_index":770,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"coverage.html":{}}}],["src/app/libraries/models/modal.model.ts",{"_index":863,"title":{},"body":{"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"coverage.html":{}}}],["src/app/modules/deas/deas.component.ts",{"_index":306,"title":{},"body":{"components/DeasComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/deas/hub/hub.component.ts",{"_index":387,"title":{},"body":{"components/HubComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:103",{"_index":465,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:109",{"_index":458,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:115",{"_index":455,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:121",{"_index":452,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:127",{"_index":460,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:133",{"_index":425,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:139",{"_index":411,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:149",{"_index":450,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:161",{"_index":413,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:169",{"_index":421,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:177",{"_index":417,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:73",{"_index":467,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:79",{"_index":463,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:85",{"_index":435,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:91",{"_index":441,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/hub.component.ts:97",{"_index":429,"title":{},"body":{"components/HubComponent.html":{}}}],["src/app/modules/deas/hub/models/hub.models.ts",{"_index":1400,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/modules/deas/hub/services/hub.service.ts",{"_index":556,"title":{},"body":{"injectables/HubService.html":{},"coverage.html":{}}}],["src/app/modules/deas/hub/services/hub.service.ts:16",{"_index":567,"title":{},"body":{"injectables/HubService.html":{}}}],["src/app/modules/deas/hub/services/hub.service.ts:19",{"_index":563,"title":{},"body":{"injectables/HubService.html":{}}}],["src/app/modules/deas/hub/services/hub.service.ts:25",{"_index":565,"title":{},"body":{"injectables/HubService.html":{}}}],["src/app/modules/deas/hub/services/hub.service.ts:91",{"_index":562,"title":{},"body":{"injectables/HubService.html":{}}}],["src/app/modules/deas/hub/store/hub.actions.ts",{"_index":1160,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/deas/hub/store/hub.effects.ts",{"_index":499,"title":{},"body":{"injectables/HubEffects.html":{},"coverage.html":{}}}],["src/app/modules/deas/hub/store/hub.effects.ts:13",{"_index":508,"title":{},"body":{"injectables/HubEffects.html":{}}}],["src/app/modules/deas/hub/store/hub.effects.ts:27",{"_index":529,"title":{},"body":{"injectables/HubEffects.html":{}}}],["src/app/modules/deas/hub/store/hub.effects.ts:45",{"_index":517,"title":{},"body":{"injectables/HubEffects.html":{}}}],["src/app/modules/deas/hub/store/hub.facade.ts",{"_index":539,"title":{},"body":{"injectables/HubFacade.html":{},"coverage.html":{}}}],["src/app/modules/deas/hub/store/hub.facade.ts:20",{"_index":550,"title":{},"body":{"injectables/HubFacade.html":{}}}],["src/app/modules/deas/hub/store/hub.facade.ts:26",{"_index":543,"title":{},"body":{"injectables/HubFacade.html":{}}}],["src/app/modules/deas/hub/store/hub.facade.ts:37",{"_index":547,"title":{},"body":{"injectables/HubFacade.html":{}}}],["src/app/modules/deas/hub/store/hub.facade.ts:46",{"_index":546,"title":{},"body":{"injectables/HubFacade.html":{}}}],["src/app/modules/deas/hub/store/hub.reducer.ts",{"_index":661,"title":{},"body":{"interfaces/HubState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/deas/hub/store/hub.selectors.ts",{"_index":1164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/deas/mitre",{"_index":679,"title":{},"body":{"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/constants/endpoints.ts",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/constants/grouphackers.model.ts",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/constants/image.path.ts",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/model/mitre.model.ts",{"_index":315,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/shared/routes/route.model.ts",{"_index":1176,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":1178,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.test.ts",{"_index":1179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1180,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["st.id",{"_index":592,"title":{},"body":{"injectables/HubService.html":{}}}],["staff",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standalone",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{}}}],["start",{"_index":1285,"title":{},"body":{"index.html":{}}}],["started",{"_index":1223,"title":{"index.html":{},"license.html":{}},"body":{}}],["starting",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state",{"_index":131,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["statement",{"_index":317,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["statements",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stellarparticle",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["steppe",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":1036,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["store",{"_index":439,"title":{},"body":{"components/HubComponent.html":{},"injectables/HubFacade.html":{},"interfaces/HubState.html":{},"components/MitreAttackComponent.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["store/hub.facade",{"_index":470,"title":{},"body":{"components/HubComponent.html":{}}}],["store/user.facade",{"_index":1051,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["stored",{"_index":1303,"title":{},"body":{"index.html":{}}}],["stream",{"_index":510,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{}}}],["string",{"_index":81,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ChipConfig.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":1005,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["styleurl",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{}}}],["styleurls",{"_index":1010,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["sub",{"_index":110,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["subject",{"_index":428,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{},"license.html":{}}}],["subject,subscription,takeuntil",{"_index":1050,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["sublicense",{"_index":1352,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1032,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["subscribe((data",{"_index":448,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["subscribe((filter",{"_index":712,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["subscribe((user",{"_index":1029,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["subscribes",{"_index":1046,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["subscription",{"_index":444,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["subscriptions",{"_index":1024,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["substantial",{"_index":1364,"title":{},"body":{"license.html":{}}}],["subtechnique",{"_index":386,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["subtechniquemap",{"_index":586,"title":{},"body":{"injectables/HubService.html":{}}}],["subtechniquemap[mitreinfo.target_ref",{"_index":590,"title":{},"body":{"injectables/HubService.html":{}}}],["subtechniquemap[mitreinfo.target_ref].push(subtechnique",{"_index":594,"title":{},"body":{"injectables/HubService.html":{}}}],["subtechniquemap[technique.id",{"_index":608,"title":{},"body":{"injectables/HubService.html":{}}}],["subtechniques",{"_index":580,"title":{},"body":{"injectables/HubService.html":{},"index.html":{}}}],["subtechniques.find(st",{"_index":591,"title":{},"body":{"injectables/HubService.html":{}}}],["subtechniquesextended",{"_index":607,"title":{},"body":{"injectables/HubService.html":{}}}],["subtecniche",{"_index":604,"title":{},"body":{"injectables/HubService.html":{}}}],["subtitle",{"_index":775,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["success",{"_index":521,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["successful",{"_index":1077,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["such",{"_index":503,"title":{},"body":{"injectables/HubEffects.html":{}}}],["summer",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svr",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svr).[1][2",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swiss",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch",{"_index":825,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["switchmap",{"_index":515,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{}}}],["switchmap((token",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symantec",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["system.component.html",{"_index":1012,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.scss",{"_index":1011,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts",{"_index":1008,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["system.component.ts:107",{"_index":1019,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts:39",{"_index":1022,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts:45",{"_index":1027,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts:51",{"_index":1026,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts:57",{"_index":1021,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts:63",{"_index":1015,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system.component.ts:77",{"_index":1045,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["system/user",{"_index":1007,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":1089,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["tactic",{"_index":378,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["tactic.x_mitre_shortname",{"_index":625,"title":{},"body":{"injectables/HubService.html":{}}}],["tactic_refs",{"_index":322,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["tactics",{"_index":576,"title":{},"body":{"injectables/HubService.html":{},"index.html":{}}}],["tactics.map((tactic",{"_index":619,"title":{},"body":{"injectables/HubService.html":{}}}],["takeuntil",{"_index":155,"title":{},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["takeuntil(this.destroy",{"_index":447,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["tanks",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap",{"_index":1086,"title":{},"body":{"injectables/UserService.html":{}}}],["target_ref",{"_index":356,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["targeting",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tattiche",{"_index":615,"title":{},"body":{"injectables/HubService.html":{}}}],["team",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technica",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technique",{"_index":613,"title":{},"body":{"injectables/HubService.html":{},"components/MitreAttackComponent.html":{}}}],["technique.kill_chain_phases",{"_index":622,"title":{},"body":{"injectables/HubService.html":{}}}],["technique.kill_chain_phases.some(kcp",{"_index":623,"title":{},"body":{"injectables/HubService.html":{}}}],["technique.subtechniques",{"_index":638,"title":{},"body":{"injectables/HubService.html":{}}}],["technique.subtechniques.length",{"_index":644,"title":{},"body":{"injectables/HubService.html":{}}}],["technique.uses",{"_index":641,"title":{},"body":{"injectables/HubService.html":{}}}],["technique.uses.filter(use",{"_index":642,"title":{},"body":{"injectables/HubService.html":{}}}],["technique.uses.length",{"_index":646,"title":{},"body":{"injectables/HubService.html":{}}}],["techniquemap",{"_index":605,"title":{},"body":{"injectables/HubService.html":{}}}],["techniquemap[technique.id",{"_index":612,"title":{},"body":{"injectables/HubService.html":{}}}],["techniques",{"_index":294,"title":{},"body":{"interfaces/ClusterConfig.html":{},"injectables/HubService.html":{},"injectables/MitreAttackService.html":{},"index.html":{}}}],["techniques.filter((technique",{"_index":621,"title":{},"body":{"injectables/HubService.html":{}}}],["techniques.foreach((technique",{"_index":606,"title":{},"body":{"injectables/HubService.html":{}}}],["techniquesextended",{"_index":620,"title":{},"body":{"injectables/HubService.html":{}}}],["tecniche",{"_index":602,"title":{},"body":{"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{}}}],["tecnique",{"_index":784,"title":{},"body":{"interfaces/MitreAttackFooter.html":{}}}],["tecnique:any",{"_index":783,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["test",{"_index":1309,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["testing",{"_index":1319,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":1308,"title":{},"body":{"index.html":{}}}],["text",{"_index":896,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["textoverlap",{"_index":875,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["textoverlap(htmlelement",{"_index":927,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tg",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["theme",{"_index":240,"title":{},"body":{"interfaces/ChipConfig.html":{}}}],["there's",{"_index":1106,"title":{},"body":{"injectables/UserService.html":{}}}],["think",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.action$.pipe",{"_index":985,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.actions$.pipe",{"_index":513,"title":{},"body":{"injectables/HubEffects.html":{}}}],["this.attackhacker",{"_index":713,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.authservice.getaccesstokensilently().pipe",{"_index":1031,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.authservice.isauthenticated$.subscribe(isauthenticated",{"_index":1053,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.authservice.loginwithredirect",{"_index":1057,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["this.authservice.logout",{"_index":1101,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.user$.pipe",{"_index":1028,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.cards",{"_index":747,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.clusters",{"_index":720,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.clusters.map((_cluster",{"_index":738,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.clusters.some((cluster",{"_index":745,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.createmitretechniques(subtechnique",{"_index":834,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["this.createtooltip",{"_index":950,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.destroy$.next",{"_index":488,"title":{},"body":{"components/HubComponent.html":{}}}],["this.document.location.origin",{"_index":1104,"title":{},"body":{"injectables/UserService.html":{}}}],["this.filterbyactorrecursive(item.subtechniques",{"_index":631,"title":{},"body":{"injectables/HubService.html":{}}}],["this.filterbyactorrecursive(technique.subtechniques",{"_index":639,"title":{},"body":{"injectables/HubService.html":{}}}],["this.hidetooltip",{"_index":948,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.http.get(`${environment.apiurl}/${endpoints.mitre",{"_index":575,"title":{},"body":{"injectables/HubService.html":{}}}],["this.hubfacade.filtremitredata(this.mitredatafiltered",{"_index":737,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.hubfacade.filtremitredata(this.mitreherarchydata",{"_index":486,"title":{},"body":{"components/HubComponent.html":{}}}],["this.hubfacade.getmitredata",{"_index":485,"title":{},"body":{"components/HubComponent.html":{}}}],["this.hubfacade.mitredata",{"_index":457,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["this.hubfacade.mitredata$.pipe",{"_index":445,"title":{},"body":{"components/HubComponent.html":{}}}],["this.hubfacade.mitredatafilter",{"_index":454,"title":{},"body":{"components/HubComponent.html":{},"components/MitreAttackComponent.html":{}}}],["this.hubservice",{"_index":524,"title":{},"body":{"injectables/HubEffects.html":{}}}],["this.hubservice.mapmitredata(response",{"_index":528,"title":{},"body":{"injectables/HubEffects.html":{}}}],["this.initialize",{"_index":1052,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.mitreattackservice.createmitrecluster(mitreattackinfo",{"_index":722,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.mitreattackservice.createmitretechniques",{"_index":749,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.mitredatafiltered",{"_index":719,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.mitredatafiltered.map",{"_index":721,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["this.mitreherarchydata",{"_index":449,"title":{},"body":{"components/HubComponent.html":{}}}],["this.modalservice.open(modalcomponent",{"_index":836,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["this.openmitremodal(actiontype",{"_index":822,"title":{},"body":{"injectables/MitreAttackService.html":{}}}],["this.renderer.addclass(this.tooltipelement",{"_index":953,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.appendchild(document.body",{"_index":958,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.createelement('div",{"_index":952,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.removechild(document.body",{"_index":951,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.renderer.setstyle(this.tooltipelement",{"_index":976,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.router.navigatebyurl(`${app.deas",{"_index":1040,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.router.navigatebyurl(`/${route.user_auth",{"_index":173,"title":{},"body":{"injectables/Auth0_Guard.html":{}}}],["this.showtimeout",{"_index":941,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.showtooltip",{"_index":943,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.store.dispatch(filtermitredata",{"_index":555,"title":{},"body":{"injectables/HubFacade.html":{}}}],["this.store.dispatch(getmitredata",{"_index":554,"title":{},"body":{"injectables/HubFacade.html":{}}}],["this.store.dispatch(login",{"_index":1004,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.store.select(mitredata",{"_index":549,"title":{},"body":{"injectables/HubFacade.html":{}}}],["this.store.select(mitredatafilter",{"_index":551,"title":{},"body":{"injectables/HubFacade.html":{}}}],["this.store.select(user$).pipe(filter(boolean",{"_index":1002,"title":{},"body":{"injectables/UserFacade.html":{}}}],["this.textoverlap(event.target",{"_index":939,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltipdelay",{"_index":946,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltipelement",{"_index":949,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltipelement.innerhtml",{"_index":955,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltipelement.offsetheight",{"_index":962,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltipelement.offsetwidth",{"_index":960,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltipshow",{"_index":940,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.tooltiptext",{"_index":956,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.updatetooltipposition(event.clientx",{"_index":944,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["this.userfacade.login(userinfo",{"_index":1100,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userfacade.user",{"_index":464,"title":{},"body":{"components/HubComponent.html":{}}}],["this.userservice.login(user).pipe",{"_index":987,"title":{},"body":{"injectables/UserEffects.html":{}}}],["this.userservice.setusererror(error",{"_index":1044,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.userservice.setuserinfo(user",{"_index":1038,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["this.userservice.setuserlogout",{"_index":487,"title":{},"body":{"components/HubComponent.html":{}}}],["threat",{"_index":1238,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["throwerror",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":96,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["timeout",{"_index":909,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["title",{"_index":774,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1109,"title":{},"body":{"injectables/UserService.html":{}}}],["token",{"_index":1033,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":380,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"miscellaneous/typealiases.html":{}}}],["tooltip",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{}}}],["tooltipdelay",{"_index":877,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltipdirective",{"_index":63,"title":{"directives/TooltipDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tooltipelement",{"_index":868,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltipheight",{"_index":961,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltipoverlap",{"_index":903,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltipshow",{"_index":878,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltiptext",{"_index":879,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tooltipwidth",{"_index":959,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["top",{"_index":973,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["top}px",{"_index":977,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["tort",{"_index":1385,"title":{},"body":{"license.html":{}}}],["track",{"_index":200,"title":{},"body":{"components/CardComponent.html":{},"components/ChipsetComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["triggered",{"_index":519,"title":{},"body":{"injectables/HubEffects.html":{},"injectables/UserEffects.html":{}}}],["true",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"components/ModalComponent.html":{},"directives/TooltipDirective.html":{},"components/UserLoginSystemComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1030,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["tslib",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["twilight",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":82,"title":{},"body":{"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/ChipComponent.html":{},"interfaces/ChipConfig.html":{},"components/ChipsetComponent.html":{},"interfaces/ChipsetConfig.html":{},"interfaces/ChipsetContent.html":{},"interfaces/ChipsetHeader.html":{},"components/ClusterComponent.html":{},"interfaces/ClusterConfig.html":{},"components/DeasComponent.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"interfaces/HubState.html":{},"interfaces/KillChainPhase.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackData.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1394,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":258,"title":{},"body":{"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/ModalComponent.html":{}}}],["types",{"_index":113,"title":{},"body":{"interfaces/Auth0Error.html":{},"components/HubComponent.html":{},"interfaces/UserModel.html":{},"miscellaneous/typealiases.html":{}}}],["u.s",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ui",{"_index":257,"title":{},"body":{"components/ChipsetComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["ui_chipset",{"_index":246,"title":{},"body":{"components/ChipsetComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_kit_hub",{"_index":393,"title":{},"body":{"components/HubComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_mitre_attack",{"_index":682,"title":{},"body":{"components/MitreAttackComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_modal",{"_index":842,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui_user_login",{"_index":1009,"title":{},"body":{"components/UserLoginSystemComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uk",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["una",{"_index":582,"title":{},"body":{"injectables/HubService.html":{},"components/MitreAttackComponent.html":{}}}],["unc2452",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uncomment",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":111,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["unique",{"_index":108,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["unit",{"_index":1307,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["update",{"_index":1117,"title":{},"body":{"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["updated",{"_index":99,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["updated_at",{"_index":100,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{}}}],["updates",{"_index":696,"title":{},"body":{"components/MitreAttackComponent.html":{},"directives/TooltipDirective.html":{}}}],["updatetooltipposition",{"_index":876,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["updatetooltipposition(x",{"_index":933,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["uri",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":93,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"interfaces/UserModel.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["usage",{"_index":1230,"title":{},"body":{"index.html":{}}}],["use",{"_index":1299,"title":{},"body":{"index.html":{},"license.html":{}}}],["use.name",{"_index":634,"title":{},"body":{"injectables/HubService.html":{}}}],["used",{"_index":190,"title":{},"body":{"components/CardComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/MitreAttackComponent.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0_Guard.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":86,"title":{},"body":{"interfaces/Auth0Error.html":{},"components/HubComponent.html":{},"interfaces/UserModel.html":{}}}],["user.actions",{"_index":995,"title":{},"body":{"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"interfaces/UserState.html":{}}}],["user.email",{"_index":1097,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email_verified",{"_index":1098,"title":{},"body":{"injectables/UserService.html":{}}}],["user.family_name",{"_index":1092,"title":{},"body":{"injectables/UserService.html":{}}}],["user.given_name",{"_index":1091,"title":{},"body":{"injectables/UserService.html":{}}}],["user.name",{"_index":1094,"title":{},"body":{"injectables/UserService.html":{}}}],["user.nickname",{"_index":1093,"title":{},"body":{"injectables/UserService.html":{}}}],["user.picture",{"_index":1095,"title":{},"body":{"injectables/UserService.html":{}}}],["user.selectors",{"_index":1003,"title":{},"body":{"injectables/UserFacade.html":{}}}],["user.sub",{"_index":1099,"title":{},"body":{"injectables/UserService.html":{}}}],["user.updated_at",{"_index":1096,"title":{},"body":{"injectables/UserService.html":{}}}],["user_auth",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usereffects",{"_index":981,"title":{"injectables/UserEffects.html":{}},"body":{"injectables/UserEffects.html":{},"coverage.html":{}}}],["userfacade",{"_index":159,"title":{"injectables/UserFacade.html":{}},"body":{"injectables/Auth0_Guard.html":{},"components/HubComponent.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userinfo",{"_index":405,"title":{},"body":{"components/HubComponent.html":{},"injectables/UserService.html":{}}}],["userloginsystemcomponent",{"_index":58,"title":{"components/UserLoginSystemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{},"coverage.html":{}}}],["usermodel",{"_index":85,"title":{"interfaces/UserModel.html":{}},"body":{"interfaces/Auth0Error.html":{},"components/HubComponent.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"interfaces/UserModel.html":{},"injectables/UserService.html":{},"interfaces/UserState.html":{},"coverage.html":{}}}],["userreducer",{"_index":1119,"title":{},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":406,"title":{"injectables/UserService.html":{}},"body":{"components/HubComponent.html":{},"injectables/UserEffects.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userstate",{"_index":1113,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/UserState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":295,"title":{},"body":{"interfaces/ClusterConfig.html":{},"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"injectables/MitreAttackService.html":{},"miscellaneous/typealiases.html":{}}}],["usesmap",{"_index":596,"title":{},"body":{"injectables/HubService.html":{}}}],["usesmap[mitreinfo.target_ref",{"_index":597,"title":{},"body":{"injectables/HubService.html":{}}}],["usesmap[mitreinfo.target_ref].push(entity",{"_index":601,"title":{},"body":{"injectables/HubService.html":{}}}],["usesmap[subtechnique.id",{"_index":610,"title":{},"body":{"injectables/HubService.html":{}}}],["usesmap[technique.id",{"_index":611,"title":{},"body":{"injectables/HubService.html":{}}}],["using",{"_index":166,"title":{},"body":{"injectables/Auth0_Guard.html":{},"miscellaneous/variables.html":{}}}],["v1",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valide",{"_index":656,"title":{},"body":{"injectables/HubService.html":{}}}],["value",{"_index":144,"title":{},"body":{"injectables/Auth0_Guard.html":{},"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"components/HubComponent.html":{},"injectables/HubEffects.html":{},"injectables/HubFacade.html":{},"injectables/HubService.html":{},"components/MitreAttackComponent.html":{},"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"injectables/MitreAttackService.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"interfaces/ModalContent.html":{},"directives/TooltipDirective.html":{},"injectables/UserEffects.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value:string",{"_index":780,"title":{},"body":{"interfaces/MitreAttackConfig.html":{},"interfaces/MitreAttackFooter.html":{},"interfaces/MitreAttackHeader.html":{},"interfaces/MitreAttackInfo-1.html":{},"interfaces/MitreCells.html":{},"interfaces/MitreCellsContent.html":{}}}],["var",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/CardComponent.html":{},"components/ChipComponent.html":{},"components/ChipsetComponent.html":{},"components/ClusterComponent.html":{},"components/DeasComponent.html":{},"components/HubComponent.html":{},"components/LoaderComponent.html":{},"components/MitreAttackComponent.html":{},"components/ModalComponent.html":{},"components/UserLoginSystemComponent.html":{}}}],["variable",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1403,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1232,"title":{},"body":{"index.html":{}}}],["verified",{"_index":105,"title":{},"body":{"interfaces/Auth0Error.html":{},"interfaces/UserModel.html":{}}}],["version",{"_index":1273,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["versions.v1}/mitre",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":1311,"title":{},"body":{"index.html":{}}}],["view",{"_index":310,"title":{},"body":{"components/DeasComponent.html":{}}}],["virus",{"_index":706,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["visualization",{"_index":1237,"title":{},"body":{"index.html":{}}}],["visualizzare",{"_index":763,"title":{},"body":{"components/MitreAttackComponent.html":{}}}],["void",{"_index":216,"title":{},"body":{"interfaces/CardConfig.html":{},"interfaces/CardFooter.html":{},"interfaces/CardHeader.html":{},"interfaces/ClusterConfig.html":{},"components/HubComponent.html":{},"injectables/HubFacade.html":{},"components/MitreAttackComponent.html":{},"injectables/MitreAttackService.html":{},"directives/TooltipDirective.html":{},"injectables/UserFacade.html":{},"components/UserLoginSystemComponent.html":{},"injectables/UserService.html":{}}}],["wada",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":1372,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1367,"title":{},"body":{"license.html":{}}}],["weapons",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whether",{"_index":104,"title":{},"body":{"interfaces/Auth0Error.html":{},"injectables/Auth0_Guard.html":{},"interfaces/ChipConfig.html":{},"interfaces/ClusterConfig.html":{},"directives/TooltipDirective.html":{},"interfaces/UserModel.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["width",{"_index":1059,"title":{},"body":{"components/UserLoginSystemComponent.html":{}}}],["window.innerheight",{"_index":966,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["window.innerwidth",{"_index":964,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["window.scrollx",{"_index":968,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["window.scrolly",{"_index":971,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["windowheight",{"_index":965,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["windowwidth",{"_index":963,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["within",{"_index":663,"title":{},"body":{"interfaces/HubState.html":{},"interfaces/UserState.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":1344,"title":{},"body":{"license.html":{}}}],["world",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":376,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"injectables/HubService.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{},"directives/TooltipDirective.html":{},"miscellaneous/typealiases.html":{}}}],["x_mitre_aliases",{"_index":337,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_attack_spec_version",{"_index":331,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_collection_layers",{"_index":363,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_contributors",{"_index":339,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_data_source_ref",{"_index":357,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_data_sources",{"_index":345,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_defense_bypassed",{"_index":346,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_deprecated",{"_index":334,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_detection",{"_index":343,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_domains",{"_index":333,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_effective_permissions",{"_index":351,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_first_seen_citation",{"_index":361,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_impact_type",{"_index":350,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_is_subtechnique",{"_index":344,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_last_seen_citation",{"_index":362,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_modified_by_ref",{"_index":332,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_network_requirements",{"_index":352,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_permissions_required",{"_index":347,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_platforms",{"_index":336,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_remote_support",{"_index":348,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_shortname",{"_index":340,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_system_requirements",{"_index":349,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["x_mitre_version",{"_index":330,"title":{},"body":{"interfaces/Definition.html":{},"interfaces/ExternalReference.html":{},"interfaces/KillChainPhase.html":{},"interfaces/MitreAttackData.html":{}}}],["y",{"_index":934,"title":{},"body":{"directives/TooltipDirective.html":{}}}],["zebrocy",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        The root component of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {  RouterModule} from '@angular/router';\n\n/**\n * The root component of the application.\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [ RouterModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Auth0Error.html":{"url":"interfaces/Auth0Error.html","title":"interface - Auth0Error","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Auth0Error\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modules/user/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing an error response from Auth0.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            error_description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Additional description of the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A message describing the error.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface UserModel {\n  /**\n   * The user's given name.\n   * @type {string}\n   */\n  given_name: string;\n\n  /**\n   * The user's family name.\n   * @type {string}\n   */\n  family_name: string;\n\n  /**\n   * The user's nickname.\n   * @type {string}\n   */\n  nickname: string;\n\n  /**\n   * The user's full name.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * The URL of the user's picture.\n   * @type {string}\n   */\n  picture: string;\n\n  /**\n   * The date and time when the user's profile was last updated.\n   * @type {string}\n   */\n  updated_at: string;\n\n  /**\n   * The user's email address.\n   * @type {string}\n   */\n  email: string;\n\n  /**\n   * Indicates whether the user's email address has been verified.\n   * @type {boolean}\n   */\n  email_verified: boolean;\n\n  /**\n   * The user's unique identifier.\n   * @type {string}\n   */\n  sub: string;\n}\n\n/**\n * Interface representing an error response from Auth0.\n */\nexport interface Auth0Error {\n  /**\n   * The type of error.\n   * @type {string}\n   */\n  error: string;\n\n  /**\n   * Additional description of the error.\n   * @type {string | undefined}\n   */\n  error_description?: string;\n\n  /**\n   * A message describing the error.\n   * @type {string | undefined}\n   */\n  message?: string;\n}\n\n/**\n * Type representing possible error types from Auth0.\n */\nexport type Auth0ErrorType = 'login_required' | 'consent_required' | 'interaction_required';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Auth0_Guard.html":{"url":"injectables/Auth0_Guard.html","title":"injectable - Auth0_Guard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Auth0_Guard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/guards/auth0-guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth0Service\n                            \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(undefined: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth0-guard.ts:34\n                        \n                    \n\n\n            \n                \n                        Determines whether the user can activate a route.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The state of the router.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An observable indicating whether the user can activate the route.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth0Service\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/guards/auth0-guard.ts:26\n                        \n                    \n\n            \n                \n                    The authentication service for Auth0.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/guards/auth0-guard.ts:20\n                        \n                    \n\n            \n                \n                    The router instance for navigation.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, NavigationEnd, Router, RouterStateSnapshot } from \"@angular/router\";\nimport { Observable, of, takeUntil, } from \"rxjs\";\nimport { AuthService } from '@auth0/auth0-angular';\nimport { UserFacade } from \"../modules/user/store/user.facade\";\nimport { ROUTE } from \"../../shared/routes/route.model\";\n\n\n@Injectable({\n  providedIn: 'root',\n})\n/**\n * Guard for authenticating routes using Auth0.\n */\nexport class Auth0_Guard {\n  /**\n   * The router instance for navigation.\n   * @type {Router}\n   */\n  private router: Router = inject(Router);\n\n  /**\n   * The authentication service for Auth0.\n   * @type {AuthService}\n   */\n  public auth0Service: AuthService = inject(AuthService);\n\n  /**\n   * Determines whether the user can activate a route.\n   * @param {ActivatedRouteSnapshot} data The data associated with the route.\n   * @param {RouterStateSnapshot} state The state of the router.\n   * @returns {Observable} An observable indicating whether the user can activate the route.\n   */\n  canActivate({ data }: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable {\n    if (localStorage.getItem('token')?.length) {\n      return of(true);\n    } else {\n      this.router.navigateByUrl(`/${ROUTE.USER_AUTH}`);\n      return of(true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libraries/components/card/card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Represents a card component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                CARD_DIRECTIVES\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cardConfig\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cardConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cardConfig\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/components/card/card.component.ts:31\n                            \n                        \n                \n                    \n                        Configuration for the card component.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cardConfig\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/libraries/components/card/card.component.ts:31\n                        \n                    \n\n            \n                \n                    Configuration for the card component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { CardConfig } from '../../models/card.model';\nimport { TooltipDirective } from '../../directives/tooltip.directive';\n\n\n/**\n * Array of modules used in the Card component.\n * @type {Array}\n */\nconst CARD_DIRECTIVES = [\n  TooltipDirective\n]\n\n/**\n * Represents a card component.\n */\n@Component({\n  selector: 'app-card',\n  standalone: true,\n  imports: [\n    ...CARD_DIRECTIVES\n  ],\n  templateUrl: './card.component.html',\n  styleUrl: './card.component.scss'\n})\nexport class CardComponent {\n/**\n * Configuration for the card component.\n * @type {CardConfig}\n */\n  public cardConfig = input.required();\n\n\n}\n\n    \n\n    \n        @if(cardConfig()){\n  \n\n    \n    @if(cardConfig().header){\n\n      \n        \n          \n            {{cardConfig().header.label}}\n          \n        \n        \n          \n            {{cardConfig().header.value}}\n          \n        \n      \n    }\n\n    \n    @if(cardConfig().footer){\n      \n        @for(cta of cardConfig().footer; track cta ){\n          \n        }\n      \n    }\n\n    \n  \n\n\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(cardConfig()){          @if(cardConfig().header){                                    {{cardConfig().header.label}}                                                {{cardConfig().header.value}}                            }        @if(cardConfig().footer){              @for(cta of cardConfig().footer; track cta ){                  }          }      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardConfig.html":{"url":"interfaces/CardConfig.html","title":"interface - CardConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/card.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for a card component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            footer\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        footer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        footer:         CardFooter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardFooter[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The footer configuration for the card.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         CardHeader\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardHeader\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header configuration for the card.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardConfig {\n  /**\n   * The header configuration for the card.\n   * @type {CardHeader}\n   */\n  header: CardHeader;\n\n  /**\n   * The footer configuration for the card.\n   * @type {CardFooter[]}\n   */\n  footer: CardFooter[];\n}\n\n/**\n * Configuration for the header of a card component.\n */\nexport interface CardHeader {\n  /**\n   * The label for the card header.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * The value for the card header.\n   * @type {string}\n   */\n  value: string;\n\n  /**\n   * Optional CSS class for the card header.\n   * @type {string}\n   */\n  class?: string;\n}\n\n/**\n * Configuration for the footer of a card component.\n */\nexport interface CardFooter {\n  /**\n   * The icon for the card footer.\n   * @type {CardIcon}\n   */\n  icon: CardIcon;\n\n  /**\n   * Optional label for the card footer.\n   * @type {string}\n   */\n  label?: string;\n\n  /**\n   * The type of action for the card footer.\n   * @type {CardAction}\n   */\n  actionType: CardAction;\n\n  /**\n   * The action to be executed when the card footer is interacted with.\n   * @type {(actionType: CardAction) => void}\n   */\n  action: (actionType: CardAction) => void;\n}\n\n/**\n * Enum representing different actions for a card component.\n */\nexport enum CardAction {\n  INFO = 'info',\n  SETTINGS = 'settings',\n}\n\n/**\n * Enum representing different icons for a card component.\n */\nexport enum CardIcon {\n  info = 'fa fa-info-circle',\n  settings = 'fa fa-gear',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardFooter.html":{"url":"interfaces/CardFooter.html","title":"interface - CardFooter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardFooter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/card.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for the footer of a card component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            actionType\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The action to be executed when the card footer is interacted with.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionType:         CardAction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardAction\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of action for the card footer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         CardIcon\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardIcon\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The icon for the card footer.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional label for the card footer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardConfig {\n  /**\n   * The header configuration for the card.\n   * @type {CardHeader}\n   */\n  header: CardHeader;\n\n  /**\n   * The footer configuration for the card.\n   * @type {CardFooter[]}\n   */\n  footer: CardFooter[];\n}\n\n/**\n * Configuration for the header of a card component.\n */\nexport interface CardHeader {\n  /**\n   * The label for the card header.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * The value for the card header.\n   * @type {string}\n   */\n  value: string;\n\n  /**\n   * Optional CSS class for the card header.\n   * @type {string}\n   */\n  class?: string;\n}\n\n/**\n * Configuration for the footer of a card component.\n */\nexport interface CardFooter {\n  /**\n   * The icon for the card footer.\n   * @type {CardIcon}\n   */\n  icon: CardIcon;\n\n  /**\n   * Optional label for the card footer.\n   * @type {string}\n   */\n  label?: string;\n\n  /**\n   * The type of action for the card footer.\n   * @type {CardAction}\n   */\n  actionType: CardAction;\n\n  /**\n   * The action to be executed when the card footer is interacted with.\n   * @type {(actionType: CardAction) => void}\n   */\n  action: (actionType: CardAction) => void;\n}\n\n/**\n * Enum representing different actions for a card component.\n */\nexport enum CardAction {\n  INFO = 'info',\n  SETTINGS = 'settings',\n}\n\n/**\n * Enum representing different icons for a card component.\n */\nexport enum CardIcon {\n  info = 'fa fa-info-circle',\n  settings = 'fa fa-gear',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CardHeader.html":{"url":"interfaces/CardHeader.html","title":"interface - CardHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CardHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/card.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for the header of a card component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class for the card header.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The label for the card header.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value for the card header.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface CardConfig {\n  /**\n   * The header configuration for the card.\n   * @type {CardHeader}\n   */\n  header: CardHeader;\n\n  /**\n   * The footer configuration for the card.\n   * @type {CardFooter[]}\n   */\n  footer: CardFooter[];\n}\n\n/**\n * Configuration for the header of a card component.\n */\nexport interface CardHeader {\n  /**\n   * The label for the card header.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * The value for the card header.\n   * @type {string}\n   */\n  value: string;\n\n  /**\n   * Optional CSS class for the card header.\n   * @type {string}\n   */\n  class?: string;\n}\n\n/**\n * Configuration for the footer of a card component.\n */\nexport interface CardFooter {\n  /**\n   * The icon for the card footer.\n   * @type {CardIcon}\n   */\n  icon: CardIcon;\n\n  /**\n   * Optional label for the card footer.\n   * @type {string}\n   */\n  label?: string;\n\n  /**\n   * The type of action for the card footer.\n   * @type {CardAction}\n   */\n  actionType: CardAction;\n\n  /**\n   * The action to be executed when the card footer is interacted with.\n   * @type {(actionType: CardAction) => void}\n   */\n  action: (actionType: CardAction) => void;\n}\n\n/**\n * Enum representing different actions for a card component.\n */\nexport enum CardAction {\n  INFO = 'info',\n  SETTINGS = 'settings',\n}\n\n/**\n * Enum representing different icons for a card component.\n */\nexport enum CardIcon {\n  info = 'fa fa-info-circle',\n  settings = 'fa fa-gear',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChipComponent.html":{"url":"components/ChipComponent.html","title":"component - ChipComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChipComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libraries/components/chip/chip.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chip\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./chip.component.html\n            \n\n\n\n            \n                styleUrl\n                ./chip.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chipConfig\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipConfig\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/components/chip/chip.component.ts:20\n                            \n                        \n                \n                    \n                        Configuration for the chip component.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chipConfig\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/libraries/components/chip/chip.component.ts:20\n                        \n                    \n\n            \n                \n                    Configuration for the chip component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { ChipConfig } from '../../models/chip.model';\n\n@Component({\n  selector: 'app-chip',\n  standalone: true,\n  imports: [],\n  templateUrl: './chip.component.html',\n  styleUrl: './chip.component.scss'\n})\n\n/**\n * Component representing a chip.\n */\nexport class ChipComponent {\n/**\n * Configuration for the chip component.\n * @type {ChipConfig}\n */\n  public chipConfig = input.required();\n\n}\n\n    \n\n    \n        @if(chipConfig()){\n  \n    @if(chipConfig().icon){\n      \n    }\n    {{chipConfig().label}}\n  \n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(chipConfig()){      @if(chipConfig().icon){          }    {{chipConfig().label}}  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChipComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChipConfig.html":{"url":"interfaces/ChipConfig.html","title":"interface - ChipConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChipConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/chip.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            classIcon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            icon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isDark\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class for the chip.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        classIcon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class for the chip icon.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional icon for the chip.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDark\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isDark:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional flag indicating whether the chip has a dark theme.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The label for the chip.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ChipConfig {\n  /**\n   * The label for the chip.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * Optional CSS class for the chip.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * Optional flag indicating whether the chip has a dark theme.\n   * @type {boolean}\n   */\n  isDark?: boolean;\n\n  /**\n   * Optional icon for the chip.\n   * @type {string}\n   */\n  icon?: string;\n\n  /**\n   * Optional CSS class for the chip icon.\n   * @type {string}\n   */\n  classIcon?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChipsetComponent.html":{"url":"components/ChipsetComponent.html","title":"component - ChipsetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChipsetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libraries/components/chip-set/chip-set.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component representing a set of chips.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-chip-set\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UI_CHIPSET\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./chip-set.component.html\n            \n\n\n\n            \n                styleUrl\n                ./chip-set.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chipsetConfig\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                chipsetConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        chipsetConfig\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/components/chip-set/chip-set.component.ts:32\n                            \n                        \n                \n                    \n                        Configuration for the chipset component.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chipsetConfig\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/libraries/components/chip-set/chip-set.component.ts:32\n                        \n                    \n\n            \n                \n                    Configuration for the chipset component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { ChipsetConfig } from '../../models/chipset.model';\nimport { ChipComponent } from '../chip/chip.component';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Array containing UI chipset components.\n * @type {typeof ChipComponent[]}\n */\nconst UI_CHIPSET: typeof ChipComponent[] = [\n  ChipComponent\n];\n\n/**\n * Component representing a set of chips.\n */\n@Component({\n  selector: 'app-chip-set',\n  standalone: true,\n  imports: [\n    ...UI_CHIPSET,\n    CommonModule\n  ],\n  templateUrl: './chip-set.component.html',\n  styleUrl: './chip-set.scss'\n})\nexport class ChipsetComponent {\n  /**\n   * Configuration for the chipset component.\n   * @type {ChipsetConfig}\n   */\n  public chipsetConfig = input.required();\n}\n\n    \n\n    \n        @if(chipsetConfig()){\n\n  \n\n    @if(chipsetConfig().header){\n      \n        @for(header of chipsetConfig().header; track header){\n          \n            \n              {{header.label}}\n            \n          \n        }\n      \n    }\n\n    @if(chipsetConfig().content){\n\n\n      \n        @for(row of chipsetConfig().content; track row){\n          \n            @for(chip of row.chips; track chip){\n              \n            }\n          \n        }\n      \n    }\n\n\n  \n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(chipsetConfig()){      @if(chipsetConfig().header){              @for(header of chipsetConfig().header; track header){                                    {{header.label}}                              }          }    @if(chipsetConfig().content){              @for(row of chipsetConfig().content; track row){                      @for(chip of row.chips; track chip){                          }                  }          }  }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChipsetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChipsetConfig.html":{"url":"interfaces/ChipsetConfig.html","title":"interface - ChipsetConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChipsetConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/chipset.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         ChipsetContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChipsetContent[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content sections of the chip set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         ChipsetHeader[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChipsetHeader[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header configuration for the chip set.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChipConfig } from \"./chip.model\";\n\nexport interface ChipsetConfig {\n  /**\n   * The header configuration for the chip set.\n   * @type {ChipsetHeader[]}\n   */\n  header: ChipsetHeader[];\n\n  /**\n   * The content sections of the chip set.\n   * @type {ChipsetContent[]}\n   */\n  content: ChipsetContent[];\n}\n\n/**\n * Configuration for the header of a chip set.\n */\nexport interface ChipsetHeader {\n  /**\n   * Optional CSS class for the header of the chip set.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * The size of the header of the chip set.\n   * @type {string}\n   */\n  size: string;\n\n  /**\n   * The label for the header of the chip set.\n   * @type {string}\n   */\n  label: string;\n}\n\n/**\n * Configuration for the content section of a chip set.\n */\nexport interface ChipsetContent {\n  /**\n   * Optional CSS class for the content section of the chip set.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * The size of the content section of the chip set.\n   * @type {string}\n   */\n  size: string;\n\n  /**\n   * The chips configuration for the content section of the chip set.\n   * @type {ChipConfig[]}\n   */\n  chips: ChipConfig[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChipsetContent.html":{"url":"interfaces/ChipsetContent.html","title":"interface - ChipsetContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChipsetContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/chipset.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for the content section of a chip set.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chips\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chips\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chips:         ChipConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChipConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The chips configuration for the content section of the chip set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class for the content section of the chip set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the content section of the chip set.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChipConfig } from \"./chip.model\";\n\nexport interface ChipsetConfig {\n  /**\n   * The header configuration for the chip set.\n   * @type {ChipsetHeader[]}\n   */\n  header: ChipsetHeader[];\n\n  /**\n   * The content sections of the chip set.\n   * @type {ChipsetContent[]}\n   */\n  content: ChipsetContent[];\n}\n\n/**\n * Configuration for the header of a chip set.\n */\nexport interface ChipsetHeader {\n  /**\n   * Optional CSS class for the header of the chip set.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * The size of the header of the chip set.\n   * @type {string}\n   */\n  size: string;\n\n  /**\n   * The label for the header of the chip set.\n   * @type {string}\n   */\n  label: string;\n}\n\n/**\n * Configuration for the content section of a chip set.\n */\nexport interface ChipsetContent {\n  /**\n   * Optional CSS class for the content section of the chip set.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * The size of the content section of the chip set.\n   * @type {string}\n   */\n  size: string;\n\n  /**\n   * The chips configuration for the content section of the chip set.\n   * @type {ChipConfig[]}\n   */\n  chips: ChipConfig[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChipsetHeader.html":{"url":"interfaces/ChipsetHeader.html","title":"interface - ChipsetHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChipsetHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/chipset.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for the header of a chip set.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional CSS class for the header of the chip set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The label for the header of the chip set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the header of the chip set.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChipConfig } from \"./chip.model\";\n\nexport interface ChipsetConfig {\n  /**\n   * The header configuration for the chip set.\n   * @type {ChipsetHeader[]}\n   */\n  header: ChipsetHeader[];\n\n  /**\n   * The content sections of the chip set.\n   * @type {ChipsetContent[]}\n   */\n  content: ChipsetContent[];\n}\n\n/**\n * Configuration for the header of a chip set.\n */\nexport interface ChipsetHeader {\n  /**\n   * Optional CSS class for the header of the chip set.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * The size of the header of the chip set.\n   * @type {string}\n   */\n  size: string;\n\n  /**\n   * The label for the header of the chip set.\n   * @type {string}\n   */\n  label: string;\n}\n\n/**\n * Configuration for the content section of a chip set.\n */\nexport interface ChipsetContent {\n  /**\n   * Optional CSS class for the content section of the chip set.\n   * @type {string}\n   */\n  class?: string;\n\n  /**\n   * The size of the content section of the chip set.\n   * @type {string}\n   */\n  size: string;\n\n  /**\n   * The chips configuration for the content section of the chip set.\n   * @type {ChipConfig[]}\n   */\n  chips: ChipConfig[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClusterComponent.html":{"url":"components/ClusterComponent.html","title":"component - ClusterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ClusterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libraries/components/cluster/cluster.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component representing a cluster.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cluster\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                CLUSTER_DIRECTIVES\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./cluster.component.html\n            \n\n\n\n            \n                styleUrl\n                ./cluster.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clusterConfig\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clusterConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clusterConfig\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/components/cluster/cluster.component.ts:32\n                            \n                        \n                \n                    \n                        Configuration for the cluster component.\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clusterConfig\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/libraries/components/cluster/cluster.component.ts:32\n                        \n                    \n\n            \n                \n                    Configuration for the cluster component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, input } from '@angular/core';\nimport { ClusterConfig } from '../../models/cluster.model';\nimport { CommonModule } from '@angular/common';\nimport { TooltipDirective } from '../../directives/tooltip.directive';\n\n/**\n * Array containing cluster directives.\n * @type {typeof TooltipDirective[]}\n */\nconst CLUSTER_DIRECTIVES: typeof TooltipDirective[] = [\n  TooltipDirective\n];\n\n/**\n * Component representing a cluster.\n */\n@Component({\n  selector: 'app-cluster',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ...CLUSTER_DIRECTIVES\n  ],\n  templateUrl: './cluster.component.html',\n  styleUrl: './cluster.component.scss'\n})\nexport class ClusterComponent {\n/**\n * Configuration for the cluster component.\n * @type {ClusterConfig}\n */\n  public clusterConfig = input.required();\n\n}\n\n    \n\n    \n        @if(clusterConfig()){\n  \n  \n    \n      {{clusterConfig().name}}\n    \n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(clusterConfig()){              {{clusterConfig().name}}      }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClusterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClusterConfig.html":{"url":"interfaces/ClusterConfig.html","title":"interface - ClusterConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ClusterConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/cluster.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                        \n                                            externalID\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            opaque\n                                        \n                                \n                                \n                                        \n                                            select\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            techniques\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uses\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the cluster is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        externalID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        externalID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The external ID of the cluster.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the cluster.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the cluster.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opaque\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opaque:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the cluster is opaque.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        select:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Function to handle cluster selection.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The size of the cluster.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        techniques\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        techniques:         ExtendedMitreAttackInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtendedMitreAttackInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional array of techniques associated with the cluster.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uses:         ExtendedMitreAttackInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtendedMitreAttackInfo[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional array of uses associated with the cluster.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ExtendedMitreAttackInfo } from \"../../modules/deas/hub/models/hub.models\";\n\nexport interface ClusterConfig {\n  /**\n   * Indicates whether the cluster is active.\n   * @type {boolean}\n   */\n  active: boolean;\n\n  /**\n   * Indicates whether the cluster is opaque.\n   * @type {boolean}\n   */\n  opaque: boolean;\n\n  /**\n   * The name of the cluster.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * The size of the cluster.\n   * @type {number}\n   */\n  size: number;\n\n  /**\n   * Function to handle cluster selection.\n   * @param {ClusterConfig} mitreInfo The Mitre Attack information for the selected cluster.\n   * @returns {void}\n   */\n  select: (mitreInfo: ClusterConfig) => void;\n\n  /**\n   * The ID of the cluster.\n   * @type {string}\n   */\n  id: string;\n\n  /**\n   * Optional array of techniques associated with the cluster.\n   * @type {ExtendedMitreAttackInfo[]}\n   */\n  techniques?: ExtendedMitreAttackInfo[];\n\n  /**\n   * Optional array of uses associated with the cluster.\n   * @type {ExtendedMitreAttackInfo[]}\n   */\n  uses?: ExtendedMitreAttackInfo[];\n\n  /**\n   * The external ID of the cluster.\n   * @type {string}\n   */\n  externalID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeasComponent.html":{"url":"components/DeasComponent.html","title":"component - DeasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/deas/deas.component.ts\n\n\n\n    \n        Description\n    \n    \n        Represents the DeasComponent class.\nThis component is responsible for rendering the Deas view.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-deas\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                MODULES_CORE_DEAS\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./deas.component.html\n            \n\n\n\n            \n                styleUrl\n                ./deas.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n/**\n * Array of modules used in the Deas component.\n * @type {Array}\n */\nconst MODULES_CORE_DEAS = [\n  RouterModule,\n  CommonModule\n]\n\n\n/**\n * Represents the DeasComponent class.\n * This component is responsible for rendering the Deas view.\n */\n@Component({\n  selector: 'app-deas',\n  standalone: true,\n  imports: [\n    ...MODULES_CORE_DEAS\n  ],\n  templateUrl: './deas.component.html',\n  styleUrl: './deas.component.scss'\n})\nexport class DeasComponent {\n\n}\n\n    \n\n    \n        \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'DeasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Definition.html":{"url":"interfaces/Definition.html","title":"interface - Definition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Definition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/mitre.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Definition related to Mitre Attack data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            statement\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        statement\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statement:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackData {\n  type: string;\n  id: string;\n  objects: MitreAttackInfo[];\n  spec_version: string;\n}\n\n/**\n * Interface for the Mitre Attack information.\n */\nexport interface MitreAttackInfo {\n  tactic_refs: string[];\n  object_marking_refs: string[];\n  id: string;\n  type: MitreType;\n  created: string;\n  created_by_ref: string;\n  external_references: ExternalReference[];\n  modified: string;\n  name: string;\n  description: string;\n  x_mitre_version: string;\n  x_mitre_attack_spec_version: string;\n  x_mitre_modified_by_ref: string;\n  x_mitre_domains: string[];\n  x_mitre_deprecated: boolean;\n  revoked: boolean;\n  x_mitre_platforms: string[];\n  x_mitre_aliases: string[];\n  labels: string[];\n  x_mitre_contributors: string[];\n  x_mitre_shortname: string;\n  kill_chain_phases: KillChainPhase[];\n  x_mitre_detection: string;\n  x_mitre_is_subtechnique: boolean;\n  x_mitre_data_sources: string[];\n  x_mitre_defense_bypassed: string[];\n  x_mitre_permissions_required: string[];\n  x_mitre_remote_support: boolean;\n  x_mitre_system_requirements: string[];\n  x_mitre_impact_type: string[];\n  x_mitre_effective_permissions: string[];\n  x_mitre_network_requirements: boolean;\n  relationship_type: RelationshipType;\n  source_ref: string;\n  target_ref: string;\n  x_mitre_data_source_ref: string;\n  aliases: string[];\n  first_seen: string;\n  last_seen: string;\n  x_mitre_first_seen_citation: string;\n  x_mitre_last_seen_citation: string;\n  x_mitre_collection_layers: string[];\n  identity_class: string;\n  definition: Definition;\n  definition_type: string;\n}\n\n/**\n * Interface for external references related to Mitre Attack data.\n */\nexport interface ExternalReference {\n  source_name: string;\n  description: string;\n  url: string;\n  external_id: string;\n}\n\n/**\n * Interface for the Kill Chain Phase related to Mitre Attack data.\n */\nexport interface KillChainPhase {\n  kill_chain_name: string;\n  phase_name: string;\n}\n\n/**\n * Interface for the Definition related to Mitre Attack data.\n */\nexport interface Definition {\n  statement: string;\n}\n\n/**\n * Type for Mitre Attack data type.\n */\nexport type MitreType =\n  | 'bundle'\n  | 'marking-definition'\n  | 'definition'\n  | 'x-mitre-matrix'\n  | 'x-mitre-tactic'\n  | 'course-of-action'\n  | 'tool'\n  | 'attack-pattern'\n  | 'relationship'\n  | 'malware';\n\n/**\n * Type for Relationship type in Mitre Attack data.\n */\nexport type RelationshipType = 'mitigates' | 'uses' | 'detects' | 'subtechnique-of';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ExternalReference.html":{"url":"interfaces/ExternalReference.html","title":"interface - ExternalReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ExternalReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/mitre.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for external references related to Mitre Attack data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            external_id\n                                        \n                                \n                                \n                                        \n                                            source_name\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        external_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        external_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackData {\n  type: string;\n  id: string;\n  objects: MitreAttackInfo[];\n  spec_version: string;\n}\n\n/**\n * Interface for the Mitre Attack information.\n */\nexport interface MitreAttackInfo {\n  tactic_refs: string[];\n  object_marking_refs: string[];\n  id: string;\n  type: MitreType;\n  created: string;\n  created_by_ref: string;\n  external_references: ExternalReference[];\n  modified: string;\n  name: string;\n  description: string;\n  x_mitre_version: string;\n  x_mitre_attack_spec_version: string;\n  x_mitre_modified_by_ref: string;\n  x_mitre_domains: string[];\n  x_mitre_deprecated: boolean;\n  revoked: boolean;\n  x_mitre_platforms: string[];\n  x_mitre_aliases: string[];\n  labels: string[];\n  x_mitre_contributors: string[];\n  x_mitre_shortname: string;\n  kill_chain_phases: KillChainPhase[];\n  x_mitre_detection: string;\n  x_mitre_is_subtechnique: boolean;\n  x_mitre_data_sources: string[];\n  x_mitre_defense_bypassed: string[];\n  x_mitre_permissions_required: string[];\n  x_mitre_remote_support: boolean;\n  x_mitre_system_requirements: string[];\n  x_mitre_impact_type: string[];\n  x_mitre_effective_permissions: string[];\n  x_mitre_network_requirements: boolean;\n  relationship_type: RelationshipType;\n  source_ref: string;\n  target_ref: string;\n  x_mitre_data_source_ref: string;\n  aliases: string[];\n  first_seen: string;\n  last_seen: string;\n  x_mitre_first_seen_citation: string;\n  x_mitre_last_seen_citation: string;\n  x_mitre_collection_layers: string[];\n  identity_class: string;\n  definition: Definition;\n  definition_type: string;\n}\n\n/**\n * Interface for external references related to Mitre Attack data.\n */\nexport interface ExternalReference {\n  source_name: string;\n  description: string;\n  url: string;\n  external_id: string;\n}\n\n/**\n * Interface for the Kill Chain Phase related to Mitre Attack data.\n */\nexport interface KillChainPhase {\n  kill_chain_name: string;\n  phase_name: string;\n}\n\n/**\n * Interface for the Definition related to Mitre Attack data.\n */\nexport interface Definition {\n  statement: string;\n}\n\n/**\n * Type for Mitre Attack data type.\n */\nexport type MitreType =\n  | 'bundle'\n  | 'marking-definition'\n  | 'definition'\n  | 'x-mitre-matrix'\n  | 'x-mitre-tactic'\n  | 'course-of-action'\n  | 'tool'\n  | 'attack-pattern'\n  | 'relationship'\n  | 'malware';\n\n/**\n * Type for Relationship type in Mitre Attack data.\n */\nexport type RelationshipType = 'mitigates' | 'uses' | 'detects' | 'subtechnique-of';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HubComponent.html":{"url":"components/HubComponent.html","title":"component - HubComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HubComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/deas/hub/hub.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                HubFacade\n                \n            \n\n\n            \n                selector\n                app-hub\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                MODULES_HUB\n                                DIRECTIVES_HUB\n                                UI_KIT_HUB\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./hub.component.html\n            \n\n\n\n            \n                styleUrl\n                ./hub.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clusters\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                hackerType\n                            \n                            \n                                    Private\n                                hubFacade\n                            \n                            \n                                    Public\n                                hubService\n                            \n                            \n                                    Public\n                                mitraDataSubscription\n                            \n                            \n                                    Public\n                                mitreData\n                            \n                            \n                                    Public\n                                mitreDataFilter$\n                            \n                            \n                                    Public\n                                mitreDataInfo$\n                            \n                            \n                                    Public\n                                mitreHerarchyData\n                            \n                            \n                                    Private\n                                userFacade\n                            \n                            \n                                    Public\n                                userInfo$\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filter\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/deas/hub/hub.component.ts:139\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(hackerType: HackerType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/hub.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Filters the Mitre Data based on the hacker type.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                hackerType\n                                            \n                                                            HackerType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The type of hacker to filter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/hub.component.ts:177\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that destroys the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        onLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/hub.component.ts:169\n                        \n                    \n\n\n            \n                \n                        Handles the logout interaction.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clusters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClusterConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:133\n                        \n                    \n\n            \n                \n                    Configurations for clusters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:97\n                        \n                    \n\n            \n                \n                    Subject for managing the destruction of observables.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hackerType\n                        \n                    \n                \n            \n                \n                    \n                        Default value : HackerType\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:139\n                        \n                    \n\n            \n                \n                    Enumeration of hacker types.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HubFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:85\n                        \n                    \n\n            \n                \n                    Facade for interacting with the Hub module store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hubService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HubService)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:91\n                        \n                    \n\n            \n                \n                    Hub service for Hub-specific operations.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitraDataSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : this.hubFacade.mitreData$.pipe(\n    filter(Boolean),\n    takeUntil(this.destroy$)\n  ).subscribe((data: ExtendedMitreAttackInfo[]) => {\n    this.mitreHerarchyData = data;\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:149\n                        \n                    \n\n            \n                \n                    Subscription to the Mitre Data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MitreAttackData | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:121\n                        \n                    \n\n            \n                \n                    Current Mitre Attack data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreDataFilter$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.hubFacade.mitreDataFilter$\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:115\n                        \n                    \n\n            \n                \n                    Observable that provides the current Mitre Attack data filter based on the hacker type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreDataInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.hubFacade.mitreData$\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:109\n                        \n                    \n\n            \n                \n                    Observable that provides the extended Mitre Attack information or null.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreHerarchyData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtendedMitreAttackInfo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:127\n                        \n                    \n\n            \n                \n                    Hierarchy of extended Mitre Attack data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:79\n                        \n                    \n\n            \n                \n                    Facade for interacting with the user store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.userFacade.user$\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:103\n                        \n                    \n\n            \n                \n                    Observable that provides the current user's information.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/hub.component.ts:73\n                        \n                    \n\n            \n                \n                    User service for managing user-related operations.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { MitreAttackInfo } from './../../../shared/model/mitre.model';\nimport { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { UserService } from '../../../core/modules/user/service/user.service';\nimport { RouterModule } from '@angular/router';\nimport { HubFacade } from './store/hub.facade';\nimport { filter, Observable, Subject, Subscription, takeUntil } from 'rxjs';\nimport { MitreAttackData } from '../../../shared/model/mitre.model';\nimport { UserModel } from '../../../core/modules/user/models/user.model';\nimport { UserFacade } from '../../../core/modules/user/store/user.facade';\nimport { TooltipDirective } from '../../../libraries/directives/tooltip.directive';\nimport { ExtendedMitreAttackInfo } from './models/hub.models';\nimport { HubService } from './services/hub.service';\nimport { LoaderComponent } from '../../../libraries/components/loader/loader.component';\nimport { CardComponent } from '../../../libraries/components/card/card.component';\nimport { CardAction, CardConfig, CardIcon } from '../../../libraries/models/card.model';\nimport { ClusterComponent } from '../../../libraries/components/cluster/cluster.component';\nimport { ClusterConfig } from '../../../libraries/models/cluster.model';\nimport { MitreAttackComponent } from '../mitre-attack/mitre-attack.component';\nimport { HackerType } from '../../../shared/constants/groupHackers.model';\n\n\n\n/**\n * Array of modules used in the hub component.\n * @type {Array}\n */\nconst MODULES_HUB = [\n  RouterModule,\n  CommonModule\n]\n\n/**\n * Array of directives used in the Hub component.\n */\nconst DIRECTIVES_HUB = [\n  TooltipDirective\n]\n\n/**\n * Array containing components related to the UI kit hub.\n * @type {Array}\n */\nconst UI_KIT_HUB = [\n  MitreAttackComponent,\n  LoaderComponent,\n  CardComponent,\n  ClusterComponent\n]\n\n\n\n@Component({\n  selector: 'app-hub',\n  standalone: true,\n  imports: [\n    ...MODULES_HUB,\n    ...DIRECTIVES_HUB,\n    ...UI_KIT_HUB\n  ],\n  templateUrl: './hub.component.html',\n  styleUrl: './hub.component.scss',\n  providers: [HubFacade]\n})\n/**\n * Represents the Hub component.\n */\nexport class HubComponent {\n  /**\n   * User service for managing user-related operations.\n   * @private\n   */\n  private userService = inject(UserService);\n\n  /**\n   * Facade for interacting with the user store.\n   * @private\n   */\n  private userFacade = inject(UserFacade);\n\n  /**\n   * Facade for interacting with the Hub module store.\n   * @private\n   */\n  private hubFacade = inject(HubFacade);\n\n  /**\n   * Hub service for Hub-specific operations.\n   * @public\n   */\n  public hubService = inject(HubService);\n\n  /**\n   * Subject for managing the destruction of observables.\n   * @private\n   */\n  private destroy$ = new Subject();\n\n  /**\n   * Observable that provides the current user's information.\n   * @public\n   */\n  public userInfo$: Observable = this.userFacade.user$;\n\n  /**\n   * Observable that provides the extended Mitre Attack information or null.\n   * @public\n   */\n  public mitreDataInfo$: Observable = this.hubFacade.mitreData$;\n\n  /**\n   * Observable that provides the current Mitre Attack data filter based on the hacker type.\n   * @public\n   */\n  public mitreDataFilter$: Observable = this.hubFacade.mitreDataFilter$;\n\n  /**\n   * Current Mitre Attack data.\n   * @public\n   */\n  public mitreData: MitreAttackData | null = null;\n\n  /**\n   * Hierarchy of extended Mitre Attack data.\n   * @public\n   */\n  public mitreHerarchyData: ExtendedMitreAttackInfo[] = [];\n\n  /**\n   * Configurations for clusters.\n   * @public\n   */\n  public clusters: ClusterConfig[] = [];\n\n  /**\n   * Enumeration of hacker types.\n   * @public\n   */\n  public hackerType = HackerType;\n\n  constructor() {\n    this.hubFacade.getMitreData();\n  }\n\n  /**\n   * Subscription to the Mitre Data.\n   * @public\n   */\n  public mitraDataSubscription: Subscription = this.hubFacade.mitreData$.pipe(\n    filter(Boolean),\n    takeUntil(this.destroy$)\n  ).subscribe((data: ExtendedMitreAttackInfo[]) => {\n    this.mitreHerarchyData = data;\n  });\n\n  /**\n   * Filters the Mitre Data based on the hacker type.\n   * @param hackerType The type of hacker to filter.\n   * @public\n   */\n  public filter(hackerType: HackerType): void {\n    this.hubFacade.filtreMitreData(this.mitreHerarchyData, hackerType);\n  }\n\n  /**\n   * Handles the logout interaction.\n   * @public\n   */\n  public onLogout(): void {\n    this.userService.setUserLogOut();\n  }\n\n  /**\n   * Lifecycle hook that destroys the component.\n   * @public\n   */\n  public ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n    \n      {{'Log out'}}\n    \n  \n\n  @if(mitreDataFilter$ | async; as MitreFilter){\n\n    \n      \n        {{'GENERIC'}}\n      \n\n      \n        {{'APT 28'}}\n      \n\n      \n        {{'APT 29'}}\n      \n    \n  }\n\n\n  \n    \n  \n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\\'Log out\\'}}        @if(mitreDataFilter$ | async; as MitreFilter){                  {{\\'GENERIC\\'}}                    {{\\'APT 28\\'}}                    {{\\'APT 29\\'}}            }        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'HubComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HubEffects.html":{"url":"injectables/HubEffects.html","title":"injectable - HubEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HubEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/deas/hub/store/hub.effects.ts\n        \n\n\n            \n                Description\n            \n            \n                Effects class for the Hub module.\nHandles side effects related to the Hub feature, such as fetching Mitre data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterMitreData\n                            \n                            \n                                    Public\n                                getMitreData\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, hubService: HubService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/deas/hub/store/hub.effects.ts:13\n                            \n                        \n\n                \n                    \n                            Initializes the HubEffects instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Observable stream of actions dispatched in the application.\n\n                                                        \n                                                \n                                                \n                                                        hubService\n                                                  \n                                                        \n                                                                        HubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service for interacting with the Hub feature.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filterMitreData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(filterMitreData),\n      switchMap(({ mitreAttackData, filter }) => of(filterMitreDataSuccess({ mitreAttackData, filter })))\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/store/hub.effects.ts:45\n                        \n                    \n\n            \n                \n                    Effect triggered when a filterMitreData action is dispatched.\nDispatches a success action with the filtered Mitre data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getMitreData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(getMitreData),\n      switchMap(() => {\n        return this.hubService\n          .getMitreData$()\n          .pipe(\n            map((response) => getMitreDataSuccess({ mitreAttackData: this.hubService.mapMitreData(response) }))\n          );\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/store/hub.effects.ts:27\n                        \n                    \n\n            \n                \n                    Effect triggered when a getMitreData action is dispatched.\nRetrieves Mitre data from the service and dispatches a success action with the retrieved data.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { map, switchMap } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { HubService } from \"../services/hub.service\";\nimport { filterMitreData, filterMitreDataSuccess, getMitreData, getMitreDataSuccess } from \"./hub.actions\";\n\n/**\n * Effects class for the Hub module.\n * Handles side effects related to the Hub feature, such as fetching Mitre data.\n */\n@Injectable()\nexport class HubEffects {\n\n  /**\n   * Initializes the HubEffects instance.\n   * @param {Actions} actions$ Observable stream of actions dispatched in the application.\n   * @param {HubService} hubService The service for interacting with the Hub feature.\n   */\n    constructor(private actions$: Actions, private hubService: HubService) {}\n\n  /**\n   * Effect triggered when a getMitreData action is dispatched.\n   * Retrieves Mitre data from the service and dispatches a success action with the retrieved data.\n   * @type {Observable}\n   */\n  public getMitreData = createEffect(() =>\n    this.actions$.pipe(\n      ofType(getMitreData),\n      switchMap(() => {\n        return this.hubService\n          .getMitreData$()\n          .pipe(\n            map((response) => getMitreDataSuccess({ mitreAttackData: this.hubService.mapMitreData(response) }))\n          );\n      })\n    )\n  );\n\n  /**\n   * Effect triggered when a filterMitreData action is dispatched.\n   * Dispatches a success action with the filtered Mitre data.\n   * @type {Observable}\n   */\n  public filterMitreData = createEffect(() =>\n    this.actions$.pipe(\n      ofType(filterMitreData),\n      switchMap(({ mitreAttackData, filter }) => of(filterMitreDataSuccess({ mitreAttackData, filter })))\n    )\n  );\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HubFacade.html":{"url":"injectables/HubFacade.html","title":"injectable - HubFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HubFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/deas/hub/store/hub.facade.ts\n        \n\n\n            \n                Description\n            \n            \n                Facade service for the Hub module.\nProvides a simplified interface for interacting with the Hub feature store.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mitreData$\n                            \n                            \n                                    Public\n                                mitreDataFilter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filtreMitreData\n                            \n                            \n                                    Public\n                                getMitreData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/deas/hub/store/hub.facade.ts:26\n                            \n                        \n\n                \n                    \n                            Initializes the HubFacade instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The NgRx store instance.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filtreMitreData\n                        \n                    \n                \n            \n            \n                \n                        \n                    filtreMitreData(mitreAttackData: ExtendedMitreAttackInfo[], filter: HackerType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/store/hub.facade.ts:46\n                        \n                    \n\n\n            \n                \n                        Dispatches an action to filter Mitre data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mitreAttackData\n                                            \n                                                            ExtendedMitreAttackInfo[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre attack data to be filtered.\n\n                                            \n                                        \n                                        \n                                                filter\n                                            \n                                                            HackerType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The type of hacker to filter the Mitre data by.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getMitreData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMitreData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/store/hub.facade.ts:37\n                        \n                    \n\n\n            \n                \n                        Dispatches an action to fetch Mitre data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(mitreData$)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/store/hub.facade.ts:20\n                        \n                    \n\n            \n                \n                    Observable stream of Mitre data from the store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreDataFilter$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(mitreDataFilter$)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/store/hub.facade.ts:26\n                        \n                    \n\n            \n                \n                    Observable stream of Mitre data filter from the store.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { HackerType } from '../../../../shared/constants/groupHackers.model';\nimport { ExtendedMitreAttackInfo } from '../models/hub.models';\nimport { getMitreData, filterMitreData } from './hub.actions';\nimport { mitreData$, mitreDataFilter$ } from './hub.selectors';\n\n/**\n * Facade service for the Hub module.\n * Provides a simplified interface for interacting with the Hub feature store.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HubFacade {\n  /**\n   * Observable stream of Mitre data from the store.\n   * @type {Observable}\n   */\n  public mitreData$ = this.store.select(mitreData$);\n\n  /**\n   * Observable stream of Mitre data filter from the store.\n   * @type {Observable}\n   */\n  public mitreDataFilter$ = this.store.select(mitreDataFilter$);\n\n  /**\n   * Initializes the HubFacade instance.\n   * @param {Store} store The NgRx store instance.\n   */\n  constructor(private store: Store) {}\n\n  /**\n   * Dispatches an action to fetch Mitre data.\n   */\n  public getMitreData(): void {\n    this.store.dispatch(getMitreData());\n  }\n\n  /**\n   * Dispatches an action to filter Mitre data.\n   * @param {ExtendedMitreAttackInfo[]} mitreAttackData The Mitre attack data to be filtered.\n   * @param {HackerType} filter The type of hacker to filter the Mitre data by.\n   */\n  public filtreMitreData(mitreAttackData: ExtendedMitreAttackInfo[], filter: HackerType): void {\n    this.store.dispatch(filterMitreData({ mitreAttackData, filter }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HubService.html":{"url":"injectables/HubService.html","title":"injectable - HubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/deas/hub/services/hub.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                http\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterByActorRecursive\n                            \n                            \n                                    Public\n                                getMitreData$\n                            \n                            \n                                    Public\n                                mapMitreData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filterByActorRecursive\n                        \n                    \n                \n            \n            \n                \n                        \n                    filterByActorRecursive(data: ExtendedMitreAttackInfo[], actorName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/services/hub.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            ExtendedMitreAttackInfo[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actorName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ExtendedMitreAttackInfo[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getMitreData$\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMitreData$()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/services/hub.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mapMitreData\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapMitreData(data: MitreAttackData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/hub/services/hub.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            MitreAttackData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ExtendedMitreAttackInfo[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/hub/services/hub.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { inject, Injectable } from '@angular/core';\nimport { delay, Observable, of } from 'rxjs';\nimport { MitreAttackData, MitreAttackInfo } from '../../../../shared/model/mitre.model';\nimport { environment } from '../../../../../environments/environment';\nimport { ENDPOINTS } from '../../../../shared/constants/endpoints';\nimport { ExtendedMitreAttackInfo } from '../models/hub.models';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HubService {\n\n  private http = inject(HttpClient);\n\n\n  public getMitreData$(): Observable {\n    return this.http.get(`${environment.apiUrl}/${ENDPOINTS.MITRE}`);\n  }\n\n\n\n  public mapMitreData(data: MitreAttackData): ExtendedMitreAttackInfo[] {\n    const tactics: MitreAttackInfo[] = data.objects.filter(mitreInfo => mitreInfo.type === 'x-mitre-tactic');\n    const techniques: MitreAttackInfo[] = data.objects.filter(mitreInfo => mitreInfo.type === 'attack-pattern' && !mitreInfo.x_mitre_is_subtechnique);\n    const subtechniques: MitreAttackInfo[] = data.objects.filter(mitreInfo => mitreInfo.type === 'attack-pattern' && mitreInfo.x_mitre_is_subtechnique);\n\n    // Creare una mappa delle relazioni subtechnique-of\n    const subtechniqueMap: { [key: string]: MitreAttackInfo[] } = {};\n    data.objects.forEach((mitreInfo) => {\n      if (mitreInfo.relationship_type === 'subtechnique-of') {\n        if (!subtechniqueMap[mitreInfo.target_ref]) {\n          subtechniqueMap[mitreInfo.target_ref] = [];\n        }\n        const subtechnique = subtechniques.find(st => st.id === mitreInfo.source_ref);\n        if (subtechnique) {\n          subtechniqueMap[mitreInfo.target_ref].push(subtechnique);\n        }\n      }\n    });\n\n    // Creare una mappa delle entità \"uses\"\n    const usesMap: { [key: string]: MitreAttackInfo[] } = {};\n    data.objects.forEach((mitreInfo) => {\n      if (mitreInfo.relationship_type === 'uses') {\n        if (!usesMap[mitreInfo.target_ref]) {\n          usesMap[mitreInfo.target_ref] = [];\n        }\n        const entity = data.objects.find(e => e.id === mitreInfo.source_ref);\n        if (entity) {\n          usesMap[mitreInfo.target_ref].push(entity);\n        }\n      }\n    });\n\n    // Creare una mappa delle tecniche e subtecniche\n    const techniqueMap: { [key: string]: ExtendedMitreAttackInfo } = {};\n    techniques.forEach((technique) => {\n      const subtechniquesExtended = (subtechniqueMap[technique.id] || []).map((subtechnique) => ({\n        ...subtechnique,\n        uses: usesMap[subtechnique.id] || []\n      }));\n      const uses = usesMap[technique.id] || [];\n      techniqueMap[technique.id] = {\n        ...technique,\n        subtechniques: subtechniquesExtended,\n        uses\n      };\n    });\n\n    // Creare una lista delle tattiche con le tecniche, subtecniche e entità \"uses\"\n    const extendedMitreData: ExtendedMitreAttackInfo[] = tactics.map((tactic) => {\n      const techniquesExtended = techniques.filter((technique) => {\n        return technique.kill_chain_phases &&\n        technique.kill_chain_phases.some(kcp => kcp.phase_name === tactic.x_mitre_shortname);\n      }).map((technique) => techniqueMap[technique.id]);\n\n      return {\n        ...tactic,\n        techniques: techniquesExtended,\n        subtechniques: [],\n        uses: []\n      };\n    });\n\n    return extendedMitreData;\n  }\n\n  public filterByActorRecursive(data: ExtendedMitreAttackInfo[], actorName: string): ExtendedMitreAttackInfo[] {\n    return data.map(item => {\n      // Filtra subtecniche ricorsivamente\n      const subtechniques = item.subtechniques ? this.filterByActorRecursive(item.subtechniques, actorName) : [];\n\n      // Filtra le entità \"uses\"\n      const uses = item.uses ? item.uses.filter(use => use.name === actorName) : [];\n\n      // Filtra tecniche ricorsivamente\n      const techniques = item.techniques ? item.techniques.map(technique => {\n        const filteredSubtechniques = technique.subtechniques ? this.filterByActorRecursive(technique.subtechniques, actorName) : [];\n        const filteredUses = technique.uses ? technique.uses.filter(use => use.name === actorName) : [];\n\n        return {\n          ...technique,\n          subtechniques: filteredSubtechniques,\n          uses: filteredUses\n        };\n      }).filter(technique => technique.subtechniques.length > 0 || technique.uses.length > 0) : [];\n\n      return {\n        ...item,\n        subtechniques,\n        uses,\n        techniques\n      };\n    }).filter(item => {\n      // Includi solo gli elementi che hanno subtecniche, uses o tecniche valide\n      return (item.subtechniques && item.subtechniques.length > 0) ||\n             (item.uses && item.uses.length > 0) ||\n             (item.techniques && item.techniques.length > 0);\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HubState.html":{"url":"interfaces/HubState.html","title":"interface - HubState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HubState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/deas/hub/store/hub.reducer.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the state of the Hub feature.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            filter\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         ExtendedMitreAttackInfo[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ExtendedMitreAttackInfo[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:         HackerType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HackerType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { HackerType } from '../../../../shared/constants/groupHackers.model';\nimport { ExtendedMitreAttackInfo } from '../models/hub.models';\nimport { getMitreDataSuccess, filterMitreDataSuccess } from './hub.actions';\n\n/**\n * The key for the Hub feature state within the NgRx store.\n * @type {string}\n */\nexport const HubListFeatureKey = 'hub';\n\n/**\n * Interface representing the state of the Hub feature.\n * @interface\n */\nexport interface HubState {\n  data: ExtendedMitreAttackInfo[] | null; // Mitre attack data\n  filter: HackerType; // Hacker type filter\n}\n\n/**\n * Initial state for the Hub feature.\n * @type {HubState}\n */\nconst initialState: HubState = {\n  data: null,\n  filter: HackerType.APT28 // Default hacker type filter\n};\n\n/**\n * Reducer function for the Hub feature.\n * @function\n * @param {HubState} state The current state of the Hub feature.\n * @param {*} action The action dispatched to the reducer.\n * @returns {HubState} The new state of the Hub feature after applying the action.\n */\nexport const hubReducer = createReducer(\n  initialState,\n  on(getMitreDataSuccess, (state, { mitreAttackData }) => ({ ...state, data: mitreAttackData })),\n  on(filterMitreDataSuccess, (state, { mitreAttackData, filter }) => ({ ...state, data: mitreAttackData, filter: filter })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KillChainPhase.html":{"url":"interfaces/KillChainPhase.html","title":"interface - KillChainPhase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  KillChainPhase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/mitre.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Kill Chain Phase related to Mitre Attack data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            kill_chain_name\n                                        \n                                \n                                \n                                        \n                                            phase_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        kill_chain_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kill_chain_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phase_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackData {\n  type: string;\n  id: string;\n  objects: MitreAttackInfo[];\n  spec_version: string;\n}\n\n/**\n * Interface for the Mitre Attack information.\n */\nexport interface MitreAttackInfo {\n  tactic_refs: string[];\n  object_marking_refs: string[];\n  id: string;\n  type: MitreType;\n  created: string;\n  created_by_ref: string;\n  external_references: ExternalReference[];\n  modified: string;\n  name: string;\n  description: string;\n  x_mitre_version: string;\n  x_mitre_attack_spec_version: string;\n  x_mitre_modified_by_ref: string;\n  x_mitre_domains: string[];\n  x_mitre_deprecated: boolean;\n  revoked: boolean;\n  x_mitre_platforms: string[];\n  x_mitre_aliases: string[];\n  labels: string[];\n  x_mitre_contributors: string[];\n  x_mitre_shortname: string;\n  kill_chain_phases: KillChainPhase[];\n  x_mitre_detection: string;\n  x_mitre_is_subtechnique: boolean;\n  x_mitre_data_sources: string[];\n  x_mitre_defense_bypassed: string[];\n  x_mitre_permissions_required: string[];\n  x_mitre_remote_support: boolean;\n  x_mitre_system_requirements: string[];\n  x_mitre_impact_type: string[];\n  x_mitre_effective_permissions: string[];\n  x_mitre_network_requirements: boolean;\n  relationship_type: RelationshipType;\n  source_ref: string;\n  target_ref: string;\n  x_mitre_data_source_ref: string;\n  aliases: string[];\n  first_seen: string;\n  last_seen: string;\n  x_mitre_first_seen_citation: string;\n  x_mitre_last_seen_citation: string;\n  x_mitre_collection_layers: string[];\n  identity_class: string;\n  definition: Definition;\n  definition_type: string;\n}\n\n/**\n * Interface for external references related to Mitre Attack data.\n */\nexport interface ExternalReference {\n  source_name: string;\n  description: string;\n  url: string;\n  external_id: string;\n}\n\n/**\n * Interface for the Kill Chain Phase related to Mitre Attack data.\n */\nexport interface KillChainPhase {\n  kill_chain_name: string;\n  phase_name: string;\n}\n\n/**\n * Interface for the Definition related to Mitre Attack data.\n */\nexport interface Definition {\n  statement: string;\n}\n\n/**\n * Type for Mitre Attack data type.\n */\nexport type MitreType =\n  | 'bundle'\n  | 'marking-definition'\n  | 'definition'\n  | 'x-mitre-matrix'\n  | 'x-mitre-tactic'\n  | 'course-of-action'\n  | 'tool'\n  | 'attack-pattern'\n  | 'relationship'\n  | 'malware';\n\n/**\n * Type for Relationship type in Mitre Attack data.\n */\nexport type RelationshipType = 'mitigates' | 'uses' | 'detects' | 'subtechnique-of';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libraries/components/loader/loader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loader.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'app-loader',\n  standalone: true,\n  imports: [],\n  templateUrl: './loader.component.html',\n  styleUrl: './loader.component.scss'\n})\n /**\n * Reprresents he Loader spinner component.\n */\nexport class LoaderComponent {\n\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MitreAttackComponent.html":{"url":"components/MitreAttackComponent.html","title":"component - MitreAttackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MitreAttackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/deas/mitre-attack/mitre-attack.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for displaying Mitre Attack information.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-mitre-attack\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UI_MITRE_ATTACK\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./mitre-attack.component.html\n            \n\n\n\n            \n                styleUrl\n                ./mitre-attack.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attackHacker\n                            \n                            \n                                    Public\n                                cards\n                            \n                            \n                                    Public\n                                chipConfig\n                            \n                            \n                                    Public\n                                clusters\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                filteDataSubscription\n                            \n                            \n                                    Private\n                                hubFacade\n                            \n                            \n                                    Public\n                                hubService\n                            \n                            \n                                    Public\n                                mitraDataSubscription\n                            \n                            \n                                    Public\n                                mitreAttackInfo$\n                            \n                            \n                                    Public\n                                mitreAttackService\n                            \n                            \n                                    Public\n                                mitreDataFiltered\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                    Public\n                                selectMitreCluster\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter(hackerType: HackerType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Filters the Mitre Data based on the hacker type.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                hackerType\n                                            \n                                                            HackerType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The type of hacker to filter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectMitreCluster\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectMitreCluster(cluster: ClusterConfig, mitreComponent: MitreAttackComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Selects a Mitre cluster and updates the active state of the clusters and cards.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                cluster\n                                            \n                                                            ClusterConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe cluster to select.\n\n\n                                            \n                                        \n                                        \n                                                mitreComponent\n                                            \n                                                            MitreAttackComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe MitreAttackComponent instance.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        attackHacker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : HackersMock.GENERIC\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:84\n                        \n                    \n\n            \n                \n                    Current hacker data being used for attacks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cards\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CardConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:96\n                        \n                    \n\n            \n                \n                    Configurations for cards.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chipConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    label: 'Identified as malicious actor',\n    isDark: true,\n    icon: 'virus',\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:108\n                        \n                    \n\n            \n                \n                    Mock configuration for a chip.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clusters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ClusterConfig[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:90\n                        \n                    \n\n            \n                \n                    Configurations for clusters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:71\n                        \n                    \n\n            \n                \n                    Subject for managing the destruction of observables.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        filteDataSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : this.hubFacade.mitreDataFilter$\n    .pipe(filter(Boolean), takeUntil(this.destroy$))\n    .subscribe((filter: HackerType) => {\n      this.attackHacker = HackersMock[filter];\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:134\n                        \n                    \n\n            \n                \n                    Subscription to the Mitre Data Filter.\nUpdates the attack hacker based on the received filter.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hubFacade\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HubFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:53\n                        \n                    \n\n            \n                \n                    Facade for interacting with the Hub module store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hubService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(HubService)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:59\n                        \n                    \n\n            \n                \n                    Hub service for Hub-specific operations.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitraDataSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : this.hubFacade.mitreData$\n    .pipe(filter(Boolean), takeUntil(this.destroy$))\n    .subscribe((data: ExtendedMitreAttackInfo[]) => {\n      this.mitreDataFiltered = data;\n      this.clusters = this.mitreDataFiltered.map(\n        (mitreAttackInfo: ExtendedMitreAttackInfo) =>\n          this.mitreAttackService.createMitreCluster(mitreAttackInfo, this)\n      );\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:119\n                        \n                    \n\n            \n                \n                    Subscription to the Mitre Data.\nUpdates the filtered Mitre data and clusters based on the received data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreAttackInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.hubFacade.mitreData$\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:77\n                        \n                    \n\n            \n                \n                    Observable that provides the extended Mitre Attack information or null.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreAttackService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MitreAttackService)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:65\n                        \n                    \n\n            \n                \n                    Service for Mitre Attack operations.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mitreDataFiltered\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ExtendedMitreAttackInfo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/mitre-attack.component.ts:102\n                        \n                    \n\n            \n                \n                    Filtered Mitre Attack data.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  HackersMock,\n  HackerType,\n} from './../../../shared/constants/groupHackers.model';\nimport { Component, inject } from '@angular/core';\nimport { ChipComponent } from '../../../libraries/components/chip/chip.component';\nimport { CardComponent } from '../../../libraries/components/card/card.component';\nimport { ChipsetComponent } from '../../../libraries/components/chip-set/chip-set.component';\nimport { ClusterComponent } from '../../../libraries/components/cluster/cluster.component';\nimport { ClusterConfig } from '../../../libraries/models/cluster.model';\nimport { Observable, Subject, Subscription, filter, takeUntil } from 'rxjs';\nimport { ExtendedMitreAttackInfo } from '../hub/models/hub.models';\nimport { HubService } from '../hub/services/hub.service';\nimport { HubFacade } from '../hub/store/hub.facade';\nimport { CommonModule } from '@angular/common';\nimport { LoaderComponent } from '../../../libraries/components/loader/loader.component';\nimport { CardConfig } from '../../../libraries/models/card.model';\nimport { MitreAttackService } from './services/mitre-attack.service';\n\n/**\n * Array containing components related to the UI kit Mitre Attack Component.\n * @type {Array}\n */\nconst UI_MITRE_ATTACK = [\n  ChipComponent,\n  CardComponent,\n  ChipsetComponent,\n  ClusterComponent,\n  LoaderComponent,\n];\n\n/**\n * Component for displaying Mitre Attack information.\n */\n@Component({\n  selector: 'app-mitre-attack',\n  standalone: true,\n  imports: [...UI_MITRE_ATTACK, CommonModule],\n  templateUrl: './mitre-attack.component.html',\n  styleUrl: './mitre-attack.component.scss',\n})\n/**\n * Represents the Mitre Attack Component.\n */\n/**\n * Represents the Mitre Attack Component.\n */\nexport class MitreAttackComponent {\n  /**\n   * Facade for interacting with the Hub module store.\n   * @private\n   */\n  private hubFacade = inject(HubFacade);\n\n  /**\n   * Hub service for Hub-specific operations.\n   * @public\n   */\n  public hubService = inject(HubService);\n\n  /**\n   * Service for Mitre Attack operations.\n   * @public\n   */\n  public mitreAttackService = inject(MitreAttackService);\n\n  /**\n   * Subject for managing the destruction of observables.\n   * @private\n   */\n  private destroy$ = new Subject();\n\n  /**\n   * Observable that provides the extended Mitre Attack information or null.\n   * @public\n   */\n  public mitreAttackInfo$: Observable =\n    this.hubFacade.mitreData$;\n\n  /**\n   * Current hacker data being used for attacks.\n   * @public\n   */\n  public attackHacker = HackersMock.GENERIC;\n\n  /**\n   * Configurations for clusters.\n   * @public\n   */\n  public clusters: ClusterConfig[] = [];\n\n  /**\n   * Configurations for cards.\n   * @public\n   */\n  public cards: CardConfig[] = [];\n\n  /**\n   * Filtered Mitre Attack data.\n   * @public\n   */\n  public mitreDataFiltered: ExtendedMitreAttackInfo[] = [];\n\n  /**\n   * Mock configuration for a chip.\n   * @public\n   */\n  public chipConfig = {\n    label: 'Identified as malicious actor',\n    isDark: true,\n    icon: 'virus',\n  };\n\n  /**\n   * Subscription to the Mitre Data.\n   * Updates the filtered Mitre data and clusters based on the received data.\n   * @public\n   */\n  public mitraDataSubscription: Subscription = this.hubFacade.mitreData$\n    .pipe(filter(Boolean), takeUntil(this.destroy$))\n    .subscribe((data: ExtendedMitreAttackInfo[]) => {\n      this.mitreDataFiltered = data;\n      this.clusters = this.mitreDataFiltered.map(\n        (mitreAttackInfo: ExtendedMitreAttackInfo) =>\n          this.mitreAttackService.createMitreCluster(mitreAttackInfo, this)\n      );\n    });\n\n  /**\n   * Subscription to the Mitre Data Filter.\n   * Updates the attack hacker based on the received filter.\n   * @public\n   */\n  public filteDataSubscription: Subscription = this.hubFacade.mitreDataFilter$\n    .pipe(filter(Boolean), takeUntil(this.destroy$))\n    .subscribe((filter: HackerType) => {\n      this.attackHacker = HackersMock[filter];\n    });\n\n  /**\n   * Filters the Mitre Data based on the hacker type.\n   * @param hackerType The type of hacker to filter.\n   * @public\n   */\n  filter(hackerType: HackerType): void {\n    this.hubFacade.filtreMitreData(this.mitreDataFiltered, hackerType);\n  }\n\n  /**\n   * Selects a Mitre cluster and updates the active state of the clusters and cards.\n   * @param cluster - The cluster to select.\n   * @param mitreComponent - The MitreAttackComponent instance.\n   */\n  public selectMitreCluster(\n    cluster: ClusterConfig,\n    mitreComponent: MitreAttackComponent\n  ): void {\n    this.clusters = this.clusters.map((_cluster) => {\n      if (_cluster.id === cluster.id) {\n        return { ..._cluster, active: !cluster.active, opaque: false };\n      } else {\n        const someActive = this.clusters.some((cluster) => cluster.active);\n        return {\n          ..._cluster,\n          active: false,\n          opaque: !someActive ? true : false,\n        };\n      }\n    });\n\n    if (cluster.techniques?.length)\n      this.cards = !cluster.active\n        ? cluster.techniques.map((technique: ExtendedMitreAttackInfo) =>\n            this.mitreAttackService.createMitreTechniques(\n              technique,\n              mitreComponent\n            )\n          )\n        : [];\n  }\n}\n\n    \n\n    \n        \n\n\n  @if(mitreAttackInfo$ | async; as MitreAttackInfo){\n\n    @if(attackHacker){\n      \n      \n\n        \n          \n            {{attackHacker.title}}\n          \n\n          \n            {{'Indirizzo IP:'}}  {{attackHacker.ipAdresss}} \n          \n\n        \n\n        \n          \n        \n\n      \n\n      \n\n      \n      \n        \n\n        \n          {{'Descrizione:'}}\n          \n            \n          \n        \n      \n    }\n\n    \n    \n\n      \n        \n          {{'Fasi di Attaco'}}\n        \n        {{'Seleziona una fase per visualizzare le tecniche:'}}\n\n        @if(clusters.length){\n          \n            @for( cluster of clusters; track cluster){\n              \n            }\n          \n        }\n      \n\n      \n        \n          {{'Tecniche di Attacco'}}\n        \n        @if(cards.length){\n          \n            @for (card of cards; track card) {\n              \n            }\n          \n        }\n        @else {\n          \n            \n              {{'Nessuna fase di attacco disponibile'}}\n            \n          \n        }\n\n      \n\n\n    \n  }\n\n\n  @else {\n    \n      \n    \n  }\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  @if(mitreAttackInfo$ | async; as MitreAttackInfo){    @if(attackHacker){                                          {{attackHacker.title}}                                {{\\'Indirizzo IP:\\'}}  {{attackHacker.ipAdresss}}                                                                                               {{\\'Descrizione:\\'}}                                                  }                                {{\\'Fasi di Attaco\\'}}                {{\\'Seleziona una fase per visualizzare le tecniche:\\'}}        @if(clusters.length){                      @for( cluster of clusters; track cluster){                          }                  }                              {{\\'Tecniche di Attacco\\'}}                @if(cards.length){                      @for (card of cards; track card) {                          }                  }        @else {                                    {{\\'Nessuna fase di attacco disponibile\\'}}                              }            }  @else {                }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'MitreAttackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreAttackConfig.html":{"url":"interfaces/MitreAttackConfig.html","title":"interface - MitreAttackConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreAttackConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/mitre-attack.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            footer\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            info\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        footer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        footer:         MitreAttackFooter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MitreAttackFooter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         MitreAttackHeader\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MitreAttackHeader\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:         MitreAttackInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MitreAttackInfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackConfig {\n  header: MitreAttackHeader;\n  info: MitreAttackInfo;\n  footer: MitreAttackFooter[];\n}\n\nexport interface MitreAttackHeader {\n  title: string;\n  subtitle: string;\n  chip: any;\n}\n\n\nexport interface MitreAttackInfo {\n  cells: any;\n\n  label: string;\n  class?: string;\n  value: string;\n}\n\nexport interface MitreCells {\n  header:string;\n  content: MitreCellsContent[]\n}\n\nexport interface MitreCellsContent {\n  value:string;\n  chip?:any;\n}\n\nexport interface MitreAttackFooter {\n  phase:any;\n  tecnique:any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreAttackData.html":{"url":"interfaces/MitreAttackData.html","title":"interface - MitreAttackData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreAttackData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/mitre.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the Mitre Attack data.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            objects\n                                        \n                                \n                                \n                                        \n                                            spec_version\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        objects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        objects:     MitreAttackInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MitreAttackInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spec_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spec_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackData {\n  type: string;\n  id: string;\n  objects: MitreAttackInfo[];\n  spec_version: string;\n}\n\n/**\n * Interface for the Mitre Attack information.\n */\nexport interface MitreAttackInfo {\n  tactic_refs: string[];\n  object_marking_refs: string[];\n  id: string;\n  type: MitreType;\n  created: string;\n  created_by_ref: string;\n  external_references: ExternalReference[];\n  modified: string;\n  name: string;\n  description: string;\n  x_mitre_version: string;\n  x_mitre_attack_spec_version: string;\n  x_mitre_modified_by_ref: string;\n  x_mitre_domains: string[];\n  x_mitre_deprecated: boolean;\n  revoked: boolean;\n  x_mitre_platforms: string[];\n  x_mitre_aliases: string[];\n  labels: string[];\n  x_mitre_contributors: string[];\n  x_mitre_shortname: string;\n  kill_chain_phases: KillChainPhase[];\n  x_mitre_detection: string;\n  x_mitre_is_subtechnique: boolean;\n  x_mitre_data_sources: string[];\n  x_mitre_defense_bypassed: string[];\n  x_mitre_permissions_required: string[];\n  x_mitre_remote_support: boolean;\n  x_mitre_system_requirements: string[];\n  x_mitre_impact_type: string[];\n  x_mitre_effective_permissions: string[];\n  x_mitre_network_requirements: boolean;\n  relationship_type: RelationshipType;\n  source_ref: string;\n  target_ref: string;\n  x_mitre_data_source_ref: string;\n  aliases: string[];\n  first_seen: string;\n  last_seen: string;\n  x_mitre_first_seen_citation: string;\n  x_mitre_last_seen_citation: string;\n  x_mitre_collection_layers: string[];\n  identity_class: string;\n  definition: Definition;\n  definition_type: string;\n}\n\n/**\n * Interface for external references related to Mitre Attack data.\n */\nexport interface ExternalReference {\n  source_name: string;\n  description: string;\n  url: string;\n  external_id: string;\n}\n\n/**\n * Interface for the Kill Chain Phase related to Mitre Attack data.\n */\nexport interface KillChainPhase {\n  kill_chain_name: string;\n  phase_name: string;\n}\n\n/**\n * Interface for the Definition related to Mitre Attack data.\n */\nexport interface Definition {\n  statement: string;\n}\n\n/**\n * Type for Mitre Attack data type.\n */\nexport type MitreType =\n  | 'bundle'\n  | 'marking-definition'\n  | 'definition'\n  | 'x-mitre-matrix'\n  | 'x-mitre-tactic'\n  | 'course-of-action'\n  | 'tool'\n  | 'attack-pattern'\n  | 'relationship'\n  | 'malware';\n\n/**\n * Type for Relationship type in Mitre Attack data.\n */\nexport type RelationshipType = 'mitigates' | 'uses' | 'detects' | 'subtechnique-of';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreAttackFooter.html":{"url":"interfaces/MitreAttackFooter.html","title":"interface - MitreAttackFooter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreAttackFooter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/mitre-attack.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            phase\n                                        \n                                \n                                \n                                        \n                                            tecnique\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        phase\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phase:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tecnique\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tecnique:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackConfig {\n  header: MitreAttackHeader;\n  info: MitreAttackInfo;\n  footer: MitreAttackFooter[];\n}\n\nexport interface MitreAttackHeader {\n  title: string;\n  subtitle: string;\n  chip: any;\n}\n\n\nexport interface MitreAttackInfo {\n  cells: any;\n\n  label: string;\n  class?: string;\n  value: string;\n}\n\nexport interface MitreCells {\n  header:string;\n  content: MitreCellsContent[]\n}\n\nexport interface MitreCellsContent {\n  value:string;\n  chip?:any;\n}\n\nexport interface MitreAttackFooter {\n  phase:any;\n  tecnique:any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreAttackHeader.html":{"url":"interfaces/MitreAttackHeader.html","title":"interface - MitreAttackHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreAttackHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/mitre-attack.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chip\n                                        \n                                \n                                \n                                        \n                                            subtitle\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chip:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackConfig {\n  header: MitreAttackHeader;\n  info: MitreAttackInfo;\n  footer: MitreAttackFooter[];\n}\n\nexport interface MitreAttackHeader {\n  title: string;\n  subtitle: string;\n  chip: any;\n}\n\n\nexport interface MitreAttackInfo {\n  cells: any;\n\n  label: string;\n  class?: string;\n  value: string;\n}\n\nexport interface MitreCells {\n  header:string;\n  content: MitreCellsContent[]\n}\n\nexport interface MitreCellsContent {\n  value:string;\n  chip?:any;\n}\n\nexport interface MitreAttackFooter {\n  phase:any;\n  tecnique:any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreAttackInfo-1.html":{"url":"interfaces/MitreAttackInfo-1.html","title":"interface - MitreAttackInfo-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreAttackInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/mitre-attack.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cells\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cells\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cells:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackConfig {\n  header: MitreAttackHeader;\n  info: MitreAttackInfo;\n  footer: MitreAttackFooter[];\n}\n\nexport interface MitreAttackHeader {\n  title: string;\n  subtitle: string;\n  chip: any;\n}\n\n\nexport interface MitreAttackInfo {\n  cells: any;\n\n  label: string;\n  class?: string;\n  value: string;\n}\n\nexport interface MitreCells {\n  header:string;\n  content: MitreCellsContent[]\n}\n\nexport interface MitreCellsContent {\n  value:string;\n  chip?:any;\n}\n\nexport interface MitreAttackFooter {\n  phase:any;\n  tecnique:any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MitreAttackService.html":{"url":"injectables/MitreAttackService.html","title":"injectable - MitreAttackService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MitreAttackService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/deas/mitre-attack/services/mitre-attack.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for handling Mitre Attack related operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modalService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createMitreCluster\n                            \n                            \n                                    Public\n                                createMitreTechniques\n                            \n                            \n                                    Public\n                                openMitreModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createMitreCluster\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMitreCluster(mitreAttackInfo: ExtendedMitreAttackInfo, mitreComponent: MitreAttackComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/mitre-attack/services/mitre-attack.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Creates a cluster configuration for a Mitre Attack.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mitreAttackInfo\n                                            \n                                                            ExtendedMitreAttackInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre Attack information.\n\n                                            \n                                        \n                                        \n                                                mitreComponent\n                                            \n                                                            MitreAttackComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre Attack component.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ClusterConfig\n\n                        \n                            \n                                The cluster configuration.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createMitreTechniques\n                        \n                    \n                \n            \n            \n                \n                        \n                    createMitreTechniques(mitreAttackInfo: ExtendedMitreAttackInfo, mitreComponent: MitreAttackComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/mitre-attack/services/mitre-attack.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Creates a card configuration for Mitre Attack techniques.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mitreAttackInfo\n                                            \n                                                            ExtendedMitreAttackInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre Attack information.\n\n                                            \n                                        \n                                        \n                                                mitreComponent\n                                            \n                                                            MitreAttackComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre Attack component.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CardConfig\n\n                        \n                            \n                                The card configuration.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openMitreModal\n                        \n                    \n                \n            \n            \n                \n                        \n                    openMitreModal(actionType: CardAction, mitreAttackInfo: ExtendedMitreAttackInfo, mitreComponent: MitreAttackComponent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/deas/mitre-attack/services/mitre-attack.service.ts:79\n                        \n                    \n\n\n            \n                \n                        Opens a modal for Mitre Attack information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                actionType\n                                            \n                                                            CardAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The type of action (INFO or SETTINGS).\n\n                                            \n                                        \n                                        \n                                                mitreAttackInfo\n                                            \n                                                            ExtendedMitreAttackInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre Attack information.\n\n                                            \n                                        \n                                        \n                                                mitreComponent\n                                            \n                                                            MitreAttackComponent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The Mitre Attack component.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(NgbModal)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/deas/mitre-attack/services/mitre-attack.service.ts:24\n                        \n                    \n\n            \n                \n                    Injected service for managing modals.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { inject, Injectable } from \"@angular/core\";\nimport { CardAction, CardConfig, CardIcon } from \"../../../../libraries/models/card.model\";\nimport { ModalComponent } from \"../../../../libraries/components/modal/modal.component\";\nimport { ModalConfig } from \"../../../../libraries/models/modal.model\";\nimport { ExtendedMitreAttackInfo } from \"../../hub/models/hub.models\";\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ClusterConfig } from \"../../../../libraries/models/cluster.model\";\nimport { MitreAttackComponent } from \"../mitre-attack.component\";\n\n/**\n * Service for handling Mitre Attack related operations.\n * @@Injectable\n * @providedIn: 'root'\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MitreAttackService {\n\n  /**\n   * Injected service for managing modals.\n   * @private\n   */\n  private modalService = inject(NgbModal);\n\n  /**\n   * Creates a cluster configuration for a Mitre Attack.\n   * @param {ExtendedMitreAttackInfo} mitreAttackInfo The Mitre Attack information.\n   * @param {MitreAttackComponent} mitreComponent The Mitre Attack component.\n   * @returns {ClusterConfig} The cluster configuration.\n   */\n  public createMitreCluster(mitreAttackInfo: ExtendedMitreAttackInfo, mitreComponent: MitreAttackComponent): ClusterConfig {\n    return {\n      name: mitreAttackInfo.name,\n      id: mitreAttackInfo.id,\n      active: false,\n      select: (mitreInfo: ClusterConfig) => mitreComponent.selectMitreCluster(mitreInfo, mitreComponent),\n      techniques: mitreAttackInfo.techniques,\n      uses: mitreAttackInfo.uses,\n      externalID: mitreAttackInfo.external_references[0].external_id,\n      opaque: false,\n      size: 7\n    };\n  }\n\n  /**\n   * Creates a card configuration for Mitre Attack techniques.\n   * @param {ExtendedMitreAttackInfo} mitreAttackInfo The Mitre Attack information.\n   * @param {MitreAttackComponent} mitreComponent The Mitre Attack component.\n   * @returns {CardConfig} The card configuration.\n   */\n  public createMitreTechniques(mitreAttackInfo: ExtendedMitreAttackInfo, mitreComponent: MitreAttackComponent): CardConfig {\n    return {\n      header: {\n        label: mitreAttackInfo.name,\n        value: mitreAttackInfo.external_references[0].external_id,\n      },\n      footer: [\n        {\n          icon: CardIcon.info,\n          actionType: CardAction.INFO,\n          action: (actionType: CardAction) => this.openMitreModal(actionType, mitreAttackInfo, mitreComponent)\n        },\n        {\n          icon: CardIcon.settings,\n          actionType: CardAction.SETTINGS,\n          action: (actionType: CardAction) => this.openMitreModal(actionType, mitreAttackInfo, mitreComponent)\n        }\n      ]\n    };\n  }\n\n  /**\n   * Opens a modal for Mitre Attack information.\n   * @param {CardAction} actionType The type of action (INFO or SETTINGS).\n   * @param {ExtendedMitreAttackInfo} mitreAttackInfo The Mitre Attack information.\n   * @param {MitreAttackComponent} mitreComponent The Mitre Attack component.\n   */\n  public openMitreModal(actionType: CardAction, mitreAttackInfo: ExtendedMitreAttackInfo, mitreComponent: MitreAttackComponent): void {\n    let modalConfig: ModalConfig;\n    switch (actionType) {\n      case CardAction.INFO:\n        modalConfig = {\n          title: 'Informazioni',\n          content: [\n            {\n              label: 'Name',\n              value: mitreAttackInfo.name,\n            },\n            {\n              label: 'ID',\n              value: mitreAttackInfo.id,\n            },\n            {\n              label: 'External ID',\n              value: mitreAttackInfo.external_references[0].external_id,\n            },\n            {\n              label: 'Descrizione',\n              value: mitreAttackInfo.description,\n            },\n            {\n              label: 'Uses',\n              value: mitreAttackInfo?.uses ? mitreAttackInfo?.uses[0]?.description : 'N/A',\n            }\n          ],\n          cards: mitreAttackInfo?.subtechniques ? mitreAttackInfo.subtechniques.map(subtechnique => this.createMitreTechniques(subtechnique, mitreComponent)) : []\n        };\n        const modalRef = this.modalService.open(ModalComponent, { size: 'lg', centered: true });\n        modalRef.componentInstance.modalConfig = modalConfig;\n        break;\n      default:\n        null;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreCells.html":{"url":"interfaces/MitreCells.html","title":"interface - MitreCells","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreCells\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/mitre-attack.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     MitreCellsContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MitreCellsContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackConfig {\n  header: MitreAttackHeader;\n  info: MitreAttackInfo;\n  footer: MitreAttackFooter[];\n}\n\nexport interface MitreAttackHeader {\n  title: string;\n  subtitle: string;\n  chip: any;\n}\n\n\nexport interface MitreAttackInfo {\n  cells: any;\n\n  label: string;\n  class?: string;\n  value: string;\n}\n\nexport interface MitreCells {\n  header:string;\n  content: MitreCellsContent[]\n}\n\nexport interface MitreCellsContent {\n  value:string;\n  chip?:any;\n}\n\nexport interface MitreAttackFooter {\n  phase:any;\n  tecnique:any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MitreCellsContent.html":{"url":"interfaces/MitreCellsContent.html","title":"interface - MitreCellsContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MitreCellsContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/mitre-attack.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            chip\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chip:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MitreAttackConfig {\n  header: MitreAttackHeader;\n  info: MitreAttackInfo;\n  footer: MitreAttackFooter[];\n}\n\nexport interface MitreAttackHeader {\n  title: string;\n  subtitle: string;\n  chip: any;\n}\n\n\nexport interface MitreAttackInfo {\n  cells: any;\n\n  label: string;\n  class?: string;\n  value: string;\n}\n\nexport interface MitreCells {\n  header:string;\n  content: MitreCellsContent[]\n}\n\nexport interface MitreCellsContent {\n  value:string;\n  chip?:any;\n}\n\nexport interface MitreAttackFooter {\n  phase:any;\n  tecnique:any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/libraries/components/modal/modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component representing a modal.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                UI_MODAL\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./modal.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalConfig\n                    \n                \n                \n                    \n                        Type :         ModalConfig\n\n                    \n                \n                \n                    \n                        Default value : {} as ModalConfig\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/components/modal/modal.component.ts:33\n                            \n                        \n                \n                    \n                        Configuration for the modal component.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input, input } from '@angular/core';\nimport { ModalConfig } from '../../models/modal.model';\nimport { CommonModule } from '@angular/common';\nimport { CardComponent } from '../card/card.component';\n\n\n/**\n * Array containing UI modal components.\n * @type {typeof CardComponent[]}\n */\nconst UI_MODAL: typeof CardComponent[] = [\n  CardComponent\n];\n\n/**\n * Component representing a modal.\n */\n@Component({\n  selector: 'app-modal',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ...UI_MODAL\n  ],\n  templateUrl: './modal.component.html',\n  styleUrl: './modal.component.scss'\n})\nexport class ModalComponent {\n  /**\n   * Configuration for the modal component.\n   * @type {ModalConfig}\n   */\n  @Input() modalConfig:ModalConfig = {} as ModalConfig;\n\n}\n\n    \n\n    \n        \n\n\n  \n     {{modalConfig.title}}\n\n    \n\n    @if(modalConfig.content.length){\n      \n        @for(content of modalConfig.content; track content){\n          @if(content.label && content.value){\n            \n              {{content.label}}\n              {{content.value}}\n            \n          }\n        }\n\n      \n\n      @if(modalConfig.cards.length){\n        {{'Sotto tecniche:'}}\n          \n            @for(card of modalConfig.cards; track card){\n              \n            }\n          \n      }@else {\n        \n          {{'Non ci sono sotto tecniche'}}\n        \n      }\n    }\n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{modalConfig.title}}        @if(modalConfig.content.length){              @for(content of modalConfig.content; track content){          @if(content.label && content.value){                          {{content.label}}              {{content.value}}                      }        }            @if(modalConfig.cards.length){        {{\\'Sotto tecniche:\\'}}                      @for(card of modalConfig.cards; track card){                          }                }@else {                  {{\\'Non ci sono sotto tecniche\\'}}              }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalConfig.html":{"url":"interfaces/ModalConfig.html","title":"interface - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/modal.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cards\n                                        \n                                \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cards\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cards:         CardConfig[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CardConfig[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The card configurations for the modal.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         ModalContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ModalContent[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The content sections of the modal.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The title of the modal.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CardConfig } from \"./card.model\";\n\nexport interface ModalConfig {\n  /**\n   * The title of the modal.\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * The content sections of the modal.\n   * @type {ModalContent[]}\n   */\n  content: ModalContent[];\n\n  /**\n   * The card configurations for the modal.\n   * @type {CardConfig[]}\n   */\n  cards: CardConfig[];\n}\n\n/**\n * Content configuration for a modal component.\n */\nexport interface ModalContent {\n  /**\n   * The label for the content section.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * The value for the content section.\n   * @type {string}\n   */\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalContent.html":{"url":"interfaces/ModalContent.html","title":"interface - ModalContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/models/modal.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Content configuration for a modal component.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The label for the content section.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The value for the content section.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CardConfig } from \"./card.model\";\n\nexport interface ModalConfig {\n  /**\n   * The title of the modal.\n   * @type {string}\n   */\n  title: string;\n\n  /**\n   * The content sections of the modal.\n   * @type {ModalContent[]}\n   */\n  content: ModalContent[];\n\n  /**\n   * The card configurations for the modal.\n   * @type {CardConfig[]}\n   */\n  cards: CardConfig[];\n}\n\n/**\n * Content configuration for a modal component.\n */\nexport interface ModalContent {\n  /**\n   * The label for the content section.\n   * @type {string}\n   */\n  label: string;\n\n  /**\n   * The value for the content section.\n   * @type {string}\n   */\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TooltipDirective.html":{"url":"directives/TooltipDirective.html","title":"directive - TooltipDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  TooltipDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/libraries/directives/tooltip.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive for displaying a tooltip on an element.\n\n            \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [tooltip]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                showTimeout\n                            \n                            \n                                    Private\n                                tooltipElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTooltip\n                            \n                            \n                                    Private\n                                hideTooltip\n                            \n                            \n                                    \n                                onMouseEnter\n                            \n                            \n                                    \n                                onMouseLeave\n                            \n                            \n                                    \n                                onMouseMove\n                            \n                            \n                                    Private\n                                showTooltip\n                            \n                            \n                                    Private\n                                textOverlap\n                            \n                            \n                                    Private\n                                updateTooltipPosition\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tooltipDelay\n                            \n                            \n                                tooltipShow\n                            \n                            \n                                tooltipText\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                mouseenter\n                            \n                            \n                                mouseleave\n                            \n                            \n                                mousemove\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/libraries/directives/tooltip.directive.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        tooltipDelay\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/directives/tooltip.directive.ts:24\n                            \n                        \n                \n                    \n                        The delay in milliseconds before showing the tooltip.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipShow\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/directives/tooltip.directive.ts:19\n                            \n                        \n                \n                    \n                        Determines whether the tooltip can overlap with other elements.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tooltipText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/libraries/directives/tooltip.directive.ts:14\n                            \n                        \n                \n                    \n                        The text to display in the tooltip.\n\n                    \n                \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            mouseenter\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/libraries/directives/tooltip.directive.ts:37\n                \n            \n\n\n            \n                \n                    Event listener for mouseenter event.\nShows the tooltip if tooltipOverlap is true.\nUpdates the tooltip position based on the mouse coordinates.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mouse event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mouseleave\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/libraries/directives/tooltip.directive.ts:51\n                \n            \n\n\n            \n                \n                    Event listener for mouseleave event.\nClears the timeout for showing the tooltip.\nHides the tooltip.\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mousemove\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/libraries/directives/tooltip.directive.ts:61\n                \n            \n\n\n            \n                \n                    Event listener for mousemove event.\nUpdates the tooltip position based on the mouse coordinates.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The mouse event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createTooltip\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTooltip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:87\n                        \n                    \n\n\n            \n                \n                        Creates the tooltip element and appends it to the body.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        hideTooltip\n                        \n                    \n                \n            \n            \n                \n                        \n                    hideTooltip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:77\n                        \n                    \n\n\n            \n                \n                        Hides the tooltip.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseEnter(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseenter', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:37\n                        \n                    \n\n\n            \n                \n                        Event listener for mouseenter event.\nShows the tooltip if tooltipOverlap is true.\nUpdates the tooltip position based on the mouse coordinates.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseLeave\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mouseleave')\n                \n            \n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:51\n                        \n                    \n\n\n            \n                \n                        Event listener for mouseleave event.\nClears the timeout for showing the tooltip.\nHides the tooltip.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onMouseMove\n                        \n                    \n                \n            \n            \n                \n                        \n                    onMouseMove(event: MouseEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('mousemove', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:61\n                        \n                    \n\n\n            \n                \n                        Event listener for mousemove event.\nUpdates the tooltip position based on the mouse coordinates.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The mouse event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showTooltip\n                        \n                    \n                \n            \n            \n                \n                        \n                    showTooltip()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:68\n                        \n                    \n\n\n            \n                \n                        Shows the tooltip if it's not already displayed.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        textOverlap\n                        \n                    \n                \n            \n            \n                \n                        \n                    textOverlap(htmlElement: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:134\n                        \n                    \n\n\n            \n                \n                        Checks if the text in the element overlaps.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                htmlElement\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HTML element to check for text overlap.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                A boolean indicating whether text overlaps in the element.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateTooltipPosition\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTooltipPosition(x: number, y: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/libraries/directives/tooltip.directive.ts:102\n                        \n                    \n\n\n            \n                \n                        Updates the position of the tooltip based on the mouse coordinates.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                x\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The x-coordinate of the mouse.\n\n                                            \n                                        \n                                        \n                                                y\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The y-coordinate of the mouse.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showTimeout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/libraries/directives/tooltip.directive.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tooltipElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/libraries/directives/tooltip.directive.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, HostListener, Input, Renderer2 } from '@angular/core';\n\n/**\n * Directive for displaying a tooltip on an element.\n */\n@Directive({\n  selector: '[tooltip]',\n  standalone: true,\n})\nexport class TooltipDirective {\n  /**\n   * The text to display in the tooltip.\n   */\n  @Input() tooltipText: string = '';\n\n  /**\n   * Determines whether the tooltip can overlap with other elements.\n   */\n  @Input() tooltipShow: boolean = false;\n\n  /**\n   * The delay in milliseconds before showing the tooltip.\n   */\n  @Input() tooltipDelay: number = 0;\n\n  private tooltipElement: HTMLElement | null = null;\n  private showTimeout: any;\n\n  constructor(private renderer: Renderer2) {}\n\n  /**\n   * Event listener for mouseenter event.\n   * Shows the tooltip if tooltipOverlap is true.\n   * Updates the tooltip position based on the mouse coordinates.\n   * @param event The mouse event.\n   */\n  @HostListener('mouseenter', ['$event']) onMouseEnter(event: MouseEvent) {\n    if (this.textOverlap(event.target as HTMLElement) || this.tooltipShow) {\n      this.showTimeout = setTimeout(() => {\n        this.showTooltip();\n        this.updateTooltipPosition(event.clientX, event.clientY);\n      }, this.tooltipDelay);\n    }\n  }\n\n  /**\n   * Event listener for mouseleave event.\n   * Clears the timeout for showing the tooltip.\n   * Hides the tooltip.\n   */\n  @HostListener('mouseleave') onMouseLeave() {\n    clearTimeout(this.showTimeout);\n    this.hideTooltip();\n  }\n\n  /**\n   * Event listener for mousemove event.\n   * Updates the tooltip position based on the mouse coordinates.\n   * @param event The mouse event.\n   */\n  @HostListener('mousemove', ['$event']) onMouseMove(event: MouseEvent) {\n    this.updateTooltipPosition(event.clientX, event.clientY);\n  }\n\n  /**\n   * Shows the tooltip if it's not already displayed.\n   */\n  private showTooltip() {\n    if (!this.tooltipElement) {\n      this.createTooltip();\n    }\n  }\n\n  /**\n   * Hides the tooltip.\n   */\n  private hideTooltip() {\n    if (this.tooltipElement) {\n      this.renderer.removeChild(document.body, this.tooltipElement);\n      this.tooltipElement = null;\n    }\n  }\n\n  /**\n   * Creates the tooltip element and appends it to the body.\n   */\n  private createTooltip() {\n    this.tooltipElement = this.renderer.createElement('div');\n    this.renderer.addClass(this.tooltipElement, 'custom-tooltip');\n    if (this.tooltipElement) {\n      this.tooltipElement.innerHTML = this.tooltipText;\n      console.log(this.tooltipText);\n    }\n    this.renderer.appendChild(document.body, this.tooltipElement);\n  }\n\n  /**\n   * Updates the position of the tooltip based on the mouse coordinates.\n   * @param x The x-coordinate of the mouse.\n   * @param y The y-coordinate of the mouse.\n   */\n  private updateTooltipPosition(x: number, y: number) {\n    if (this.tooltipElement) {\n      const tooltipWidth = this.tooltipElement.offsetWidth;\n      const tooltipHeight = this.tooltipElement.offsetHeight;\n\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n\n      const scrollX = window.scrollX || document.documentElement.scrollLeft;\n      const scrollY = window.scrollY || document.documentElement.scrollTop;\n\n      let top = y + scrollY - tooltipHeight - 10;\n      let left = x + scrollX + 10;\n\n      if (top  windowWidth) {\n        left = x + scrollX - tooltipWidth - 10;\n      }\n\n      this.renderer.setStyle(this.tooltipElement, 'top', `${top}px`);\n      this.renderer.setStyle(this.tooltipElement, 'left', `${left}px`);\n    }\n  }\n\n  /**\n   * Checks if the text in the element overlaps.\n   * @param htmlElement The HTML element to check for text overlap.\n   * @returns A boolean indicating whether text overlaps in the element.\n   */\n  private textOverlap(htmlElement: HTMLElement): boolean {\n    if (htmlElement)\n      return htmlElement.scrollWidth > htmlElement.offsetWidth;\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserEffects.html":{"url":"injectables/UserEffects.html","title":"injectable - UserEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modules/user/store/user.effects.ts\n        \n\n\n            \n                Description\n            \n            \n                Effects for managing user-related actions.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action$: Actions, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/modules/user/store/user.effects.ts:13\n                            \n                        \n\n                \n                    \n                            Initializes the UserEffects instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        action$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Observable stream of actions dispatched in the application.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router instance for navigation.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The user service for managing user state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.action$.pipe(\n      ofType(login),\n      switchMap(({ user }) =>\n        this.userService.login(user).pipe(\n          map((user: UserModel) => {\n            // Dispatch loginSuccess action with the logged-in user\n            return loginSuccess({ user });\n          })\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/store/user.effects.ts:30\n                        \n                    \n\n            \n                \n                    Effect triggered when a login action is dispatched.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, ofType, createEffect } from '@ngrx/effects';\nimport { Router } from '@angular/router';\nimport { switchMap, map } from 'rxjs/operators';\nimport { UserModel } from '../models/user.model';\nimport { UserService } from '../service/user.service';\nimport { login, loginSuccess } from './user.actions';\n\n/**\n * Effects for managing user-related actions.\n */\n@Injectable()\nexport class UserEffects {\n  /**\n   * Initializes the UserEffects instance.\n   * @param {Actions} action$ Observable stream of actions dispatched in the application.\n   * @param {Router} router The router instance for navigation.\n   * @param {UserService} userService The user service for managing user state.\n   */\n  constructor(\n    private action$: Actions,\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  /**\n   * Effect triggered when a login action is dispatched.\n   * @type {Observable}\n   */\n  public login$ = createEffect(() =>\n    this.action$.pipe(\n      ofType(login),\n      switchMap(({ user }) =>\n        this.userService.login(user).pipe(\n          map((user: UserModel) => {\n            // Dispatch loginSuccess action with the logged-in user\n            return loginSuccess({ user });\n          })\n        )\n      )\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserFacade.html":{"url":"injectables/UserFacade.html","title":"injectable - UserFacade","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserFacade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modules/user/store/user.facade.ts\n        \n\n\n            \n                Description\n            \n            \n                Facade service for managing user-related state and actions.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/modules/user/store/user.facade.ts:18\n                            \n                        \n\n                \n                    \n                            Initializes the UserFacade instance.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The NgRx store for managing application state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: UserModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/modules/user/store/user.facade.ts:31\n                        \n                    \n\n\n            \n                \n                        Dispatches a login action to authenticate the user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user object containing information from the authentication provider.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this.store.select(user$).pipe(filter(Boolean))\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/store/user.facade.ts:18\n                        \n                    \n\n            \n                \n                    Observable stream of the current user information.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { UserModel } from '../models/user.model';\nimport { login } from './user.actions';\nimport { user$ } from './user.selectors';\n\n/**\n * Facade service for managing user-related state and actions.\n */\n@Injectable({ providedIn: 'root' })\nexport class UserFacade {\n  /**\n   * Observable stream of the current user information.\n   * @type {Observable}\n   */\n  public user$: Observable = this.store.select(user$).pipe(filter(Boolean));\n\n  /**\n   * Initializes the UserFacade instance.\n   * @param {Store} store The NgRx store for managing application state.\n   */\n  constructor(private store: Store) {}\n\n  /**\n   * Dispatches a login action to authenticate the user.\n   * @param {UserModel} user The user object containing information from the authentication provider.\n   * @returns {void}\n   */\n  public login(user: UserModel): void {\n    this.store.dispatch(login({ user }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserLoginSystemComponent.html":{"url":"components/UserLoginSystemComponent.html","title":"component - UserLoginSystemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserLoginSystemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/core/modules/user/user-login-system/user-login-system.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                UserFacade\n                \n            \n\n\n            \n                selector\n                app-user-login-system\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UI_USER_LOGIN\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./user-login-system.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-login-system.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                    Public\n                                document\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Public\n                                user$\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:63\n                            \n                        \n\n                \n                    \n                            Initializes the AuthenticationManager instance.\nAutomatically called when an instance of AuthenticationManager is created.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                        \n                    initialize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Initializes the authentication process.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:57\n                        \n                    \n\n            \n                \n                    The authentication service for handling user authentication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:39\n                        \n                    \n\n            \n                \n                    Subject used for destroying subscriptions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                \n                    \n                        Default value : inject(DOCUMENT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:51\n                        \n                    \n\n            \n                \n                    The document object representing the DOM document.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                \n                    \n                        Default value : inject(Router)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:45\n                        \n                    \n\n            \n                \n                    The router instance for navigation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : this.authService.user$.pipe(\n    takeUntil(this.destroy$)\n  ).subscribe((user) => {\n    if (user) {\n      try {\n        this.authService.getAccessTokenSilently().pipe(\n          takeUntil(this.destroy$)\n        ).subscribe(\n          token => {\n            // Store access token in local storage\n            localStorage.setItem('token', token);\n            // Set user information\n            this.userService.setUserInfo(user);\n            // Redirect to the DEAS module\n            this.router.navigateByUrl(`${APP.DEAS}`);\n          },\n        );\n      } catch (error) {\n        // Remove token from local storage\n        localStorage.removeItem('token');\n        // Handle authentication error\n        this.userService.setUserError(error as Auth0Error);\n      }\n    }\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:77\n                        \n                    \n\n            \n                \n                    Subscribes to user authentication changes and performs necessary actions.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                \n                    \n                        Default value : inject(UserService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/user-login-system/user-login-system.component.ts:63\n                        \n                    \n\n            \n                \n                    The user service for managing user state.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { Subject,Subscription,takeUntil } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { UserFacade } from '../store/user.facade';\nimport { CommonModule } from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport { Auth0Error } from '../models/user.model';\nimport { UserService } from '../service/user.service';\nimport { APP } from '../../../../shared/routes/route.model';\nimport { LoaderComponent } from '../../../../libraries/components/loader/loader.component';\n\n/**\n * Array of components used in the Deas component.\n * @type {Array}\n */\nconst UI_USER_LOGIN = [\n  LoaderComponent\n];\n\n@Component({\n  selector: 'app-user-login-system',\n  standalone: true,\n  imports: [\n    ...UI_USER_LOGIN,\n    CommonModule\n  ],\n  templateUrl: './user-login-system.component.html',\n  styleUrls: ['./user-login-system.component.scss'],\n  providers: [\n    UserFacade\n  ]\n})\nexport class UserLoginSystemComponent {\n  /**\n   * Subject used for destroying subscriptions.\n   * @type {Subject}\n   */\n  private destroy$: Subject = new Subject();\n\n  /**\n   * The router instance for navigation.\n   * @type {Router}\n   */\n  private router: Router = inject(Router);\n\n  /**\n   * The document object representing the DOM document.\n   * @type {Document}\n   */\n  public document: Document = inject(DOCUMENT);\n\n  /**\n   * The authentication service for handling user authentication.\n   * @type {AuthService}\n   */\n  public authService: AuthService = inject(AuthService);\n\n  /**\n   * The user service for managing user state.\n   * @type {UserService}\n   */\n  private userService: UserService = inject(UserService);\n\n  /**\n   * Initializes the AuthenticationManager instance.\n   * Automatically called when an instance of AuthenticationManager is created.\n   */\n  constructor() {\n    this.initialize();\n  }\n\n  /**\n   * Subscribes to user authentication changes and performs necessary actions.\n   * @type {Subscription}\n   */\n  public user$: Subscription = this.authService.user$.pipe(\n    takeUntil(this.destroy$)\n  ).subscribe((user) => {\n    if (user) {\n      try {\n        this.authService.getAccessTokenSilently().pipe(\n          takeUntil(this.destroy$)\n        ).subscribe(\n          token => {\n            // Store access token in local storage\n            localStorage.setItem('token', token);\n            // Set user information\n            this.userService.setUserInfo(user);\n            // Redirect to the DEAS module\n            this.router.navigateByUrl(`${APP.DEAS}`);\n          },\n        );\n      } catch (error) {\n        // Remove token from local storage\n        localStorage.removeItem('token');\n        // Handle authentication error\n        this.userService.setUserError(error as Auth0Error);\n      }\n    }\n  });\n\n  /**\n   * Initializes the authentication process.\n   * @returns {void}\n   */\n  private initialize(): void {\n    this.authService.isAuthenticated$.subscribe(isAuthenticated => {\n      // Redirect to login page if user is not authenticated\n      if (!isAuthenticated)\n        this.authService.loginWithRedirect();\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./user-login-system.component.scss\n                \n                \n:host {\n  width: 100% !important;\n  height: 100vh !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CardComponent', 'selector': 'app-card'},{'name': 'ChipComponent', 'selector': 'app-chip'},{'name': 'ChipsetComponent', 'selector': 'app-chip-set'},{'name': 'ClusterComponent', 'selector': 'app-cluster'},{'name': 'DeasComponent', 'selector': 'app-deas'},{'name': 'HubComponent', 'selector': 'app-hub'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MitreAttackComponent', 'selector': 'app-mitre-attack'},{'name': 'ModalComponent', 'selector': 'app-modal'},{'name': 'UserLoginSystemComponent', 'selector': 'app-user-login-system'}];\n    var DIRECTIVES = [{'name': 'TooltipDirective', 'selector': '[tooltip]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserLoginSystemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserModel.html":{"url":"interfaces/UserModel.html","title":"interface - UserModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modules/user/models/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing a user model.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            email_verified\n                                        \n                                \n                                \n                                        \n                                            family_name\n                                        \n                                \n                                \n                                        \n                                            given_name\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nickname\n                                        \n                                \n                                \n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            sub\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's email address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email_verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email_verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicates whether the user's email address has been verified.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        family_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's family name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        given_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        given_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's given name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's full name.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's nickname.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL of the user's picture.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's unique identifier.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The date and time when the user's profile was last updated.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface UserModel {\n  /**\n   * The user's given name.\n   * @type {string}\n   */\n  given_name: string;\n\n  /**\n   * The user's family name.\n   * @type {string}\n   */\n  family_name: string;\n\n  /**\n   * The user's nickname.\n   * @type {string}\n   */\n  nickname: string;\n\n  /**\n   * The user's full name.\n   * @type {string}\n   */\n  name: string;\n\n  /**\n   * The URL of the user's picture.\n   * @type {string}\n   */\n  picture: string;\n\n  /**\n   * The date and time when the user's profile was last updated.\n   * @type {string}\n   */\n  updated_at: string;\n\n  /**\n   * The user's email address.\n   * @type {string}\n   */\n  email: string;\n\n  /**\n   * Indicates whether the user's email address has been verified.\n   * @type {boolean}\n   */\n  email_verified: boolean;\n\n  /**\n   * The user's unique identifier.\n   * @type {string}\n   */\n  sub: string;\n}\n\n/**\n * Interface representing an error response from Auth0.\n */\nexport interface Auth0Error {\n  /**\n   * The type of error.\n   * @type {string}\n   */\n  error: string;\n\n  /**\n   * Additional description of the error.\n   * @type {string | undefined}\n   */\n  error_description?: string;\n\n  /**\n   * A message describing the error.\n   * @type {string | undefined}\n   */\n  message?: string;\n}\n\n/**\n * Type representing possible error types from Auth0.\n */\nexport type Auth0ErrorType = 'login_required' | 'consent_required' | 'interaction_required';\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modules/user/service/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                    Private\n                                document\n                            \n                            \n                                    Private\n                                http\n                            \n                            \n                                    Private\n                                userFacade\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                setUserError\n                            \n                            \n                                    Public\n                                setUserInfo\n                            \n                            \n                                    Public\n                                setUserLogOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: UserModel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/modules/user/service/user.service.ts:48\n                        \n                    \n\n\n            \n                \n                        Logs in a user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserModel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user to be logged in.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An observable of the logged-in user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setUserError\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserError(error: Auth0Error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/modules/user/service/user.service.ts:87\n                        \n                    \n\n\n            \n                \n                        Handles user authentication error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            Auth0Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The error object returned from the authentication service.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setUserInfo\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserInfo(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/modules/user/service/user.service.ts:58\n                        \n                    \n\n\n            \n                \n                        Sets user information after successful login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The user object containing information from the authentication provider.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setUserLogOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    setUserLogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/modules/user/service/user.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Logs out the current user.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                \n                    \n                        Default value : inject(AuthService)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/service/user.service.ts:35\n                        \n                    \n\n            \n                \n                    The authentication service for handling user authentication.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        document\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Document\n\n                    \n                \n                \n                    \n                        Default value : inject(DOCUMENT)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/service/user.service.ts:41\n                        \n                    \n\n            \n                \n                    The document object representing the DOM document.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        http\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpClient\n\n                    \n                \n                \n                    \n                        Default value : inject(HttpClient)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/service/user.service.ts:23\n                        \n                    \n\n            \n                \n                    The HttpClient instance for making HTTP requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userFacade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserFacade\n\n                    \n                \n                \n                    \n                        Default value : inject(UserFacade)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/modules/user/service/user.service.ts:29\n                        \n                    \n\n            \n                \n                    The user facade service for managing user state.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, map, of, tap } from \"rxjs\";\nimport { Auth0Error, UserModel } from \"../models/user.model\";\nimport { AuthService, User } from \"@auth0/auth0-angular\";\nimport { UserFacade } from \"../store/user.facade\";\nimport { DOCUMENT } from \"@angular/common\";\nexport type ApiResponse = {\n  type: 'success' | 'error',\n  handler: string ,\n  value: T\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n\n/**\n * The HttpClient instance for making HTTP requests.\n * @type {HttpClient}\n */\n  private http: HttpClient = inject(HttpClient);\n\n/**\n * The user facade service for managing user state.\n * @type {UserFacade}\n */\n  private userFacade: UserFacade = inject(UserFacade);\n\n/**\n * The authentication service for handling user authentication.\n * @type {AuthService}\n */\n  public authService: AuthService = inject(AuthService);\n\n/**\n * The document object representing the DOM document.\n * @type {Document}\n */\n  private document: Document = inject(DOCUMENT);\n\n/**\n * Logs in a user.\n * @param {UserModel} user The user to be logged in.\n * @returns {Observable} An observable of the logged-in user.\n */\n  public login(user: UserModel): Observable {\n    return of(user);\n  }\n\n\n  /**\n * Sets user information after successful login.\n * @param {User} user The user object containing information from the authentication provider.\n * @returns {void}\n */\npublic setUserInfo(user: User): void {\n  const userInfo: UserModel = {\n    given_name: user.given_name ?? '',\n    family_name: user.family_name ?? '',\n    nickname: user.nickname ?? '',\n    name: user.name ?? '',\n    picture: user.picture ?? '',\n    updated_at: user.updated_at ?? '',\n    email: user.email ?? '',\n    email_verified: user.email_verified ?? false,\n    sub: user.sub ?? ''\n  };\n  this.userFacade.login(userInfo);\n}\n\n/**\n * Logs out the current user.\n * @returns {void}\n */\npublic setUserLogOut(): void {\n  localStorage.removeItem('token');\n  this.authService.logout({ logoutParams: { returnTo: this.document.location.origin } });\n}\n\n/**\n * Handles user authentication error.\n * @param {Auth0Error} error The error object returned from the authentication service.\n * @returns {void}\n */\npublic setUserError(error: Auth0Error): void {\n  // Redirects user to login page if there's an authentication error\n  this.authService.loginWithRedirect();\n  // Logs the error to the console\n  console.error('Auth_0 error:::', error);\n  // TODO: Add error page in case we need a dedicated UI\n}\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/modules/user/store/user.reducer.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface representing the user state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         UserModel | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserModel | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { UserModel } from '../models/user.model';\nimport { loginSuccess } from './user.actions';\n\n/**\n * Key used to access the user authentication feature state within the store.\n * @type {string}\n */\nexport const authFeatureKey = 'auth';\n\n/**\n * Interface representing the user state.\n */\nexport interface UserState {\n  user: UserModel | null;\n}\n\n/**\n * Initial state for the user feature.\n * @type {UserState}\n */\nconst initialState: UserState = {\n  user: null,\n};\n\n/**\n * Reducer function to handle user-related actions and update the user state accordingly.\n * @type {Reducer}\n */\nexport const userReducer = createReducer(\n  initialState,\n  on(loginSuccess, (state, { user }) => ({ ...state, user })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth0-guard.ts\n            \n            injectable\n            Auth0_Guard\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/api.interceptor.ts\n            \n            function\n            modifyReq\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/api.interceptor.ts\n            \n            function\n            modifyUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/api.interceptor.ts\n            \n            variable\n            apiInterceptor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/models/user.model.ts\n            \n            interface\n            Auth0Error\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/models/user.model.ts\n            \n            interface\n            UserModel\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.actions.ts\n            \n            variable\n            login\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.actions.ts\n            \n            variable\n            loginSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.effects.ts\n            \n            injectable\n            UserEffects\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.facade.ts\n            \n            injectable\n            UserFacade\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.reducer.ts\n            \n            interface\n            UserState\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.reducer.ts\n            \n            variable\n            authFeatureKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.reducer.ts\n            \n            variable\n            initialState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.reducer.ts\n            \n            variable\n            userReducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.selectors.ts\n            \n            variable\n            getUserFeature\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/store/user.selectors.ts\n            \n            variable\n            user$\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/user-login-system/user-login-system.component.ts\n            \n            component\n            UserLoginSystemComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/core/modules/user/user-login-system/user-login-system.component.ts\n            \n            variable\n            UI_USER_LOGIN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/providers/auth0.providers.ts\n            \n            variable\n            auth0Providers\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/libraries/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/libraries/components/card/card.component.ts\n            \n            variable\n            CARD_DIRECTIVES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/libraries/components/chip-set/chip-set.component.ts\n            \n            component\n            ChipsetComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/libraries/components/chip-set/chip-set.component.ts\n            \n            variable\n            UI_CHIPSET\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/libraries/components/chip/chip.component.ts\n            \n            component\n            ChipComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/libraries/components/cluster/cluster.component.ts\n            \n            component\n            ClusterComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/libraries/components/cluster/cluster.component.ts\n            \n            variable\n            CLUSTER_DIRECTIVES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/libraries/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/libraries/components/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/libraries/components/modal/modal.component.ts\n            \n            variable\n            UI_MODAL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/libraries/directives/tooltip.directive.ts\n            \n            directive\n            TooltipDirective\n            \n                83 %\n                (15/18)\n            \n        \n        \n            \n                \n                src/app/libraries/models/card.model.ts\n            \n            interface\n            CardConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/libraries/models/card.model.ts\n            \n            interface\n            CardFooter\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/libraries/models/card.model.ts\n            \n            interface\n            CardHeader\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/libraries/models/chip.model.ts\n            \n            interface\n            ChipConfig\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/libraries/models/chipset.model.ts\n            \n            interface\n            ChipsetConfig\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/libraries/models/chipset.model.ts\n            \n            interface\n            ChipsetContent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/libraries/models/chipset.model.ts\n            \n            interface\n            ChipsetHeader\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/libraries/models/cluster.model.ts\n            \n            interface\n            ClusterConfig\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/libraries/models/mitre-attack.model.ts\n            \n            interface\n            MitreAttackConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/libraries/models/mitre-attack.model.ts\n            \n            interface\n            MitreAttackFooter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/libraries/models/mitre-attack.model.ts\n            \n            interface\n            MitreAttackHeader\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/libraries/models/mitre-attack.model.ts\n            \n            interface\n            MitreAttackInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/libraries/models/mitre-attack.model.ts\n            \n            interface\n            MitreCells\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/libraries/models/mitre-attack.model.ts\n            \n            interface\n            MitreCellsContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/libraries/models/modal.model.ts\n            \n            interface\n            ModalConfig\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/libraries/models/modal.model.ts\n            \n            interface\n            ModalContent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/modules/deas/deas.component.ts\n            \n            component\n            DeasComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/deas.component.ts\n            \n            variable\n            MODULES_CORE_DEAS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/hub.component.ts\n            \n            component\n            HubComponent\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/hub.component.ts\n            \n            variable\n            DIRECTIVES_HUB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/hub.component.ts\n            \n            variable\n            MODULES_HUB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/hub.component.ts\n            \n            variable\n            UI_KIT_HUB\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/services/hub.service.ts\n            \n            injectable\n            HubService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.actions.ts\n            \n            variable\n            filterMitreData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.actions.ts\n            \n            variable\n            filterMitreDataSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.actions.ts\n            \n            variable\n            getMitreData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.actions.ts\n            \n            variable\n            getMitreDataSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.effects.ts\n            \n            injectable\n            HubEffects\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.facade.ts\n            \n            injectable\n            HubFacade\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.reducer.ts\n            \n            interface\n            HubState\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.reducer.ts\n            \n            variable\n            HubListFeatureKey\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.reducer.ts\n            \n            variable\n            hubReducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.reducer.ts\n            \n            variable\n            initialState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.selectors.ts\n            \n            variable\n            hubFeature\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.selectors.ts\n            \n            variable\n            mitreData$\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/hub/store/hub.selectors.ts\n            \n            variable\n            mitreDataFilter$\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/mitre-attack/mitre-attack.component.ts\n            \n            component\n            MitreAttackComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/modules/deas/mitre-attack/mitre-attack.component.ts\n            \n            variable\n            UI_MITRE_ATTACK\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/deas/mitre-attack/services/mitre-attack.service.ts\n            \n            injectable\n            MitreAttackService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/shared/constants/endpoints.ts\n            \n            variable\n            ENDPOINTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/constants/endpoints.ts\n            \n            variable\n            VERSIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/constants/groupHackers.model.ts\n            \n            variable\n            HackersMock\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/constants/image.path.ts\n            \n            variable\n            IMAGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/model/mitre.model.ts\n            \n            interface\n            Definition\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/shared/model/mitre.model.ts\n            \n            interface\n            ExternalReference\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/model/mitre.model.ts\n            \n            interface\n            KillChainPhase\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/shared/model/mitre.model.ts\n            \n            interface\n            MitreAttackData\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/model/mitre.model.ts\n            \n            interface\n            MitreAttackInfo\n            \n                2 %\n                (1/46)\n            \n        \n        \n            \n                \n                src/app/shared/routes/route.model.ts\n            \n            variable\n            APP\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/routes/route.model.ts\n            \n            variable\n            APP_CALLBACK\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/routes/route.model.ts\n            \n            variable\n            ROUTE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.test.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @auth0/auth0-angular : ^2.2.3\n        \n            @ng-bootstrap/ng-bootstrap : ^16.0.0\n        \n            @ngrx/effects : ^17.2.0\n        \n            @ngrx/store : ^17.2.0\n        \n            @ngrx/store-devtools : ^17.2.0\n        \n            @popperjs/core : ^2.11.8\n        \n            angular-highcharts : ^16.0.0\n        \n            bootstrap : ^5.3.3\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CardAction   (src/.../card.model.ts)\n                        \n                        \n                            CardIcon   (src/.../card.model.ts)\n                        \n                        \n                            HackerType   (src/.../groupHackers.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/libraries/models/card.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CardAction\n                    \n                \n                    \n                        \n                            Enum representing different actions for a card component.\n\n                        \n                    \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 SETTINGS\n                            \n                        \n                        \n                            \n                                Value : settings\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        CardIcon\n                    \n                \n                    \n                        \n                            Enum representing different icons for a card component.\n\n                        \n                    \n                        \n                            \n                                 info\n                            \n                        \n                        \n                            \n                                Value : fa fa-info-circle\n                            \n                        \n                        \n                            \n                                 settings\n                            \n                        \n                        \n                            \n                                Value : fa fa-gear\n                            \n                        \n            \n        \n\n    src/app/shared/constants/groupHackers.model.ts\n    \n        \n            \n                \n                    \n                        \n                        HackerType\n                    \n                \n                        \n                            \n                                 APT28\n                            \n                        \n                        \n                            \n                                Value : APT28\n                            \n                        \n                        \n                            \n                                 APT29\n                            \n                        \n                        \n                            \n                                Value : APT29\n                            \n                        \n                        \n                            \n                                 GENERIC\n                            \n                        \n                        \n                            \n                                Value : GENERIC\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            modifyReq   (src/.../api.interceptor.ts)\n                        \n                        \n                            modifyUrl   (src/.../api.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/interceptors/api.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        modifyReq\n                        \n                    \n                \n            \n            \n                \nmodifyReq(request: HttpRequest, token: string)\n                \n            \n\n\n\n\n            \n                \n                        Modifies the request by adding authorization token to headers.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The HTTP request to be modified.\n\n                                            \n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The authorization token.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpRequest<>\n\n                        \n                            \n                                The modified HTTP request.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyUrl\n                        \n                    \n                \n            \n            \n                \nmodifyUrl(url: string)\n                \n            \n\n\n\n\n            \n                \n                        Modifies the URL of the request if necessary.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The original URL of the request.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The modified URL.\n\n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDeasDemo\nAn application that organizes and displays the tactics, techniques, and subtechniques of the Mitre ATT&CK framework, including usage relationships with various malicious actors (e.g., APT28). This application allows filtering and visualization of data based on specific threat actor groups, making threat analysis easier.\nDemo References\n(https://attack.mitre.org/)\n(https://attack.mitre.org/groups/)\n(https://mitre-attack.github.io/attack-navigator//#layerURL=https%3A%2F%2Fattack.mitre.org%2Fgroups%2FG0007%2FG0007-enterprise-layer.json)\nJSON data\nhttps://github.com/mitre/cti/blob/master/enterprise-attack/enterprise-attack.json\nFigma Output\nhttps://www.figma.com/proto/526imlMQDt7KkcfgAeKcd5/DEAS---AI-SOC-FW?page-id=0%3A1&node-id=977-49407&viewport=-9649%2C-10203%2C0.3&t=l5l2apWZhioSA6RT-1&scaling=scale-down&starting-point-node-id=722%3A60720\nDeasDemo Project\nThis project was generated with Angular CLI version 17.\nOpen API Mocker\nTo install the open-api-mocker package globally, run the following command:\nnpm i -g open-api-mocker\nOpen API Start Mock Server\nTo start the mock server run the server-start script:\nnpm run server start\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Christian Castro\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    25 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiResponse   (src/.../user.service.ts)\n                        \n                        \n                            Auth0ErrorType   (src/.../user.model.ts)\n                        \n                        \n                            ExtendedMitreAttackInfo   (src/.../hub.models.ts)\n                        \n                        \n                            MitreType   (src/.../mitre.model.ts)\n                        \n                        \n                            RelationshipType   (src/.../mitre.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/modules/user/service/user.service.ts\n    \n    \n        \n            \n                \n                    \n                    ApiResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/app/core/modules/user/models/user.model.ts\n    \n    \n        \n            \n                \n                    \n                    Auth0ErrorType\n                \n            \n            \n                \n                    Type representing possible error types from Auth0.\n\n                \n            \n            \n                \n                            \"login_required\" | \"consent_required\" | \"interaction_required\"\n\n                \n            \n        \n    \n    src/app/modules/deas/hub/models/hub.models.ts\n    \n    \n        \n            \n                \n                    \n                    ExtendedMitreAttackInfo\n                \n            \n            \n                \n                    Represents extended information for a Mitre Attack.\nExtends the base MitreAttackInfo type.\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/app/shared/model/mitre.model.ts\n    \n    \n        \n            \n                \n                    \n                    MitreType\n                \n            \n            \n                \n                    Type for Mitre Attack data type.\n\n                \n            \n            \n                \n                        \"bundle\" | \"marking-definition\" | \"definition\" | \"x-mitre-matrix\" | \"x-mitre-tactic\" | \"course-of-action\" | \"tool\" | \"attack-pattern\" | \"relationship\" | \"malware\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RelationshipType\n                \n            \n            \n                \n                    Type for Relationship type in Mitre Attack data.\n\n                \n            \n            \n                \n                        \"mitigates\" | \"uses\" | \"detects\" | \"subtechnique-of\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiInterceptor   (src/.../api.interceptor.ts)\n                        \n                        \n                            APP   (src/.../route.model.ts)\n                        \n                        \n                            APP_CALLBACK   (src/.../route.model.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            auth0Providers   (src/.../auth0.providers.ts)\n                        \n                        \n                            authFeatureKey   (src/.../user.reducer.ts)\n                        \n                        \n                            CARD_DIRECTIVES   (src/.../card.component.ts)\n                        \n                        \n                            CLUSTER_DIRECTIVES   (src/.../cluster.component.ts)\n                        \n                        \n                            DIRECTIVES_HUB   (src/.../hub.component.ts)\n                        \n                        \n                            ENDPOINTS   (src/.../endpoints.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            filterMitreData   (src/.../hub.actions.ts)\n                        \n                        \n                            filterMitreDataSuccess   (src/.../hub.actions.ts)\n                        \n                        \n                            getMitreData   (src/.../hub.actions.ts)\n                        \n                        \n                            getMitreDataSuccess   (src/.../hub.actions.ts)\n                        \n                        \n                            getUserFeature   (src/.../user.selectors.ts)\n                        \n                        \n                            HackersMock   (src/.../groupHackers.model.ts)\n                        \n                        \n                            hubFeature   (src/.../hub.selectors.ts)\n                        \n                        \n                            HubListFeatureKey   (src/.../hub.reducer.ts)\n                        \n                        \n                            hubReducer   (src/.../hub.reducer.ts)\n                        \n                        \n                            IMAGE   (src/.../image.path.ts)\n                        \n                        \n                            initialState   (src/.../user.reducer.ts)\n                        \n                        \n                            initialState   (src/.../hub.reducer.ts)\n                        \n                        \n                            login   (src/.../user.actions.ts)\n                        \n                        \n                            loginSuccess   (src/.../user.actions.ts)\n                        \n                        \n                            mitreData$   (src/.../hub.selectors.ts)\n                        \n                        \n                            mitreDataFilter$   (src/.../hub.selectors.ts)\n                        \n                        \n                            MODULES_CORE_DEAS   (src/.../deas.component.ts)\n                        \n                        \n                            MODULES_HUB   (src/.../hub.component.ts)\n                        \n                        \n                            ROUTE   (src/.../route.model.ts)\n                        \n                        \n                            UI_CHIPSET   (src/.../chip-set.component.ts)\n                        \n                        \n                            UI_KIT_HUB   (src/.../hub.component.ts)\n                        \n                        \n                            UI_MITRE_ATTACK   (src/.../mitre-attack.component.ts)\n                        \n                        \n                            UI_MODAL   (src/.../modal.component.ts)\n                        \n                        \n                            UI_USER_LOGIN   (src/.../user-login-system.component.ts)\n                        \n                        \n                            user$   (src/.../user.selectors.ts)\n                        \n                        \n                            userReducer   (src/.../user.reducer.ts)\n                        \n                        \n                            VERSIONS   (src/.../endpoints.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/interceptors/api.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  request: HttpRequest,\n  next: HttpHandlerFn\n): Observable> => {\n  const userFacade = inject(UserFacade);\n  const authService = inject(AuthService);\n\n  console.log('interceptor');\n  return authService.getAccessTokenSilently().pipe(\n    switchMap((token) => {\n      if (!token) {\n        return throwError(() => new Error('Auth0 Token not present'));\n      }\n      return next(modifyReq(request, token));\n    }),\n    catchError((err) => {\n      // Handle errors\n      if (err.error) {\n        return throwError(() => new Error('network error'));\n      }\n      return throwError(() => err);\n    })\n  );\n}\n                    \n                \n\n            \n                \n                    Interceptor for API requests to add authorization token.\n\n                \n            \n\n        \n    \n\n    src/app/shared/routes/route.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        APP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Domain for the main application.\n   * @type {string}\n   */\n  DEAS: 'deas',\n\n  /**\n   * Domain for testing purposes.\n   * @type {string}\n   */\n  TEST: 'test',\n}\n                    \n                \n\n            \n                \n                    Constants related to the application routes and domains.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        APP_CALLBACK\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Callback domain for OAuth.\n   * @type {string}\n   */\n  AUTH0: 'oauth/callback',\n}\n                    \n                \n\n            \n                \n                    Constants related to application callback domains.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROUTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Route for user authentication.\n   * @type {string}\n   */\n  USER_AUTH: 'user-auth',\n\n  /**\n   * Route for the Hub feature.\n   * @type {string}\n   */\n  HUB: 'hub',\n}\n                    \n                \n\n            \n                \n                    Constants related to application routes.\n\n                \n            \n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    /**\n     * Provides authentication services using Auth0.\n     * @type {Provider[]}\n     */\n    auth0Providers,\n\n    /**\n     * Configures the application's routes.\n     * @type {Provider}\n     */\n    provideRouter(routes),\n\n    /**\n     * Provides HTTP client services for making HTTP requests.\n     * @type {Provider}\n     */\n    provideHttpClient(),\n\n    // Uncomment the following line to provide HTTP client with an API interceptor.\n    // provideHttpClient(withInterceptors([apiInterceptor])),\n\n    /**\n     * Configures the application's state management using NgRx store.\n     * @type {Provider}\n     */\n    provideStore({ auth: userReducer, hub: hubReducer }),\n\n    /**\n     * Configures the effects for the application's state management.\n     * @type {Provider}\n     */\n    provideEffects([UserEffects, HubEffects]),\n\n    /**\n     * Configures the Redux DevTools for debugging the application's state.\n     * @type {Provider}\n     */\n    provideStoreDevtools(),\n\n    /**\n     * Provides animation services for the application.\n     * @type {Provider}\n     */\n    provideAnimations(),\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuration object for the application.\n\n                \n            \n\n        \n    \n\n    src/app/core/providers/auth0.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        auth0Providers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : importProvidersFrom(\n  AuthModule.forRoot({\n    domain: environment.auth0.domain,\n    clientId: environment.auth0.clientId,\n    authorizationParams: {\n      redirect_uri: `${environment.deployUrl}/${environment.auth0.redirect_uri}`\n    },\n  })\n)\n                    \n                \n\n            \n                \n                    Providers for configuring Auth0 authentication.\n\n                \n            \n\n        \n    \n\n    src/app/core/modules/user/store/user.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth'\n                    \n                \n\n            \n                \n                    Key used to access the user authentication feature state within the store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: null,\n}\n                    \n                \n\n            \n                \n                    Initial state for the user feature.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(loginSuccess, (state, { user }) => ({ ...state, user })),\n)\n                    \n                \n\n            \n                \n                    Reducer function to handle user-related actions and update the user state accordingly.\n\n                \n            \n\n        \n    \n\n    src/app/libraries/components/card/card.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CARD_DIRECTIVES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  TooltipDirective\n]\n                    \n                \n\n            \n                \n                    Array of modules used in the Card component.\n\n                \n            \n\n        \n    \n\n    src/app/libraries/components/cluster/cluster.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CLUSTER_DIRECTIVES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  TooltipDirective\n]\n                    \n                \n\n            \n                \n                    Array containing cluster directives.\n\n                \n            \n\n        \n    \n\n    src/app/modules/deas/hub/hub.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DIRECTIVES_HUB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  TooltipDirective\n]\n                    \n                \n\n            \n                \n                    Array of directives used in the Hub component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MODULES_HUB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  RouterModule,\n  CommonModule\n]\n                    \n                \n\n            \n                \n                    Array of modules used in the hub component.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UI_KIT_HUB\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  MitreAttackComponent,\n  LoaderComponent,\n  CardComponent,\n  ClusterComponent\n]\n                    \n                \n\n            \n                \n                    Array containing components related to the UI kit hub.\n\n                \n            \n\n        \n    \n\n    src/app/shared/constants/endpoints.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENDPOINTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Endpoint for Mitre API.\n   */\n  MITRE: `${VERSIONS.V1}/mitre`,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        VERSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Version 1 of the API.\n   */\n  V1: 'v1',\n}\n                    \n                \n\n            \n                \n                    Constant containing API version endpoints.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Specifies whether the application is in production mode.\n   * @type {boolean}\n   */\n  production: true,\n\n  /**\n   * The base URL for deployment.\n   * @type {string}\n   */\n  deployUrl: '',\n\n  /**\n   * The base URL for the API.\n   * @type {string}\n   */\n  apiUrl: '',\n\n  /**\n   * Configuration for Auth0 authentication.\n   * @type {Object}\n   * @namespace Auth0Config\n   */\n  auth0: {\n    /**\n     * The Auth0 domain.\n     * @type {string}\n     */\n    domain: '',\n\n    /**\n     * The Auth0 client ID.\n     * @type {string}\n     */\n    clientId: '',\n\n    /**\n     * The redirect URI after authentication.\n     * @type {string}\n     */\n    redirect_uri: 'oauth/callback',\n  }\n}\n                    \n                \n\n            \n                \n                    Configuration for the Angular application environment.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Specifies whether the application is in production mode.\n   * @type {boolean}\n   */\n  production: false,\n\n  /**\n   * The base URL for deployment.\n   * @type {string}\n   */\n  deployUrl: '',\n\n  /**\n   * The base URL for the API.\n   * @type {string}\n   */\n  apiUrl: '',\n\n  /**\n   * Configuration for Auth0 authentication.\n   * @type {Object}\n   * @namespace Auth0Config\n   */\n  auth0: {\n    /**\n     * The Auth0 domain.\n     * @type {string}\n     */\n    domain: 'dev-756oxaa4sgzh74rf.us.auth0.com',\n\n    /**\n     * The Auth0 client ID.\n     * @type {string}\n     */\n    clientId: 'Jm23xL7WtU0ozm8Sb8lITLFyMWs38a70',\n\n    /**\n     * The redirect URI after authentication.\n     * @type {string}\n     */\n    redirect_uri: 'oauth/callback',\n  }\n}\n                    \n                \n\n            \n                \n                    Configuration for the Angular application environment.\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Specifies whether the application is in production mode.\n   * @type {boolean}\n   */\n  production: false,\n\n  /**\n   * The base URL for deployment.\n   * @type {string}\n   */\n  deployUrl: 'http://localhost:4200',\n\n  /**\n   * The base URL for the API.\n   * @type {string}\n   */\n  apiUrl: 'http://localhost:1234',\n\n  /**\n   * Configuration for Auth0 authentication.\n   * @type {Object}\n   * @namespace Auth0Config\n   */\n  auth0: {\n    /**\n     * The Auth0 domain.\n     * @type {string}\n     */\n    domain: 'dev-756oxaa4sgzh74rf.us.auth0.com',\n\n    /**\n     * The Auth0 client ID.\n     * @type {string}\n     */\n    clientId: 'Jm23xL7WtU0ozm8Sb8lITLFyMWs38a70',\n\n    /**\n     * The redirect URI after authentication.\n     * @type {string}\n     */\n    redirect_uri: 'oauth/callback',\n  }\n}\n                    \n                \n\n            \n                \n                    Configuration for the Angular application environment.\n\n                \n            \n\n        \n    \n\n    src/app/modules/deas/hub/store/hub.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        filterMitreData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Filter Mitre Data] Filter Mitre Data',\n  props()\n)\n                    \n                \n\n            \n                \n                    Action to initiate the filtering of Mitre data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterMitreDataSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Filter Mitre Data Success] Filter Mitre Data success',\n  props()\n)\n                    \n                \n\n            \n                \n                    Action dispatched when Mitre data filtering is successful.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMitreData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Get Mitre Data] Get Mitre Data')\n                    \n                \n\n            \n                \n                    Action to initiate the retrieval of Mitre data.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMitreDataSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Get Mitre Data Success] Get Mitre Data success',\n  props()\n)\n                    \n                \n\n            \n                \n                    Action dispatched when Mitre data retrieval is successful.\n\n                \n            \n\n        \n    \n\n    src/app/core/modules/user/store/user.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUserFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(authFeatureKey)\n                    \n                \n\n            \n                \n                    Selector function to retrieve the user feature state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(getUserFeature, ({ user }) => user)\n                    \n                \n\n            \n                \n                    Selector function to retrieve the current user from the user feature state.\n\n                \n            \n\n        \n    \n\n    src/app/shared/constants/groupHackers.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HackersMock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  [HackerType.APT28] : {\n    title: 'Mitre Attack',\n    name: 'APT28',\n    external_id: 'G0007',\n    aliases:\n    {\n      header:[\n        {\n          label: 'Nome',\n          size:'col-6 col-md-4 col-lg-1'\n        },\n        {\n          label: 'ID Esterno',\n          size:'col-6 col-md-4 col-lg-1'\n\n        },\n        {\n          label: 'Alias',\n          size:'col-6 col-md-4 col-lg-10'\n        }\n      ],\n      content:[\n        {\n          size:'col-6 col-md-4 col-lg-1',\n          chips:[\n            {\n              label: 'APT28',\n              isDark: true,\n            }\n          ]\n        },\n        {\n          size:'col-6 col-md-4 col-lg-1',\n          chips:[\n            {\n              label: 'G0007',\n              isDark: true,\n            }\n          ]\n        },\n        {\n          size:'col-6 col-md-4 col-lg-10',\n          class: 'd-lg-flex gap-12',\n          chips:[\n            {\n              label: 'Iron Twilight-1',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-2',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-3',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-4',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-5',\n              class: 'my-2 my-lg-0'\n            }\n          ]\n        },\n\n      ]\n    },\n    description: \" APT28  is a threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) 85th Main Special Service Center (GTsSS) military unit 26165.(Citation: NSA/FBI Drovorub August 2020)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021) This group has been active since at least 2004.(Citation: DOJ GRU Indictment Jul 2018)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Crowdstrike DNC June 2016)(Citation: FireEye APT28)(Citation: SecureWorks TG-4127)(Citation: FireEye  APT28 January 2017)(Citation: GRIZZLY STEPPE JAR)(Citation: Sofacy DealersChoice)(Citation: Palo Alto Sofacy 06-2018)(Citation: Symantec APT28 Oct 2018)(Citation: ESET Zebrocy May 2019) APT28 reportedly compromised the Hillary Clinton campaign, the Democratic National Committee, and the Democratic Congressional Campaign Committee in 2016 in an attempt to interfere with the U.S. presidential election. (Citation: Crowdstrike DNC June 2016) In 2018, the US indicted five GRU Unit 26165 officers associated with APT28 for cyber operations (including close-access operations) conducted between 2014 and 2018 against the World Anti-Doping Agency (WADA), the US Anti-Doping Agency, a US nuclear facility, the Organization for the Prohibition of Chemical Weapons (OPCW), the Spiez Swiss Chemicals Laboratory, and other organizations.(Citation: US District Court Indictment GRU Oct 2018) Some of these were conducted with the assistance of GRU Unit 74455, which is also referred to as Sandworm Team.\",\n    link: 'https://attack.mitre.org/groups/G0007/',\n    ipAdresss: '139.5.177.205'\n  },\n\n  [HackerType.APT29]: {\n    title: 'Mitre Attack',\n    name: 'APT29',\n    external_id: 'G0008',\n    aliases:\n    {\n      header:[\n        {\n          label: 'Nome',\n          size:'col-6 col-md-4 col-lg-1'\n        },\n        {\n          label: 'ID Esterno',\n          size:'col-6 col-md-4 col-lg-1'\n\n        },\n        {\n          label: 'Alias',\n          size:'col-6 col-md-4 col-lg-10'\n        }\n      ],\n      content:[\n        {\n          size:'col-6 col-md-4 col-lg-1',\n          chips:[\n            {\n              label: 'APT29',\n              isDark: true,\n            }\n          ]\n        },\n        {\n          size:'col-6 col-md-4 col-lg-1',\n          chips:[\n            {\n              label: 'G0008',\n              isDark: true,\n            }\n          ]\n        },\n        {\n          size:'col-6 col-md-4 col-lg-10',\n          class: 'd-lg-flex gap-12',\n          chips:[\n            {\n              label: 'Iron Twilight-1',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-2',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-3',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-4',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Iron Twilight-5',\n              class: 'my-2 my-lg-0'\n            }\n          ]\n        },\n\n      ]\n    },\n    description: \"APT29 is threat group that has been attributed to Russia's Foreign Intelligence Service (SVR).[1][2] They have operated since at least 2008, often targeting government networks in Europe and NATO member countries, research institutes, and think tanks. APT29 reportedly compromised the Democratic National Committee starting in the summer of 2015.[3][4][5][6]. In April 2021, the US and UK governments attributed the SolarWinds Compromise to the SVR; public statements included citations to APT29, Cozy Bear, and The Dukes.[7][8] Industry reporting also referred to the actors involved in this campaign as UNC2452, NOBELIUM, StellarParticle, Dark Halo, and SolarStorm.[9][10][11][12][13][14]\",\n    link: 'https://attack.mitre.org/groups/G0007/',\n    ipAdresss: '139.5.177.205'\n  },\n [HackerType.GENERIC]:{\n    title: 'Mitre Attack',\n    name: 'GENERIC',\n    external_id: 'G0000',\n    aliases:\n    {\n      header:[\n        {\n          label: 'Nome',\n          size:'col-6 col-md-4 col-lg-1'\n        },\n        {\n          label: 'ID Esterno',\n          size:'col-6 col-md-4 col-lg-1'\n\n        },\n        {\n          label: 'Alias',\n          size:'col-6 col-md-4 col-lg-10'\n        }\n      ],\n      content:[\n        {\n          size:'col-6 col-md-4 col-lg-1',\n          chips:[\n            {\n              label: 'GENERIC',\n              isDark: true,\n            }\n          ]\n        },\n        {\n          size:'col-6 col-md-4 col-lg-1',\n          chips:[\n            {\n              label: 'G0000',\n              isDark: true,\n            }\n          ]\n        },\n        {\n          size:'col-6 col-md-4 col-lg-10',\n          class: 'd-lg-flex gap-12',\n          chips:[\n            {\n              label: 'Generic-1',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Generic-2',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Generic-3',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Generic-4',\n              class: 'my-2 my-lg-0'\n            },\n            {\n              label: 'Generic-5',\n              class: 'my-2 my-lg-0'\n            }\n          ]\n        },\n\n      ]\n    },\n    description: \" GENERIC  Lorem ipsum data Lorem ipsum data  Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data Lorem ipsum data .\",\n    link: '#',\n    ipAdresss: '139.5.174.205'\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/deas/hub/store/hub.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hubFeature\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector(HubListFeatureKey)\n                    \n                \n\n            \n                \n                    Selector to retrieve the Hub feature state from the NgRx store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mitreData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  hubFeature,\n  ({ data }) => data\n)\n                    \n                \n\n            \n                \n                    Selector to retrieve the Mitre data from the Hub feature state.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mitreDataFilter$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  hubFeature,\n  ({ filter }) => filter\n)\n                    \n                \n\n            \n                \n                    Selector to retrieve the Mitre data filter from the Hub feature state.\n\n                \n            \n\n        \n    \n\n    src/app/modules/deas/hub/store/hub.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HubListFeatureKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'hub'\n                    \n                \n\n            \n                \n                    The key for the Hub feature state within the NgRx store.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hubReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n  on(getMitreDataSuccess, (state, { mitreAttackData }) => ({ ...state, data: mitreAttackData })),\n  on(filterMitreDataSuccess, (state, { mitreAttackData, filter }) => ({ ...state, data: mitreAttackData, filter: filter })),\n)\n                    \n                \n\n            \n                \n                    Reducer function for the Hub feature.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HubState\n\n                    \n                \n                \n                    \n                        Default value : {\n  data: null,\n  filter: HackerType.APT28 // Default hacker type filter\n}\n                    \n                \n\n            \n                \n                    Initial state for the Hub feature.\n\n                \n            \n\n        \n    \n\n    src/app/shared/constants/image.path.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IMAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  CARD_POLYGON: 'assets/images/card/polygon.svg'\n}\n                    \n                \n\n            \n                \n                    Constant containing image paths.\n\n                \n            \n\n        \n    \n\n    src/app/core/modules/user/store/user.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth 0 User] Login',\n  props()\n)\n                    \n                \n\n            \n                \n                    Action to initiate the user login process.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth 0 User] Login Success',\n  props()\n)\n                    \n                \n\n            \n                \n                    Action dispatched when user login is successful.\n\n                \n            \n\n        \n    \n\n    src/app/modules/deas/deas.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MODULES_CORE_DEAS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  RouterModule,\n  CommonModule\n]\n                    \n                \n\n            \n                \n                    Array of modules used in the Deas component.\n\n                \n            \n\n        \n    \n\n    src/app/libraries/components/chip-set/chip-set.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UI_CHIPSET\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ChipComponent\n]\n                    \n                \n\n            \n                \n                    Array containing UI chipset components.\n\n                \n            \n\n        \n    \n\n    src/app/modules/deas/mitre-attack/mitre-attack.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UI_MITRE_ATTACK\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ChipComponent,\n  CardComponent,\n  ChipsetComponent,\n  ClusterComponent,\n  LoaderComponent,\n]\n                    \n                \n\n            \n                \n                    Array containing components related to the UI kit Mitre Attack Component.\n\n                \n            \n\n        \n    \n\n    src/app/libraries/components/modal/modal.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UI_MODAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  CardComponent\n]\n                    \n                \n\n            \n                \n                    Array containing UI modal components.\n\n                \n            \n\n        \n    \n\n    src/app/core/modules/user/user-login-system/user-login-system.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UI_USER_LOGIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  LoaderComponent\n]\n                    \n                \n\n            \n                \n                    Array of components used in the Deas component.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
